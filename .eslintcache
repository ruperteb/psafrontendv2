[{"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\index.tsx":"1","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\reportWebVitals.ts":"2","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\resolvers.tsx":"3","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\cache\\cache.tsx":"4","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\App.tsx":"5","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\reactivevariables\\reactivevariables.tsx":"6","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\Loading.tsx":"7","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\gql\\gql.tsx":"8","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PropertyList.tsx":"9","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\Navigation.tsx":"10","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SelectedPropertyListPanel.tsx":"11","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PreviewPDFPanel.tsx":"12","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SelectedPropertyPanel.tsx":"13","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ManageLandlordsPanel.tsx":"14","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\NewPropertyModal.tsx":"15","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SavedListsPanel.tsx":"16","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PropertyListItem.tsx":"17","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\UpdatePropertyModal.tsx":"18","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\LandlordListItem.tsx":"19","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SavedListItem.tsx":"20","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ContactListItem.tsx":"21","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\assets\\svgIcons.js":"22","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\DuplicatePremisesModal.tsx":"23","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PremisesNotesModal.tsx":"24","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\UpdatePremisesModal.tsx":"25","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\NewPremisesModal.tsx":"26","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ImageGalleryModal.tsx":"27","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PremisesList.tsx":"28","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\Map.tsx":"29","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PDFOutput\\SelectedPropertyListPDF.tsx":"30","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PDFOutput\\PropertyListLargeImagesPDF.tsx":"31","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\assets\\pin.js":"32","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ImageSlider.tsx":"33","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PremisesListItem.tsx":"34"},{"size":1523,"mtime":1611065921821,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1611065921823,"results":"37","hashOfConfig":"36"},{"size":466,"mtime":1611065921823,"results":"38","hashOfConfig":"36"},{"size":1402,"mtime":1611065921809,"results":"39","hashOfConfig":"36"},{"size":10292,"mtime":1614073281849,"results":"40","hashOfConfig":"36"},{"size":1483,"mtime":1614073281868,"results":"41","hashOfConfig":"36"},{"size":2514,"mtime":1611065921813,"results":"42","hashOfConfig":"36"},{"size":17703,"mtime":1614178597904,"results":"43","hashOfConfig":"36"},{"size":2486,"mtime":1614073281862,"results":"44","hashOfConfig":"36"},{"size":8164,"mtime":1614073281855,"results":"45","hashOfConfig":"36"},{"size":26655,"mtime":1614073281865,"results":"46","hashOfConfig":"36"},{"size":7712,"mtime":1614073281861,"results":"47","hashOfConfig":"36"},{"size":37199,"mtime":1614179490088,"results":"48","hashOfConfig":"36"},{"size":10817,"mtime":1614073281853,"results":"49","hashOfConfig":"36"},{"size":27324,"mtime":1614073281856,"results":"50","hashOfConfig":"36"},{"size":7913,"mtime":1614073281863,"results":"51","hashOfConfig":"36"},{"size":10350,"mtime":1614073281862,"results":"52","hashOfConfig":"36"},{"size":28455,"mtime":1614073281867,"results":"53","hashOfConfig":"36"},{"size":17858,"mtime":1614073281853,"results":"54","hashOfConfig":"36"},{"size":22007,"mtime":1614073281863,"results":"55","hashOfConfig":"36"},{"size":16156,"mtime":1614073281850,"results":"56","hashOfConfig":"36"},{"size":18904,"mtime":1611065921809,"results":"57","hashOfConfig":"36"},{"size":46134,"mtime":1614179300455,"results":"58","hashOfConfig":"36"},{"size":8735,"mtime":1614073281860,"results":"59","hashOfConfig":"36"},{"size":52138,"mtime":1614179272872,"results":"60","hashOfConfig":"36"},{"size":48812,"mtime":1614179224269,"results":"61","hashOfConfig":"36"},{"size":3813,"mtime":1611065921811,"results":"62","hashOfConfig":"36"},{"size":13427,"mtime":1614073281859,"results":"63","hashOfConfig":"36"},{"size":6556,"mtime":1614178344973,"results":"64","hashOfConfig":"36"},{"size":25259,"mtime":1614073281858,"results":"65","hashOfConfig":"36"},{"size":54561,"mtime":1614091936637,"results":"66","hashOfConfig":"36"},{"size":657,"mtime":1611065921808,"results":"67","hashOfConfig":"36"},{"size":18886,"mtime":1614173928319,"results":"68","hashOfConfig":"36"},{"size":17931,"mtime":1614179028805,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"17wrtg0",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"73"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"73"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"73"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"73"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\index.tsx",["161","162","163","164","165","166","167"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\r\n\r\nimport { AUTH_TOKEN } from './constants'\r\nimport { resolvers, typeDefs } from './resolvers';\r\n\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  gql,\r\n  NormalizedCacheObject,\r\n  ApolloProvider,\r\n  ApolloLink,\r\n  HttpLink, useQuery\r\n} from '@apollo/client';\r\n\r\n\r\nimport { cache } from './cache/cache';\r\n\r\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n  cache,\r\n  link: new HttpLink({\r\n    uri: \"https://psabackendv2.herokuapp.com/\",\r\n    credentials: 'include',\r\n    headers: {\r\n      authorization: localStorage.getItem('token'),\r\n    },\r\n   /*  fetchOptions: {\r\n      mode: 'no-cors',\r\n    }, */\r\n  }),\r\n \r\n  typeDefs,\r\n  resolvers: {},\r\n\r\n\r\n  \r\n});\r\n\r\n\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    ':global(body), :global(html), :global(#root)': {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: '100vh'\r\n    }\r\n  }\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["168","169"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\reportWebVitals.ts",[],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\resolvers.tsx",["170","171"],"import { gql, ApolloCache, Resolvers } from '@apollo/client';\r\n\r\n\r\nexport const typeDefs = gql`\r\n  extend type Query {\r\n    isLoggedIn: Boolean!\r\n    \r\n  }\r\n`;\r\n\r\ntype ResolverFn = (\r\n  parent: any,\r\n  args: any,\r\n  { cache } : { cache: ApolloCache<any> }\r\n) => any;\r\n\r\ninterface ResolverMap {\r\n  [field: string]: ResolverFn;\r\n}\r\n\r\ninterface AppResolvers extends Resolvers {\r\n  // We will update this with our app's resolvers later\r\n}\r\n\r\nexport const resolvers = {};","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\cache\\cache.tsx",[],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\App.tsx",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\nimport {\r\n  Stack, Text, Link, FontWeights, IComboBoxOption,\r\n  IComboBox,\r\n  SelectableOptionMenuItemType,\r\n} from 'office-ui-fabric-react';\r\nimport { GET_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, GET_SELECTED_PROPERTIES , GET_PDF_VARIABLES, GET_LANDLORDS, GET_PROPERTY_LISTS} from \"./gql/gql\"\r\nimport { Query, NavigationState, SelectedPropertyList, Landlord, PropertyList as SavedPropertyList } from \"./schematypes/schematypes\"\r\nimport { gql, useQuery, useApolloClient } from '@apollo/client';\r\nimport Loading from \"./components/Loading\"\r\nimport Navigation from \"./components/Navigation\"\r\nimport PropertyList from \"./components/PropertyList\"\r\nimport NewProperyModal from \"./components/NewPropertyModal\"\r\nimport SelectedPropertyPanel from \"./components/SelectedPropertyPanel\"\r\nimport SelectedPropertyListPanel from \"./components/SelectedPropertyListPanel\"\r\nimport PreviewPDFPanel from \"./components/PreviewPDFPanel\"\r\nimport ManageLandlordsPanel from \"./components/ManageLandlordsPanel\"\r\nimport SavedListsPanel from \"./components/SavedListsPanel\"\r\nimport {Cloudinary} from \"cloudinary-core\"\r\nimport { PDFViewer, PDFDownloadLink, Document, Page } from '@react-pdf/renderer';\r\n\r\nfunction App() {\r\n\r\n  var cl = new Cloudinary({cloud_name: \"drlfedqyz\", secure: true});\r\n\r\n \r\n\r\n\r\n  const [search, setSearch] = React.useState<string | undefined>(\"\");\r\n\r\n\r\n  const {\r\n    data: propertyData,\r\n    loading: propertyLoading,\r\n    error: propertyError\r\n  } = useQuery<Query>(GET_PROPERTIES);\r\n  \r\n  const {\r\n    data: suburbData,\r\n    loading: suburbLoading,\r\n    error: suburbError\r\n  } = useQuery<Query>(GET_DISTINCT_SUBURBS);\r\n\r\n  const {\r\n    data: regionData,\r\n    loading: regionLoading,\r\n    error: regionError\r\n  } = useQuery<Query>(GET_DISTINCT_REGIONS);\r\n\r\n  const {\r\n    data: navigationStateData,\r\n    loading: navigationLoading,\r\n    error: navigationError\r\n  } = useQuery<Query>(GET_NAV_STATE);\r\n\r\n  const {\r\n    data: pdfVariables,\r\n    loading: pdfLoading,\r\n    error: pdfError\r\n  } = useQuery<Query>(GET_PDF_VARIABLES);\r\n\r\n  const {\r\n    data: propertyListData,\r\n    loading: propertyListLoading,\r\n    error: propertyListError\r\n} = useQuery<Query>(GET_SELECTED_PROPERTIES);\r\n\r\nvar propertyIdList = propertyListData?.selectedPropertyList?.map((property) => {\r\n  return property.propertyId\r\n})\r\n\r\n  /* if(suburbData !== undefined) */\r\n  const suburbWC = suburbData?.distinctSuburbs!.filter((suburb) => {\r\n    return (suburb.province === \"WC\")\r\n  })\r\n\r\n  const suburbWCFormatted = suburbWC?.map((suburb) => {\r\n    return { key: `${suburb.suburb} ${suburb.province} `, text: suburb.suburb }\r\n  })\r\n\r\n  const suburbGau = suburbData?.distinctSuburbs!.filter((suburb) => {\r\n    return (suburb.province === \"Gau\")\r\n  })\r\n\r\n  const suburbGauFormatted = suburbGau?.map((suburb) => {\r\n    return { key: `${suburb.suburb} ${suburb.province} `, text: suburb.suburb }\r\n  })\r\n\r\n  const suburbKZN = suburbData?.distinctSuburbs!.filter((suburb) => {\r\n    return (suburb.province === \"KZN\")\r\n  })\r\n\r\n  const suburbKZNFormatted = suburbKZN?.map((suburb) => {\r\n    return { key: `${suburb.suburb} ${suburb.province} `, text: suburb.suburb }\r\n  })\r\n\r\n  const suburbOther = suburbData?.distinctSuburbs!.filter((suburb) => {\r\n    return (suburb.province !== \"KZN\" && suburb.province !== \"Gau\" && suburb.province !== \"WC\")\r\n  })\r\n\r\n  const suburbOtherFormatted = suburbOther?.map((suburb) => {\r\n    return { key: `${suburb.suburb} ${suburb.province} `, text: suburb.suburb }\r\n  })\r\n\r\n  var distinctSuburbsOptions: IComboBoxOption[] = []\r\n  if (suburbWCFormatted !== undefined && suburbGauFormatted !== undefined && suburbKZNFormatted !== undefined && suburbOtherFormatted !== undefined) {\r\n    distinctSuburbsOptions = [\r\n      { key: 'Header1', text: 'Western Cape', itemType: SelectableOptionMenuItemType.Header },\r\n      ...suburbWCFormatted,\r\n      { key: 'divider1', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n      { key: 'Header2', text: 'Gauteng', itemType: SelectableOptionMenuItemType.Header },\r\n      ...suburbGauFormatted,\r\n      { key: 'divider2', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n      { key: 'Header3', text: 'KwaZulu Natal', itemType: SelectableOptionMenuItemType.Header },\r\n      ...suburbKZNFormatted,\r\n      { key: 'divider3', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n      { key: 'Header4', text: 'Other Provinces', itemType: SelectableOptionMenuItemType.Header },\r\n      ...suburbOtherFormatted\r\n    ]\r\n  }\r\n\r\n  const regionWC = regionData?.distinctRegions!.filter((region) => {\r\n    return (region.province === \"WC\")\r\n  })\r\n\r\n  const regionWCFormatted = regionWC?.map((region) => {\r\n    return { key: `${region.region} ${region.province} `, text: region.region }\r\n  })\r\n\r\n  const regionGau = regionData?.distinctRegions!.filter((region) => {\r\n    return (region.province === \"Gau\")\r\n  })\r\n\r\n  const regionGauFormatted = regionGau?.map((region) => {\r\n    return { key: `${region.region} ${region.province} `, text: region.region }\r\n  })\r\n\r\n  const regionKZN = regionData?.distinctRegions!.filter((region) => {\r\n    return (region.province === \"KZN\")\r\n  })\r\n\r\n  const regionKZNFormatted = regionKZN?.map((region) => {\r\n    return { key: `${region.region} ${region.province} `, text: region.region }\r\n  })\r\n\r\n  const regionOther = regionData?.distinctRegions!.filter((region) => {\r\n    return (region.province !== \"KZN\" && region.province !== \"Gau\" && region.province !== \"WC\")\r\n  })\r\n\r\n  const regionOtherFormatted = regionOther?.map((region) => {\r\n    return { key: `${region.region} ${region.province} `, text: region.region }\r\n  })\r\n\r\n  var distinctRegionsOptions: IComboBoxOption[] = []\r\n  if (regionWCFormatted !== undefined && regionGauFormatted !== undefined && regionKZNFormatted !== undefined && regionOtherFormatted !== undefined) {\r\n    distinctRegionsOptions = [\r\n      { key: 'Header1', text: 'Western Cape', itemType: SelectableOptionMenuItemType.Header },\r\n      ...regionWCFormatted,\r\n      { key: 'divider1', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n      { key: 'Header2', text: 'Gauteng', itemType: SelectableOptionMenuItemType.Header },\r\n      ...regionGauFormatted,\r\n      { key: 'divider2', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n      { key: 'Header3', text: 'KwaZulu Natal', itemType: SelectableOptionMenuItemType.Header },\r\n      ...regionKZNFormatted,\r\n      { key: 'divider3', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n      { key: 'Header4', text: 'Other Provinces', itemType: SelectableOptionMenuItemType.Header },\r\n      ...regionOtherFormatted\r\n    ]\r\n  }\r\n\r\n\r\n\r\n  const {\r\n    data: landlordData,\r\n    loading: landlordLoading,\r\n    error: landlordError\r\n} = useQuery<Query>(GET_LANDLORDS);\r\n\r\nvar landLordsList: Landlord[] = landlordData?.landlords!\r\n\r\nconst landlordsFormatted = landLordsList?.map((landlord) => {\r\n  return { key: landlord.landlordName!, text: landlord.landlordName!, data: landlord }\r\n})\r\nvar landlordsOptions: IComboBoxOption[] = []\r\n\r\nif(landlordsFormatted !== undefined) {\r\n  landlordsOptions = [...landlordsFormatted]\r\n}\r\n\r\nconst {\r\n  data: propertyListsData,\r\n  loading: propertyListsLoading,\r\n  error: propertyListsError\r\n} = useQuery<Query>(GET_PROPERTY_LISTS);\r\n\r\nvar propertyLists: SavedPropertyList[] = propertyListsData?.propertyLists!\r\n  \r\n\r\n\r\n  if (propertyLoading) return <Loading></Loading>;\r\n  if (navigationLoading) return <Loading></Loading>;\r\n  if (propertyError) return <h1>ERROR</h1>;\r\n\r\n  var navigationState: NavigationState = {\r\n    showNewPropertyModal: false,\r\n    showUpdatePropertyModal:  false,\r\n    showNewPremisesModal: false,\r\n    showUpdatePremisesModal:  false,\r\n    showDuplicatePremisesModal: false,\r\n    showPremisesNotesModal: false,\r\n    showPreviewPDFPanel: false,\r\n    showFilterModal: false,\r\n    showImageGalleryModal: false,\r\n    selectedPropertyType: \"all\",\r\n    search: \"\",\r\n    showSelectedPropertyListPanel: false,\r\n    showSelectedPropertyPanel: false,\r\n    showManageLandlordsPanel: false,\r\n    showSavedListsPanel: false,\r\n    selectedPropertyId: 0,\r\n    selectedPremisesId: 0,\r\n  }\r\n\r\n  if (navigationStateData !== undefined) {\r\n    navigationState = navigationStateData!.navigationState!\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Stack\r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"start\"\r\n      verticalFill\r\n      styles={{\r\n        root: {\r\n          /*  width: '960px', */\r\n          margin: '0 auto',\r\n          textAlign: 'center',\r\n          color: '#605e5c',\r\n          /*   backgroundColor: \"#b18c481a;\" */\r\n          /* marginTop: \"100px\" */\r\n        }\r\n      }}\r\n      gap={15}\r\n    >\r\n      <Navigation selectedPropertyType={navigationState.selectedPropertyType} setSearch={setSearch} showSelectedPropertyListPanel={navigationState.showSelectedPropertyListPanel} showSavedListsPanel={navigationState.showSavedListsPanel} > </Navigation>\r\n      <PropertyList propertyData={propertyData} search={search}></PropertyList>\r\n      <NewProperyModal showNewPropertyModal={navigationState.showNewPropertyModal} distinctSuburbsOptions={distinctSuburbsOptions} distinctRegionsOptions={distinctRegionsOptions} landlordsOptions={landlordsOptions}></NewProperyModal>\r\n      <SelectedPropertyPanel distinctSuburbsOptions={distinctSuburbsOptions} distinctRegionsOptions={distinctRegionsOptions} landlordsOptions={landlordsOptions}></SelectedPropertyPanel>\r\n      <SelectedPropertyListPanel showSelectedPropertyListPanel={navigationState.showSelectedPropertyListPanel } propertyIdList={propertyIdList!}></SelectedPropertyListPanel>\r\n      <PreviewPDFPanel showPreviewPDFPanel={navigationState.showPreviewPDFPanel} enquiryName={pdfVariables?.pdfVariables?.enquiryName!} agent={pdfVariables?.pdfVariables?.agent!} propertyIdList={propertyIdList!}></PreviewPDFPanel>\r\n      <ManageLandlordsPanel showManageLandlordsPanel={navigationState.showManageLandlordsPanel} landLordsList={landLordsList}></ManageLandlordsPanel>\r\n     <SavedListsPanel showSavedListsPanel={navigationState.showSavedListsPanel} propertyLists={propertyLists} propertyIdList={propertyIdList!}></SavedListsPanel>\r\n    \r\n    </Stack>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\reactivevariables\\reactivevariables.tsx",[],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\Loading.tsx",["198","199","200","201","202","203","204","205","206","207","208","209"],"import React, { memo } from 'react';\r\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, IImageProps, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport HeaderImage from \"../assets/EBLogoHeader.png\"\r\nimport { IStackStyles, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport {\r\n  getTheme,\r\n  mergeStyleSets,\r\n  FontWeights,\r\n  ContextualMenu,\r\n  Text,\r\n  DefaultButton,\r\n  IButtonStyles,\r\n  PrimaryButton,\r\n  IconButton,\r\n  IIconProps,\r\n\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\nconst headerStackStyles: Partial<IStackStyles> = { root: { width: \"100vw\", backgroundColor: \"#20314b\", marginBottom: \"10px\" } };\r\nconst headerImageStyles: Partial<IStackStyles> = { root: { marginLeft: \"auto\", marginRight: \"auto\" } };\r\nconst textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 250 } };\r\nconst primaryButtonStyles: Partial<IButtonStyles> = { root: { /* width: 150, */ marginTop: \"20px !important\" } };\r\nconst signInIcon: IIconProps = { iconName: 'SignIn' };\r\n\r\nconst imageProps: IImageProps = {\r\n  src: HeaderImage,\r\n  imageFit: ImageFit.contain,\r\n};\r\n\r\nexport const Loading: React.FC = memo(() => {\r\n\r\n\r\n  return (\r\n    <Stack\r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"start\"\r\n      verticalFill\r\n      styles={{\r\n        root: {\r\n          /*  width: '960px', */\r\n          margin: '0 auto',\r\n          textAlign: 'center',\r\n          color: '#605e5c',\r\n         /*  backgroundColor: \"rgba(177, 140, 72, 0.1);\" */\r\n\r\n        }\r\n      }}\r\n      gap={15}>\r\n\r\n      <Stack styles={headerStackStyles} horizontal>\r\n        <Image\r\n          {...imageProps}\r\n          alt='Header Image'\r\n          width={400}\r\n          height={100}\r\n          styles={headerImageStyles}\r\n        />\r\n\r\n\r\n      </Stack>\r\n\r\n      <Stack \r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"start\"\r\n      \r\n      styles={{\r\n        root: {\r\n          /*  width: '960px', */\r\n          margin: '0 auto',\r\n          textAlign: 'center',\r\n         /*  color: 'white',\r\n          backgroundColor:\"white\",\r\n          border: \"1px solid rgb(138, 136, 134)\",\r\n          boxShadow: \"2px 3px 11px 7px #00000026\", */\r\n          padding: \"30px\",\r\n          marginTop: \"75px !important\",\r\n\r\n        }\r\n      }}>\r\n\r\n\r\n       \r\n<Spinner styles={{circle: {width: 80, height: 80}}} size={SpinnerSize.large} />\r\n\r\n\r\n      </Stack>\r\n\r\n    </Stack>\r\n\r\n  )\r\n\r\n\r\n\r\n})\r\n\r\nexport default Loading","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\gql\\gql.tsx",[],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PropertyList.tsx",["210","211","212","213","214","215","216","217","218","219"],"import * as React from 'react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Property } from \"../schematypes/schematypes\"\r\nimport { useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport PropertyListItem from \"./PropertyListItem\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n  propertyData: Query | undefined\r\n  search: string | undefined\r\n}\r\n\r\nexport const PropertyList: React.FunctionComponent<Props> = ({ propertyData, search }) => {\r\n\r\n\r\n\r\n\r\n\r\n  var originalPropertyData = propertyData\r\n  var originalProperties = originalPropertyData!.properties!\r\n\r\n  const searchSortedProperties = originalProperties?.filter(property => {\r\n    if (property !== null && property !== undefined) {\r\n      if (property?.address !== null && property?.address !== undefined) {\r\n        if (property?.suburb !== null && property?.suburb !== undefined) {\r\n          if (property?.region !== null && property?.region !== undefined) {\r\n            if (property?.province !== null && property?.province !== undefined) {\r\n              return property?.propertyName.toLowerCase().includes(search!.toLowerCase()) || property?.address.toLowerCase().includes(search!.toLowerCase()) || property?.suburb.toLowerCase().includes(search!.toLowerCase()) || property?.region.toLowerCase().includes(search!.toLowerCase()) || property?.province.toLowerCase().includes(search!.toLowerCase())\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  /* var nameSortedProperties = searchSortedProperties.slice().sort((a, b) => {\r\n    var nameA = a.propertyName!.toUpperCase();\r\n    var nameB = b.propertyName!.toUpperCase();\r\n    if (nameA < nameB) {\r\n        return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}); */\r\n\r\n\r\n\r\n\r\n  /* const onFilterChanged = (_: any, text: string): void => {\r\n    setItems(originalItems.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0));\r\n  }; */\r\n\r\n  return (\r\n    <div>\r\n      {searchSortedProperties.map(property => {\r\n\r\n        return (\r\n          <PropertyListItem key={property?.propertyId} property={property!}> </PropertyListItem>\r\n        )\r\n\r\n      })}\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default PropertyList","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\Navigation.tsx",["220","221","222","223","224","225","226","227","228","229","230","231","232"],"import React from 'react';\r\n\r\nimport { Pivot, PivotItem, IPivotStyles } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { SearchBox, ISearchBoxStyles, } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { Image, IImageProps, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\n\r\nimport { CommandBarButton, IContextualMenuProps, IIconProps, Stack, IStackStyles, initializeIcons, Toggle, IToggleStyles, DefaultButton, IButtonStyles, BaseButton, Button } from 'office-ui-fabric-react';\r\n\r\nimport { isLoggedInVar } from \"../cache/cache\";\r\nimport HeaderImage from \"../assets/EBLogoHeader.png\"\r\n\r\nimport {navigationState} from \"../reactivevariables/reactivevariables\"\r\nimport {NavigationState} from \"../schematypes/schematypes\"\r\n\r\nconst addIcon: IIconProps = { iconName: 'Add' };\r\n\r\nconst filterIcon: IIconProps = { iconName: 'Filter' };\r\nconst checkListIcon: IIconProps = { iconName: 'CheckList' };\r\nconst listIcon: IIconProps = { iconName: 'List' };\r\n\r\nconst pivotStyles: Partial<IPivotStyles> = {\r\n  root: { /* width: \"100vw\", backgroundColor: \"#20314b\", marginBottom: \"10px\" */ },\r\n   link: {\r\n    selectors: {\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(52, 90, 214, 0.14);',\r\n      }\r\n    }\r\n  }, \r\n  linkIsSelected: {\r\n    selectors: {\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(52, 90, 214, 0.14);',\r\n      }\r\n    }\r\n  }\r\n};\r\nconst headerStackStyles: Partial<IStackStyles> = { root: { width: \"100vw\", backgroundColor: \"#20314b\", marginBottom: \"10px\" } };\r\nconst headerImageStyles: Partial<IStackStyles> = { root: { marginLeft: \"37.5%\", marginRight: \"auto\" } };\r\nconst stackStyles: Partial<IStackStyles> = { root: { height: 44 } };\r\nconst searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 300, height: 44 } };\r\nconst toggleStyles: Partial<IToggleStyles> = { container: { marginTop: 5 }, label: { marginLeft: 4 } };\r\nconst commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\" , padding: 15}, icon: { fontSize: 24}};\r\nconst signoutIcon: IIconProps = { iconName: 'SignOut' };\r\n\r\nconst getTabId = (itemKey: string | undefined) => {\r\n  return `NavigationPivot_${itemKey}`;\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n  \r\n  selectedPropertyType: string | undefined,\r\n  setSearch: React.Dispatch<React.SetStateAction<string | undefined>>,\r\n  showSelectedPropertyListPanel: boolean,\r\n  showSavedListsPanel: boolean,\r\n\r\n}\r\n\r\nexport const Navigation: React.FC<Props> = ({  selectedPropertyType,  setSearch,  showSelectedPropertyListPanel, showSavedListsPanel }) => {\r\n  initializeIcons();\r\n\r\n\r\n\r\n  const handleLinkClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n    if (item === undefined) {\r\n      navigationState (\r\n        {\r\n         ...navigationState(),\r\n        selectedPropertyType: \"\",\r\n       \r\n        }\r\n      )\r\n    } else {\r\n      \r\n      navigationState ( {...navigationState(), selectedPropertyType: item.props.itemKey!})\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeSelectedPropertyListToggle = React.useCallback((ev: React.MouseEvent<HTMLElement>, checked: boolean | undefined) => {\r\n    if (showSelectedPropertyListPanel === false) {\r\n      navigationState ( {...navigationState(), showSelectedPropertyListPanel: true})\r\n     \r\n    } else {\r\n      navigationState ( {...navigationState(), showSelectedPropertyListPanel: false})\r\n    }\r\n\r\n  },[showSelectedPropertyListPanel])\r\n\r\n  const onChangeSearch = React.useCallback(\r\n    (event?: React.ChangeEvent<HTMLInputElement>, newValue?: string) => {\r\n\r\n    setSearch(newValue)\r\n  },[setSearch])\r\n\r\n\r\n  const handleSelectedPropertiesClick = React.useCallback((event: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement, MouseEvent>) => {\r\n    if (showSelectedPropertyListPanel === false) {\r\n      navigationState ( {...navigationState(), showSelectedPropertyListPanel: true})\r\n     \r\n    } else {\r\n      navigationState ( {...navigationState(), showSelectedPropertyListPanel: false})\r\n    }\r\n\r\n  },[showSelectedPropertyListPanel])\r\n\r\n  const handleManageListsClick = React.useCallback((event: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement, MouseEvent>) => {\r\n    if (showSavedListsPanel === false) {\r\n      navigationState ( {...navigationState(), showSavedListsPanel: true})\r\n     \r\n    } else {\r\n      navigationState ( {...navigationState(), showSavedListsPanel: false})\r\n    }\r\n\r\n  },[showSavedListsPanel])\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  const imageProps: IImageProps = {\r\n    src: HeaderImage,\r\n    imageFit: ImageFit.contain,\r\n  };\r\n\r\n  const primaryButtonStyles: Partial<IButtonStyles> = { root: { width: 100, marginTop: 30, marginRight: 30 } };\r\n\r\n  return (\r\n    <div>\r\n      <Stack styles={headerStackStyles} horizontal>\r\n        <Image\r\n          {...imageProps}\r\n          alt='Header Image'\r\n          width={400}\r\n          height={100}\r\n          styles={headerImageStyles}\r\n        />\r\n\r\n        {/* <DefaultButton styles={primaryButtonStyles} iconProps={signoutIcon} text=\"Logout\" onClick={() => {\r\n          localStorage.clear();\r\n          isLoggedInVar(false);\r\n          setLoginCallback(true)\r\n\r\n        }}></DefaultButton> */}\r\n\r\n      </Stack>\r\n\r\n\r\n      <Stack horizontalAlign={\"center\"} horizontal gap={15} styles={stackStyles} >\r\n        <CommandBarButton\r\n          iconProps={addIcon}\r\n          text=\"New Property\"\r\n          onClick={() =>navigationState ( {...navigationState(), showNewPropertyModal: true})}\r\n          styles={commandBarStyles}\r\n          style={{width: 110}}\r\n        // Set split=true to render a SplitButton instead of a regular button with a menu\r\n        // split={true}\r\n\r\n        />\r\n\r\n        <CommandBarButton\r\n          iconProps={filterIcon}\r\n          text=\"Filter\"\r\n          onClick={() => navigationState ( {...navigationState(), showFilterModal: true})}\r\n          styles={commandBarStyles}\r\n          style={{width: 90}}\r\n        // Set split=true to render a SplitButton instead of a regular button with a menu\r\n        // split={true}\r\n\r\n        />\r\n\r\n        <SearchBox\r\n          styles={searchBoxStyles}\r\n          placeholder=\"Search\"\r\n          onEscape={ev => {\r\n            console.log('Custom onEscape Called');\r\n          }}\r\n          onClear={ev => {\r\n            console.log('Custom onClear Called');\r\n          }}\r\n          onChange={onChangeSearch}\r\n          onSearch={newValue => console.log('SearchBox onSearch fired: ' + newValue)}\r\n        />\r\n\r\n        {/* <Toggle inlineLabel styles={toggleStyles} label=\"Selected Properties\" checked={showSelectedPropertyListPanel} onChange={onChangeSelectedPropertyListToggle} /> */}\r\n\r\n        <CommandBarButton\r\n          iconProps={checkListIcon}\r\n          text=\"Selected Properties\"\r\n          onClick={handleSelectedPropertiesClick}\r\n          styles={commandBarStyles}\r\n          style={{width: 120}}\r\n        // Set split=true to render a SplitButton instead of a regular button with a menu\r\n        // split={true}\r\n\r\n        />\r\n        <CommandBarButton\r\n          iconProps={listIcon}\r\n          text=\"Manage Lists\"\r\n          onClick={handleManageListsClick}\r\n          styles={commandBarStyles}\r\n          style={{width: 110}}\r\n        // Set split=true to render a SplitButton instead of a regular button with a menu\r\n        // split={true}\r\n\r\n        />\r\n\r\n      </Stack >\r\n\r\n\r\n      {/* <Pivot\r\n        aria-label=\"Navigation Pivot\"\r\n        selectedKey={selectedPropertyType}\r\n        // eslint-disable-next-line react/jsx-no-bind\r\n        onLinkClick={handleLinkClick}\r\n        headersOnly={true}\r\n        getTabId={getTabId}\r\n        style={{ marginTop: \"10px\" }}\r\n        styles={pivotStyles}\r\n      >\r\n        <PivotItem headerText=\"All Investors\" itemKey=\"all\" />\r\n        <PivotItem headerText=\"Listed Funds\" itemKey=\"listed\" />\r\n        <PivotItem headerText=\"Unlisted Funds\" itemKey=\"unlisted\" />\r\n        <PivotItem headerText=\"Private Investors\" itemKey=\"private\" />\r\n        <PivotItem headerText=\"BEE Funds\" itemKey=\"bee\" />\r\n        <PivotItem headerText=\"Filtered List\" itemKey=\"multifilter\" />\r\n      </Pivot> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SelectedPropertyListPanel.tsx",["233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278"],"import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles, ILayerStyleProps, ILayerStyles, ILayerProps } from 'office-ui-fabric-react';\r\nimport { Panel, PanelType, IPanelProps, IPanelStyles, IPanelStyleProps, } from 'office-ui-fabric-react/lib/Panel';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES, GET_PDF_VARIABLES, GET_MULTI_PROPERTY, NEW_PROPERTY_LIST, GET_PROPERTY_LISTS } from \"../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, QueryMultiPropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent, MutationPostPropertyListArgs, PropertyList } from \"../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar, pdfVariables as pdfVariablesVar } from \"../reactivevariables/reactivevariables\"\r\nimport { PDFDownloadLink, BlobProvider } from '@react-pdf/renderer';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport PreviewPDFPanel from \"./PreviewPDFPanel\"\r\nimport \"./SelectedPropertyListPanel.css\"\r\n\r\n\r\n\r\n\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    PrimaryButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    Stack,\r\n    Text,\r\n    IStackStyles,\r\n    TextField,\r\n    ITextFieldStyles,\r\n    IDropdownStyles,\r\n    IContextualMenuProps,\r\n    DirectionalHint,\r\n    IContextualMenuStyleProps,\r\n    IContextualMenuStyles,\r\n    FocusTrapCallout,\r\n    FocusZone,\r\n    IContextualMenuItem,\r\n\r\n} from 'office-ui-fabric-react';\r\nimport SelectedPropertyListPDF from './PDFOutput/SelectedPropertyListPDF';\r\n\r\n\r\ninterface Props {\r\n    showSelectedPropertyListPanel: boolean\r\n    propertyIdList: number[]\r\n\r\n}\r\n\r\nconst SelectedPropertyListPanel: React.FunctionComponent<Props> = ({ showSelectedPropertyListPanel, propertyIdList = [] }) => {\r\n\r\n\r\n    /* const {\r\n        data: propertyIdListData,\r\n        loading: propertyIdListLoading,\r\n        error: propertyIdListError\r\n    } = useQuery<Query>(GET_SELECTED_PROPERTIES);\r\n\r\n    var propertyIdList = propertyIdListData?.selectedPropertyList?.map((property) => {\r\n        return property.propertyId\r\n    })\r\n\r\n    console.log(propertyIdList) */\r\n\r\n    const {\r\n        data: pdfVariables,\r\n        loading: pdfLoading,\r\n        error: pdfError\r\n    } = useQuery<Query>(GET_PDF_VARIABLES);\r\n\r\n    const {\r\n        data: propertyListData,\r\n        loading: propertyListDataLoading,\r\n        error: propertyListDataError\r\n    } = useQuery<Query>(GET_MULTI_PROPERTY, {\r\n        variables: { propertyIdList: propertyIdList },\r\n    });\r\n\r\n    const [postPropertyList, { data: postPropertyListData }] = useMutation<Mutation, MutationPostPropertyListArgs>(NEW_PROPERTY_LIST);\r\n\r\n  const postPropertyListButton = () => {\r\n\r\n    postPropertyList({\r\n      variables: {\r\n        \r\n        enquiryName: enquiryName,\r\n        enquiryDate: new Date(),\r\n        propertyIdList: propertyIdList\r\n\r\n      },\r\n\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingPropertyLists = cache.readQuery<Query>({ query: GET_PROPERTY_LISTS });\r\n\r\n        const existingPropertyLists = getExistingPropertyLists ? getExistingPropertyLists.propertyLists : [];\r\n        const newPropertyList = data.postPropertyList!/* .returning[0] */;\r\n        \r\n        if (existingPropertyLists)\r\n          cache.writeQuery<Query>({\r\n            query: GET_PROPERTY_LISTS,\r\n            data: { propertyLists: [newPropertyList, ...existingPropertyLists] }\r\n          });\r\n      }\r\n\r\n    })\r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n    const [enquiryName, setEnquiryName] = React.useState('');\r\n\r\n    const onChangeEnquiryName = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setEnquiryName(newValue || '');\r\n            /* pdfVariablesVar({ ...pdfVariablesVar(), enquiryName: (newValue || '') }) */\r\n        },\r\n        [],\r\n    );\r\n\r\n    const [selectedAgent, setSelectedAgent] = React.useState<IDropdownOption>();\r\n    /* const [selectedAgentDetails, setSelectedAgentDetails] = React.useState<Agent>(); */\r\n\r\n    const agentOptions = [\r\n\r\n        { key: 'Sean Ellis Brown', text: 'Sean Ellis Brown' },\r\n        { key: 'Mark Ellis Brown', text: 'Mark Ellis Brown' },\r\n\r\n    ]\r\n\r\n    const [selectedOutputType, setSelectedOutputType] = React.useState<IDropdownOption>({ key: 'Large Images', text: 'Large Images' });\r\n    /* const [selectedAgentDetails, setSelectedAgentDetails] = React.useState<Agent>(); */\r\n\r\n    const outputTypeOptions = [\r\n\r\n        { key: 'Large Images', text: 'Large Images' },\r\n        { key: 'Schedule', text: 'Schedule' },\r\n\r\n    ]\r\n\r\n    const [selectedImageLimit, setSelectedImageLimit] = React.useState<IDropdownOption>({ key: 'All', text: 'All' });\r\n    /* const [selectedAgentDetails, setSelectedAgentDetails] = React.useState<Agent>(); */\r\n\r\n    const imageLimitOptions = [\r\n\r\n        { key: 'All', text: 'All' },\r\n        { key: \"1\", text: \"1\" },\r\n        { key: \"2\", text: \"2\" },\r\n        { key: \"3\", text: \"3\" },\r\n        { key: \"4\", text: \"4\" },\r\n        { key: \"5\", text: \"5\" },\r\n        { key: \"6\", text: \"6\" },\r\n\r\n    ]\r\n\r\n\r\n    const onChangeAgent = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined && item.key === 'Sean Ellis Brown') {\r\n            setSelectedAgent(item)\r\n            /*  setSelectedAgentDetails({name: \"Sean Ellis Brown\", mobile: \"082 4555 183\", email: \"sean@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), agent: { name: \"Sean Ellis Brown\", mobile: \"082 4555 183\", email: \"sean@ellisbrown.co.za\" } })\r\n        }\r\n        if (item !== undefined && item.key === 'Mark Ellis Brown') {\r\n            setSelectedAgent(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), agent: { name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" } })\r\n        }\r\n    };\r\n\r\n    const onChangeOutputType = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined && item.key === 'Large Images') {\r\n            setSelectedOutputType(item)\r\n            /*  setSelectedAgentDetails({name: \"Sean Ellis Brown\", mobile: \"082 4555 183\", email: \"sean@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), outputType: item.key })\r\n        }\r\n        if (item !== undefined && item.key === 'Schedule') {\r\n            setSelectedOutputType(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), outputType: item.key })\r\n        }\r\n    };\r\n\r\n    const onChangeOnlyShowVacantToggle = React.useCallback((ev: React.MouseEvent<HTMLElement>, checked: boolean | undefined) => {\r\n        if (pdfVariables?.pdfVariables?.onlyShowVacant === false) {\r\n            pdfVariablesVar({ ...pdfVariablesVar(), onlyShowVacant: true })\r\n\r\n        } else {\r\n            pdfVariablesVar({ ...pdfVariablesVar(), onlyShowVacant: false })\r\n        }\r\n\r\n    }, [pdfVariables?.pdfVariables?.onlyShowVacant])\r\n\r\n    const onChangeImageLimit = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined && item.key === 'All') {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Sean Ellis Brown\", mobile: \"082 4555 183\", email: \"sean@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: item.key })\r\n        }\r\n        if (item !== undefined && item.key === \"1\") {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: parseInt(item.key) })\r\n        }\r\n        if (item !== undefined && item.key === \"2\") {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: parseInt(item.key) })\r\n        }\r\n        if (item !== undefined && item.key === \"3\") {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: parseInt(item.key) })\r\n        }\r\n        if (item !== undefined && item.key === \"4\") {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: parseInt(item.key) })\r\n        }\r\n        if (item !== undefined && item.key === \"5\") {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: parseInt(item.key) })\r\n        }\r\n        if (item !== undefined && item.key === \"6\") {\r\n            setSelectedImageLimit(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), imageLimit: parseInt(item.key) })\r\n        }\r\n    };\r\n\r\n    const onChangeShowImagesToggle = React.useCallback((ev: React.MouseEvent<HTMLElement>, checked: boolean | undefined) => {\r\n        if (pdfVariables?.pdfVariables?.showImages === false) {\r\n            pdfVariablesVar({ ...pdfVariablesVar(), showImages: true })\r\n\r\n        } else {\r\n            pdfVariablesVar({ ...pdfVariablesVar(), showImages: false })\r\n        }\r\n\r\n    }, [pdfVariables?.pdfVariables?.showImages])\r\n\r\n\r\n    const handlePanelDismiss = () => {\r\n        navigationStateVar({ ...navigationStateVar(), showSelectedPropertyListPanel: false })\r\n\r\n    }\r\n\r\n    const handleRemoveProperty = (propertyId: number) => {\r\n        var updatedPropertyList = propertyListData!.multiProperty!.filter(property => {\r\n            return property.propertyId !== propertyId\r\n        })\r\n        selectedPropertyListVar(updatedPropertyList)\r\n\r\n    }\r\n\r\n    const handlePreviewPDF = () => {\r\n        pdfVariablesVar({ ...pdfVariablesVar(), enquiryName: (enquiryName || '') })\r\n        navigationStateVar({ ...navigationStateVar(), showPreviewPDFPanel: true })\r\n\r\n    }\r\n\r\n    const handlePDFDDownload = () => {\r\n        pdfVariablesVar({ ...pdfVariablesVar(), enquiryName: (enquiryName || '') })\r\n        navigationStateVar({ ...navigationStateVar(), showSelectedPropertyListPanel: false })\r\n\r\n    }\r\n\r\n\r\n    const handleManageLists = (ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined, item?: IContextualMenuItem | undefined) => {\r\n        \r\n        navigationStateVar({ ...navigationStateVar(), showSavedListsPanel: true })\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    const theme = getTheme();\r\n    const cancelIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            /*   marginLeft: \"10px !important\",\r\n              marginTop: '4px',\r\n              marginRight: '2px', */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n\r\n        }\r\n    };\r\n\r\n    const deleteIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            marginLeft: \"auto\",\r\n            marginRight: 30\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"14px\",\r\n\r\n        }\r\n    };\r\n\r\n    const cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n    const addIcon: IIconProps = { iconName: 'Add' };\r\n    const editIcon: IIconProps = { iconName: 'Edit' };\r\n    const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n    const commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\", padding: 10 } };\r\n    const panelStyles: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles> = {\r\n        /*   root: {}, */\r\n        navigation: {\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 24,\r\n            paddingRight: 24,\r\n            paddingTop: 20\r\n        },\r\n        header: {},\r\n        headerText: { fontSize: 24, marginLeft: 5 },\r\n        \r\n\r\n    }\r\n\r\n    const layerStyles: IStyleFunctionOrObject<ILayerStyleProps, ILayerStyles> = {\r\n        root: { zIndex: 50000 },\r\n    }\r\n\r\n    const layerProps: ILayerProps = {\r\n        styles: layerStyles\r\n    }\r\n\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n\r\n    const boldStyle2 = { root: { fontWeight: FontWeights.bold } };\r\n    const propertyDetailsHeadingStyles = { /* alignSelf: \"start\", */ fontSize: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10, marginBottom: 10 }\r\n    const propertyNotesStyles = { alignSelf: \"start\", fontSize: \"16px\", paddingLeft: \"15px\", marginTop: 0 }\r\n\r\n    const buttonStyles = { root: { marginRight: 8, marginBottom: 0, marginTop: \"20px !important\" }, };\r\n\r\n    const saveListButtonStyles: IButtonStyles = {\r\n        root: { marginBottom: 0, marginTop: \"auto !important\", },\r\n        flexContainer: { marginBottom: 0, marginTop: \"auto !important\", },\r\n\r\n        splitButtonMenuButton: { backgroundColor: 'rgb(0, 120, 212)', width: 28, border: 'none' },\r\n        splitButtonMenuIcon: { fontSize: '7px' },\r\n        splitButtonDivider: { backgroundColor: '#c8c8c8', width: 1, right: 26, position: 'absolute', top: 4, bottom: 4 },\r\n        splitButtonContainer: {\r\n            height: \"fit-content\",\r\n            marginBottom: 0, marginTop: \"auto !important\",\r\n        },\r\n    }\r\n\r\n\r\n    const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { marginRight: 20, /* marginBottom: 10, */ }, root: { width: \"100%\", } };\r\n\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 135, marginRight: 10 } };\r\n\r\n    const toggleStyles: Partial<IToggleStyles> = { container: { marginTop: 5 }, label: { marginLeft: 4 } };\r\n\r\n    const onRenderNavigationContent: IRenderFunction<IPanelProps> = React.useCallback(\r\n        (props, defaultRender) => (\r\n            <>\r\n                <IconButton\r\n                    styles={cancelIconStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close panel\"\r\n                    onClick={handlePanelDismiss}\r\n                />\r\n                {/* <IconButton\r\n                    styles={editIconStyles}\r\n                    iconProps={editIcon}\r\n                    ariaLabel=\"Edit Property Details\"\r\n                    onClick={handleEditProperty}\r\n                /> */}\r\n\r\n\r\n\r\n            </>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const dropdownMenuStyles: IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles> = { container: { width: 125 } };\r\n\r\n    const menuPropsPDF: IContextualMenuProps = {\r\n        styles: dropdownMenuStyles,\r\n        // For example: disable dismiss if shift key is held down while dismissing\r\n        directionalHint: DirectionalHint.topRightEdge,\r\n        items: [\r\n            {\r\n                key: 'ManageLists',\r\n                text: 'Manage Lists',\r\n                iconProps: { iconName: 'List' },\r\n                  onClick: handleManageLists\r\n            },\r\n\r\n        ],\r\n    };\r\n\r\n    const [isOutputOptionsCalloutVisible, { toggle: toggleIsOutputOptionsCalloutVisible }] = useBoolean(false);\r\n\r\n    const outputOptionsStyles = mergeStyleSets({\r\n        /*  buttonArea: {\r\n           verticalAlign: 'top',\r\n           display: 'inline-block',\r\n           textAlign: 'center',\r\n           margin: '0 100px',\r\n           minWidth: 130,\r\n           height: 32,\r\n         }, */\r\n        callout: {\r\n            maxWidth: 600,\r\n        },\r\n        header: {\r\n            padding: '18px 24px 12px',\r\n        },\r\n        title: [\r\n            {\r\n                margin: 0,\r\n                fontWeight: FontWeights.bold,\r\n            },\r\n        ],\r\n        inner: {\r\n            height: '100%',\r\n            padding: '0 24px 20px',\r\n        },\r\n        actions: {\r\n            position: 'relative',\r\n            marginTop: 20,\r\n            width: '100%',\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        buttons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            padding: '0 24px 24px',\r\n        },\r\n        subtext: [\r\n            {\r\n                margin: 0,\r\n                fontWeight: FontWeights.semilight,\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n\r\n    const onRenderFooterContent = React.useCallback(\r\n        () => (\r\n            <Stack styles={{\r\n                root: {\r\n                    flexFlow: \"row wrap\",\r\n                    marginBottom: 20\r\n                }\r\n            }\r\n            }>\r\n                <TextField\r\n                    label=\"Enquiry Name\"\r\n                    value={enquiryName}\r\n                    onChange={onChangeEnquiryName}\r\n\r\n                    styles={textFieldStyles}\r\n                />\r\n                <Dropdown\r\n                    label=\"Agent\"\r\n                    selectedKey={selectedAgent ? selectedAgent.key : undefined}\r\n                    // eslint-disable-next-line react/jsx-no-bind\r\n                    onChange={onChangeAgent}\r\n                    placeholder=\"Select Agent\"\r\n                    options={agentOptions}\r\n                    styles={dropdownStyles}\r\n                />\r\n                <PrimaryButton\r\n                    split\r\n                    menuProps={menuPropsPDF}\r\n                    onClick={postPropertyListButton} styles={saveListButtonStyles}>\r\n                    Save List\r\n            </PrimaryButton>\r\n\r\n\r\n                <PrimaryButton\r\n                    /* menuProps={menuPropsPDF} */\r\n                    onClick={handlePreviewPDF} styles={buttonStyles}>\r\n                    Preview PDF\r\n            </PrimaryButton>\r\n\r\n                <PrimaryButton\r\n                    id=\"OutputOptionsButton\"\r\n                    /* menuProps={menuPropsPDF} */\r\n                    onClick={toggleIsOutputOptionsCalloutVisible} styles={buttonStyles}>\r\n                    Output Options\r\n            </PrimaryButton>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Stack>\r\n        ),\r\n        [enquiryName],\r\n    );\r\n\r\n\r\n    var selectedPropertyList: SelectedPropertyList = propertyListData?.multiProperty!\r\n\r\n\r\n\r\n\r\n\r\n    /* const propertyList = () =>  {\r\n\r\n       \r\n\r\n           var list=  selectedPropertyList.map(property => {\r\n                return (\r\n                    <Stack styles={{ root: { marginLeft: 10, marginTop: \"10px !important\", alignItems: \"center\" } }} horizontal>\r\n                        {property.propertyName}\r\n                        <IconButton\r\n                            styles={deleteIconStyles}\r\n                            iconProps={deleteIcon}\r\n                            ariaLabel=\"Remove Property\"\r\n                            onClick={() => handleRemoveProperty(property.propertyId)}\r\n                        />\r\n        \r\n                    </Stack>\r\n                )\r\n            })\r\n            \r\n       return list\r\n    } */\r\n\r\n\r\n\r\n    const propertyList = selectedPropertyList?.map(property => {\r\n        return (\r\n            <Stack styles={{ root: { marginLeft: 10, marginTop: \"10px !important\", alignItems: \"center\" } }} horizontal>\r\n                {property.propertyName}\r\n                <IconButton\r\n                    styles={deleteIconStyles}\r\n                    iconProps={deleteIcon}\r\n                    ariaLabel=\"Remove Property\"\r\n                    onClick={() => handleRemoveProperty(property.propertyId)}\r\n                />\r\n\r\n            </Stack>\r\n        )\r\n    })\r\n\r\n\r\n    /* if (propertyListDataLoading) return <div>Loading</div>; */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Panel\r\n                isOpen={showSelectedPropertyListPanel}\r\n                onDismiss={handlePanelDismiss}\r\n                type={PanelType.smallFixedFar}\r\n                onRenderNavigationContent={onRenderNavigationContent}\r\n                /* customWidth={panelType === PanelType.custom || panelType === PanelType.customNear ? '888px' : undefined} */\r\n                closeButtonAriaLabel=\"Close\"\r\n                headerText=\"Selected Property List\"\r\n                styles={panelStyles}\r\n                layerProps={layerProps}\r\n                isBlocking={false}\r\n                onRenderFooterContent={onRenderFooterContent}\r\n                isFooterAtBottom={true}\r\n                id=\"SelectedPropertyListPanel\"\r\n            >\r\n\r\n                <Stack verticalFill styles={{\r\n                    root: {\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        paddingTop: 10\r\n                        /* maxWidth: \"fit-content\" */\r\n                        /*  marginTop: \"0 !important\" */\r\n                    }\r\n                }}>\r\n\r\n\r\n                    {selectedPropertyList !== undefined ? propertyList : <div>loading</div>}\r\n\r\n\r\n                </Stack>\r\n\r\n                {isOutputOptionsCalloutVisible ? (\r\n                    <div>\r\n                        <FocusTrapCallout\r\n                            role=\"alertdialog\"\r\n                            className={outputOptionsStyles.callout}\r\n                            gapSpace={0}\r\n                            target={`#OutputOptionsButton`}\r\n                            onDismiss={toggleIsOutputOptionsCalloutVisible}\r\n                            setInitialFocus\r\n                        >\r\n                            <div className={outputOptionsStyles.header}>\r\n                                <Text className={outputOptionsStyles.title}>Output Options</Text>\r\n                            </div>\r\n                            <div className={outputOptionsStyles.inner}>\r\n                                <div>\r\n\r\n                                    <Stack>\r\n\r\n                                        <Stack horizontal>\r\n\r\n                                        <Dropdown\r\n                                            label=\"Output Type\"\r\n                                            selectedKey={selectedOutputType ? selectedOutputType.key : undefined}\r\n                                            // eslint-disable-next-line react/jsx-no-bind\r\n                                            onChange={onChangeOutputType}\r\n                                            placeholder=\"Output Type\"\r\n                                            options={outputTypeOptions}\r\n                                            styles={dropdownStyles}\r\n                                        />\r\n\r\n                                        <Toggle\r\n                                            onText=\"Vacant\"\r\n                                            offText=\"All\"\r\n                                            styles={toggleStyles}\r\n                                            label=\"Display:\"\r\n                                            checked={pdfVariables?.pdfVariables?.onlyShowVacant}\r\n                                            onChange={onChangeOnlyShowVacantToggle}\r\n                                        />\r\n\r\n                                        </Stack>\r\n\r\n                                        <Stack horizontal>\r\n\r\n                                        <Dropdown\r\n                                            label=\"Image Limit\"\r\n                                            selectedKey={selectedImageLimit ? selectedImageLimit.key : undefined}\r\n                                            // eslint-disable-next-line react/jsx-no-bind\r\n                                            onChange={onChangeImageLimit}\r\n                                            placeholder=\"Image Limit\"\r\n                                            options={imageLimitOptions}\r\n                                            styles={dropdownStyles}\r\n                                        />\r\n\r\n                                        <Toggle\r\n                                            onText=\"Yes\"\r\n                                            offText=\"No\"\r\n                                            styles={toggleStyles}\r\n                                            label=\"Show Images?\"\r\n                                            checked={pdfVariables?.pdfVariables?.showImages}\r\n                                            onChange={onChangeShowImagesToggle}\r\n                                        />\r\n\r\n                                        </Stack>\r\n\r\n                                        \r\n\r\n\r\n                                    </Stack>\r\n                                    {/* <Text className={outputOptionsStyles.subtext}>\r\n                                        Are you sure you want to delete this image?\r\n</Text> */}\r\n                                </div>\r\n                            </div>\r\n                            <FocusZone>\r\n                                <Stack className={outputOptionsStyles.buttons} gap={8} horizontal>\r\n                                    \r\n                                    <DefaultButton style={{marginLeft:0, marginRight: \"auto\"}} onClick={toggleIsOutputOptionsCalloutVisible}>Close</DefaultButton>\r\n                                </Stack>\r\n                            </FocusZone>\r\n                        </FocusTrapCallout>\r\n                    </div>\r\n                ) : null}\r\n\r\n\r\n\r\n\r\n\r\n            </Panel>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectedPropertyListPanel\r\n\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PreviewPDFPanel.tsx",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles, ILayerStyleProps, ILayerStyles, ILayerProps } from 'office-ui-fabric-react';\r\nimport { Panel, PanelType, IPanelProps, IPanelStyles, IPanelStyleProps, } from 'office-ui-fabric-react/lib/Panel';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES, GET_MULTI_PROPERTY, GET_PDF_VARIABLES } from \"../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationUpdatePropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent } from \"../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar } from \"../reactivevariables/reactivevariables\"\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\n\r\nimport SelectedPropertyListPDF from \"./PDFOutput/SelectedPropertyListPDF\"\r\nimport PropertyListLargeImagesPDF from \"./PDFOutput/PropertyListLargeImagesPDF\"\r\nimport { PDFViewer, PDFDownloadLink, Document, Page } from '@react-pdf/renderer';\r\n\r\n\r\n\r\n\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    Stack,\r\n    Text,\r\n    IStackStyles\r\n\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\n\r\ninterface Props {\r\n    showPreviewPDFPanel: boolean\r\n    enquiryName: string,\r\n    agent: Agent\r\n    propertyIdList: number[]\r\n}\r\n\r\nconst PreviewPDFPanel: React.FunctionComponent<Props> = ({ showPreviewPDFPanel, enquiryName, agent, propertyIdList = [] }) => {\r\n\r\n    const {\r\n        data: pdfVariables,\r\n        loading: pdfLoading,\r\n        error: pdfError\r\n    } = useQuery<Query>(GET_PDF_VARIABLES);\r\n\r\n    const {\r\n        data: propertyListData,\r\n        loading: propertyListDataLoading,\r\n        error: propertyListDataError\r\n    } = useQuery<Query>(GET_MULTI_PROPERTY, {\r\n        variables: { propertyIdList: propertyIdList }, fetchPolicy: \"network-only\"\r\n    });\r\n\r\n    var selectedPropertyList: SelectedPropertyList = propertyListData?.multiProperty!\r\n\r\n    var filteredPropertyList = selectedPropertyList?.map((property) => {\r\n        if(pdfVariables?.pdfVariables?.onlyShowVacant === true) {\r\n            let filteredPremises = property.premisesList!.filter((premises) => {\r\n                return premises.vacant === \"true\"\r\n            })\r\n           let premisesFilteredProperty = {...property, premisesList: filteredPremises }\r\n            return premisesFilteredProperty\r\n        } else {\r\n            return property\r\n        }\r\n    })\r\n\r\n\r\n\r\n    const handlePanelDismiss = () => {\r\n        navigationStateVar({ ...navigationStateVar(), showPreviewPDFPanel: false })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const theme = getTheme();\r\n    const cancelIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            /*   marginLeft: \"10px !important\",\r\n              marginTop: '4px',\r\n              marginRight: '2px', */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n    const addIcon: IIconProps = { iconName: 'Add' };\r\n    const editIcon: IIconProps = { iconName: 'Edit' };\r\n    const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n    const commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\", padding: 10 } };\r\n    const panelStyles: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles> = {\r\n        /*   root: {}, */\r\n        navigation: {\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 24,\r\n            paddingRight: 24,\r\n            paddingTop: 20\r\n        },\r\n        header: {},\r\n        headerText: { fontSize: 24, marginLeft: 5 },\r\n\r\n    }\r\n\r\n    const layerStyles: IStyleFunctionOrObject<ILayerStyleProps, ILayerStyles> = {\r\n        root: { zIndex: 50000 },\r\n    }\r\n\r\n    const layerProps: ILayerProps = {\r\n        styles: layerStyles\r\n    }\r\n\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n\r\n    const boldStyle2 = { root: { fontWeight: FontWeights.bold } };\r\n    const propertyDetailsHeadingStyles = { /* alignSelf: \"start\", */ fontSize: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10, marginBottom: 10 }\r\n    const propertyNotesStyles = { alignSelf: \"start\", fontSize: \"16px\", paddingLeft: \"15px\", marginTop: 0 }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onRenderNavigationContent: IRenderFunction<IPanelProps> = React.useCallback(\r\n        (props, defaultRender) => (\r\n            <>\r\n                <IconButton\r\n                    styles={cancelIconStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close panel\"\r\n                    onClick={handlePanelDismiss}\r\n                />\r\n                {/* <IconButton\r\n                    styles={editIconStyles}\r\n                    iconProps={editIcon}\r\n                    ariaLabel=\"Edit Property Details\"\r\n                    onClick={handleEditProperty}\r\n                /> */}\r\n\r\n\r\n\r\n            </>\r\n        ),\r\n        [],\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Panel\r\n                isOpen={showPreviewPDFPanel}\r\n                onDismiss={handlePanelDismiss}\r\n                type={PanelType.extraLarge}\r\n                onRenderNavigationContent={onRenderNavigationContent}\r\n                /* customWidth={panelType === PanelType.custom || panelType === PanelType.customNear ? '888px' : undefined} */\r\n                closeButtonAriaLabel=\"Close\"\r\n                headerText=\"Preview PDF\"\r\n                styles={panelStyles}\r\n                layerProps={layerProps}\r\n                isBlocking={false}\r\n            >\r\n\r\n                <Stack verticalFill styles={{\r\n                    root: {\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        paddingTop: 10\r\n                        /* maxWidth: \"fit-content\" */\r\n                        /*  marginTop: \"0 !important\" */\r\n                    }\r\n                }}>\r\n\r\n\r\n\r\n\r\n                    {<div style={{ height: '85vh' }}>\r\n                        <PDFViewer width=\"100%\" height=\"100%\">\r\n                            {pdfVariables?.pdfVariables?.outputType === \"Large Images\" ?\r\n                            <PropertyListLargeImagesPDF enquiryName={enquiryName} agent={agent} selectedPropertyList={filteredPropertyList} imageLimit={pdfVariables.pdfVariables.imageLimit} showImages={pdfVariables.pdfVariables.showImages}/>:\r\n                            <SelectedPropertyListPDF enquiryName={enquiryName} agent={agent} selectedPropertyList={filteredPropertyList} imageLimit={pdfVariables!.pdfVariables!.imageLimit} showImages={pdfVariables!.pdfVariables!.showImages}/>\r\n                            }\r\n                        </PDFViewer>\r\n\r\n                    </div>}\r\n\r\n\r\n                </Stack>\r\n\r\n\r\n\r\n\r\n\r\n            </Panel>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PreviewPDFPanel\r\n\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SelectedPropertyPanel.tsx",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ManageLandlordsPanel.tsx",["363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles, ILayerStyleProps, ILayerStyles, ILayerProps, FocusTrapCallout, FocusZone, PrimaryButton, TextField, ITextFieldStyles } from 'office-ui-fabric-react';\r\nimport { Panel, PanelType, IPanelProps, IPanelStyles, IPanelStyleProps, } from 'office-ui-fabric-react/lib/Panel';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { GET_SINGLE_PROPERTY, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES, NEW_LANDLORD, GET_LANDLORDS } from \"../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationPostLandlordArgs, Query, NavigationState, Premises, Landlord } from \"../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar } from \"../reactivevariables/reactivevariables\"\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nimport LandlordListItem from \"./LandlordListItem\"\r\n\r\nimport { SearchBox, ISearchBoxStyles, } from 'office-ui-fabric-react/lib/SearchBox';\r\n\r\nimport {\r\n  getTheme,\r\n  mergeStyleSets,\r\n  FontWeights,\r\n  ContextualMenu,\r\n  Toggle,\r\n  IToggleStyles,\r\n  DefaultButton,\r\n  Modal,\r\n  IDragOptions,\r\n  IconButton,\r\n  IIconProps,\r\n  IModalStyles,\r\n  mergeStyles,\r\n  ComboBox,\r\n  Fabric,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  SelectableOptionMenuItemType,\r\n  IComboBoxStyles,\r\n  Stack,\r\n  Text,\r\n  IStackStyles\r\n\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\ninterface Props {\r\n  showManageLandlordsPanel: boolean\r\n  landLordsList: Landlord[]\r\n\r\n}\r\n\r\nconst ManageLandlordsPanel: React.FunctionComponent<Props> = ({ showManageLandlordsPanel, landLordsList }) => {\r\n\r\n\r\n\r\n  const [isAddCalloutVisible, { toggle: toggleIsAddCalloutVisible }] = useBoolean(false);\r\n\r\n  const [addLandlordName, setAddLandlordName] = React.useState(\"\")\r\n\r\n\r\n\r\n  const handlePanelDismiss = () => {\r\n    navigationStateVar({ ...navigationStateVar(), showManageLandlordsPanel: false })\r\n\r\n  }\r\n\r\n\r\n  const [postLandlord, { data }] = useMutation<Mutation, MutationPostLandlordArgs>(NEW_LANDLORD);\r\n\r\n  const saveNewLandlord = () => {\r\n\r\n    postLandlord({\r\n      variables: {\r\n\r\n        landlordName: addLandlordName\r\n\r\n      },\r\n\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n        // Add the new todo to the cache\r\n        const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n        const newLandlord = data.postLandlord!/* .returning[0] */;\r\n        if (existingLandlords)\r\n          cache.writeQuery<Query>({\r\n            query: GET_LANDLORDS,\r\n            data: { landlords: [newLandlord, ...existingLandlords] }\r\n          });\r\n      }\r\n\r\n\r\n    })\r\n\r\n    setAddLandlordName(\"\")\r\n    toggleIsAddCalloutVisible()\r\n  }\r\n\r\n\r\n\r\n  const onChangeLandlordName = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddLandlordName(newValue!);\r\n    },\r\n    [addLandlordName],\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n  const theme = getTheme();\r\n  const deleteIconStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      /*   marginLeft: \"10px !important\",\r\n        marginTop: '4px',\r\n        marginRight: '2px', */\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n\r\n    }\r\n  };\r\n\r\n  const addIconStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: 20\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n\r\n    }\r\n  };\r\n\r\n  const cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n  const addIcon: IIconProps = { iconName: 'Add' };\r\n  const editIcon: IIconProps = { iconName: 'Edit' };\r\n  const photoCollectionIcon: IIconProps = { iconName: 'PhotoCollection' };\r\n  const commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\", padding: 10 } };\r\n  const panelStyles: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles> = {\r\n    /*   root: {}, */\r\n    navigation: {\r\n      justifyContent: \"flex-start\",\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n      paddingTop: 20\r\n    },\r\n    header: { marginBottom: 10 },\r\n    headerText: { fontSize: 24, marginLeft: 15 },\r\n\r\n  }\r\n\r\n  const layerStyles: IStyleFunctionOrObject<ILayerStyleProps, ILayerStyles> = {\r\n    root: { zIndex: 100000 },\r\n  }\r\n\r\n  const layerProps: ILayerProps = {\r\n    styles: layerStyles\r\n  }\r\n\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n  const propertyDetailsLandlordStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\", width: 125 }\r\n\r\n  const boldStyle2 = { root: { fontWeight: FontWeights.bold } };\r\n  const propertyDetailsHeadingStyles = { /* alignSelf: \"start\", */ fontSize: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10, marginBottom: 10 }\r\n  const propertyNotesStyles = { alignSelf: \"start\", fontSize: \"16px\", paddingLeft: \"15px\", marginTop: 0 }\r\n\r\n  const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300 } };\r\n\r\n  const searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 300, height: 44 } };\r\n\r\n  const styles = mergeStyleSets({\r\n\r\n    callout: {\r\n      maxWidth: 600,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [landlordSearch, setLandlordSearch] = React.useState<string | undefined> (\"\")\r\n\r\n\r\n  const onChangeLandlordSearch = React.useCallback(\r\n    (event?: React.ChangeEvent<HTMLInputElement>, newValue?: string) => {\r\n\r\n    setLandlordSearch(newValue)\r\n  },[setLandlordSearch])\r\n\r\n  console.log(landLordsList)\r\n  console.log(landlordSearch)\r\n\r\n  const searchSortedlandlords = landLordsList?.filter(landlord => {\r\n    if (landlord !== null && landlord !== undefined) {\r\n      if (landlord?.landlordName !== null && landlord?.landlordName !== undefined) {\r\n        if (landlord?.contactsList !== null && landlord?.contactsList !== undefined) {\r\n\r\n         /*  let item = landlord.contactsList.some((contact)=>  contact.name!.includes(landlordSearch!.toLowerCase()))\r\n          return item */\r\n          \r\n              return landlord?.landlordName.toLowerCase().includes(landlordSearch!.toLowerCase()) /* || landlord?.contactsList.filter((contact)=> { return contact.name?.toLowerCase().includes(landlordSearch!.toLowerCase())} ) */\r\n           \r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  const onRenderNavigationContent: IRenderFunction<IPanelProps> = React.useCallback(\r\n    (props, defaultRender) => (\r\n      <>\r\n        <IconButton\r\n          styles={deleteIconStyles}\r\n          iconProps={cancelIcon}\r\n          ariaLabel=\"Close panel\"\r\n          onClick={handlePanelDismiss}\r\n        />\r\n        <IconButton\r\n          styles={addIconStyles}\r\n          iconProps={addIcon}\r\n          ariaLabel=\"Add Landlord\"\r\n          onClick={toggleIsAddCalloutVisible}\r\n          id=\"addLandlordButton\"\r\n        />\r\n\r\n\r\n\r\n\r\n      </>\r\n    ),\r\n    [],\r\n  );\r\n\r\n\r\n  const [expanded, setExpanded] = React.useState<false | number>(0);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={showManageLandlordsPanel}\r\n        onDismiss={handlePanelDismiss}\r\n\r\n        type={PanelType.medium}\r\n        onRenderNavigationContent={onRenderNavigationContent}\r\n        /* customWidth={panelType === PanelType.custom || panelType === PanelType.customNear ? '888px' : undefined} */\r\n        closeButtonAriaLabel=\"Close\"\r\n        headerText={\"Manage Landlords\"}\r\n        styles={panelStyles}\r\n        layerProps={layerProps}\r\n      >\r\n\r\n        <Stack id=\"Landlord List Container\" styles={{\r\n          root: {\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            marginLeft: 10\r\n            /* maxWidth: \"fit-content\" */\r\n            /*  marginTop: \"0 !important\" */\r\n          }\r\n        }}>\r\n\r\n          <SearchBox\r\n            styles={searchBoxStyles}\r\n            placeholder=\"Search\"\r\n            onEscape={ev => {\r\n              console.log('Custom onEscape Called');\r\n            }}\r\n            onClear={ev => {\r\n              console.log('Custom onClear Called');\r\n            }}\r\n            onChange={onChangeLandlordSearch}\r\n            onSearch={newValue => console.log('SearchBox onSearch fired: ' + newValue)}\r\n          />\r\n\r\n          {searchSortedlandlords !== undefined ? searchSortedlandlords.map((landlord) => {\r\n\r\n            return <LandlordListItem landlord={landlord} key={landlord.landlordId} expanded={expanded} setExpanded={setExpanded}></LandlordListItem>\r\n\r\n          }) : <Text></Text>}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Stack>\r\n\r\n\r\n        {isAddCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#addLandlordButton`}\r\n              onDismiss={toggleIsAddCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Add Landlord</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n\r\n                  <TextField\r\n                    styles={textFieldStyles}\r\n                    label=\"Landlord Name\"\r\n\r\n                    value={addLandlordName}\r\n                    onChange={onChangeLandlordName}></TextField>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={saveNewLandlord}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsAddCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n\r\n      </Panel>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageLandlordsPanel\r\n\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\NewPropertyModal.tsx",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422"],"import React, { useState } from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { IStackStyles, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    PrimaryButton,\r\n} from 'office-ui-fabric-react';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { GET_PROPERTIES, NEW_PROPERTY, GET_NAV_STATE, GET_LANDLORDS } from \"../gql/gql\"\r\nimport { Mutation, MutationPostPropertyArgs, Query, Landlord, LandlordContact } from \"../schematypes/schematypes\"\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nimport \"./NewPremisesModal.css\"\r\n\r\n\r\n\r\n\r\nconst dragOptions: IDragOptions = {\r\n    moveMenuItemText: 'Move',\r\n    closeMenuItemText: 'Close',\r\n    menu: ContextualMenu,\r\n};\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\nconst saveIcon: IIconProps = { iconName: 'Save' };\r\n\r\ninterface Props {\r\n    showNewPropertyModal: boolean;\r\n    distinctSuburbsOptions: IComboBoxOption[];\r\n    distinctRegionsOptions: IComboBoxOption[];\r\n    landlordsOptions: IComboBoxOption[];\r\n}\r\n\r\nexport const NewPropertyModal: React.FC<Props> = ({ showNewPropertyModal, distinctSuburbsOptions, distinctRegionsOptions, landlordsOptions }) => {\r\n\r\n    const hideNewPropertyModal = () => {\r\n        navigationState({ ...navigationState(), showNewPropertyModal: false })\r\n    }\r\n\r\n    interface SelectedLandlord {\r\n        landlordId: number\r\n        landlordName: string\r\n        landlordData: Landlord\r\n    }\r\n\r\n    const [selectedLandlord, setSelectedLandlord] = React.useState<SelectedLandlord>(\r\n        {\r\n            landlordId: 0,\r\n            landlordName: \"\",\r\n            landlordData: { landlordId: 0 }\r\n\r\n        });\r\n\r\n\r\n    interface SelectedContact {\r\n        contactId: number\r\n        contactName: string\r\n        contactData: LandlordContact\r\n    }\r\n\r\n\r\n    const [selectedContact, setSelectedContact] = React.useState<SelectedContact>(\r\n        {\r\n            contactId: 45,\r\n            contactName: \"\",\r\n            contactData: { contactId: 45 }\r\n\r\n        });\r\n\r\n\r\n\r\n    /*  var contactsByLandlord: Landlord[] = landlordData!.landlords!.filter((landlord) => {\r\n         var contacts: LandlordContact[] = []\r\n         if (landlord.landlordId === selectedLandlord.landlordId) {\r\n             contacts = landlord.contactsList!\r\n \r\n         }\r\n         return contacts\r\n     }) */\r\n\r\n    const [newProperty, setNewProperty] = React.useState(\r\n        {\r\n            propertyName: \"\",\r\n            address: \"\",\r\n            suburb: \"\",\r\n            coordinates: \"\",\r\n            /*  earliestOccupation: \"\",\r\n             earliestExpiry: \"\", */\r\n            erfExtent: 0,\r\n            totalGLA: 0,\r\n            vacantArea: 0,\r\n            buildingType: \"\",\r\n            province: \"\",\r\n            region: \"\",\r\n            notes: \"\",\r\n\r\n\r\n\r\n        });\r\n\r\n    \r\n\r\n    const [postProperty, { data }] = useMutation<Mutation, MutationPostPropertyArgs>(NEW_PROPERTY);\r\n\r\n    const saveNewProperty = () => {\r\n\r\n        postProperty({\r\n            variables: {\r\n\r\n                propertyName: newProperty.propertyName,\r\n                address: newProperty.address,\r\n                suburb: newProperty.suburb,\r\n                coordinates: newProperty.coordinates,\r\n                /*  earliestOccupation: newProperty.earliestOccupation,\r\n                 earliestExpiry: newProperty.earliestExpiry, */\r\n                erfExtent: newProperty.erfExtent,\r\n                totalGLA: newProperty.totalGLA,\r\n                vacantArea: newProperty.vacantArea,\r\n                buildingType: newProperty.buildingType,\r\n                province: newProperty.province,\r\n                region: newProperty.region,\r\n                notes: newProperty.notes,\r\n\r\n                contactId: selectedContact.contactId\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperties = cache.readQuery<Query>({ query: GET_PROPERTIES });\r\n                // Add the new todo to the cache\r\n                const existingProperties = getExistingProperties ? getExistingProperties.properties : [];\r\n                const newProperty = data.postProperty!/* .returning[0] */;\r\n                if (existingProperties)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_PROPERTIES,\r\n                        data: { properties: [newProperty, ...existingProperties] }\r\n                    });\r\n            }\r\n\r\n\r\n        })\r\n\r\n        setNewProperty({\r\n            propertyName: \"\",\r\n            address: \"\",\r\n            suburb: \"\",\r\n            coordinates: \"\",\r\n            /*   earliestOccupation: \"\",\r\n              earliestExpiry: \"\", */\r\n            erfExtent: 0,\r\n            totalGLA: 0,\r\n            vacantArea: 0,\r\n            buildingType: \"\",\r\n            province: \"\",\r\n            region: \"\",\r\n            notes: \"\",\r\n\r\n\r\n        })\r\n        hideNewPropertyModal()\r\n    }\r\n\r\n\r\n\r\n    /* const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false); */\r\n\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n\r\n\r\n    const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldPropertyNameStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300, marginRight: 20 } };\r\n    const textFieldAddressStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300, marginRight: 20 } };\r\n    const textFieldCoordinatesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldErfStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldNotesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 470, marginRight: 20 } };\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 150, marginRight: 20 } };\r\n    const dropdownSectorStyles: Partial<IDropdownStyles> = { dropdown: { width: 420, marginRight: 20 } };\r\n    const dropdownProvinceStyles: Partial<IDropdownStyles> = { dropdown: { width: 140, marginRight: 20 } };\r\n    const comboBoxStyles: Partial<IComboBoxStyles> = { root: { width: 140, marginRight: 20 } }\r\n\r\n    const comboBoxLandlordStyles: Partial<IComboBoxStyles> = { root: { width: 220, marginRight: 20 } }\r\n    const textFieldLandlordStyles: Partial<ITextFieldStyles> = { root: { width: \"100%\", marginRight: 20, marginTop: \"20px !important\" } };\r\n\r\n    const textFieldLandlordEmailStyles: Partial<ITextFieldStyles> = { root: { width: \"100%\", marginRight: 20, marginTop: \"20px !important\" } };\r\n\r\n    const modalStyles: Partial<IModalStyles> = { main: { position: \"absolute\", top: 150 }, layer: { zIndex: 5000 } };\r\n\r\n    const buttonStyles = { root: { width: 100, marginRight: \"auto !important\", marginBottom: \"auto\", marginTop: \"60px !important\", marginLeft: \"auto !important\", height: 40 } };\r\n\r\n    const headerIconStackStyles: Partial<IStackStyles> = { root: { marginRight: 0, marginLeft: \"auto\", } }\r\n\r\n    const buildingTypeOptions = [\r\n\r\n        { key: 'Office', text: 'Office' },\r\n        { key: 'Industrial', text: 'Industrial' },\r\n        { key: 'Retail', text: 'Retail' },\r\n        { key: 'Mixed Use', text: 'Mixed Use' },\r\n    ];\r\n\r\n\r\n\r\n    const [selectedItem, setSelectedItem] = React.useState<IDropdownOption>();\r\n\r\n\r\n\r\n    const onChangeBuildingType = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedItem(item);\r\n            setNewProperty({ ...newProperty, buildingType: item.text });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const propertyProvinceOptions = [\r\n\r\n        { key: 'WC', text: 'WC' },\r\n        { key: 'Gau', text: 'GAU' },\r\n        { key: 'KZN', text: 'KZN' },\r\n        { key: 'Other', text: 'Other Provinces' },\r\n\r\n    ];\r\n\r\n    const [selectedProvince, setSelectedProvince] = React.useState<IDropdownOption>();\r\n\r\n    const onChangePropertyProvince = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedProvince(item);\r\n            setNewProperty({ ...newProperty, province: item.text });\r\n        }\r\n    };\r\n\r\n    const suburbComboOptions: IComboBoxOption[] = distinctSuburbsOptions\r\n\r\n\r\n    /* [\r\n        { key: 'Header1', text: 'First heading', itemType: SelectableOptionMenuItemType.Header },\r\n        { key: 'A', text: 'Option A' },\r\n        { key: 'B', text: 'Option B' },\r\n        { key: 'C', text: 'Option C' },\r\n        { key: 'D', text: 'Option D' },\r\n        { key: 'divider', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n        { key: 'Header2', text: 'Second heading', itemType: SelectableOptionMenuItemType.Header },\r\n        { key: 'E', text: 'Option E' },\r\n        { key: 'F', text: 'Option F', disabled: true },\r\n        { key: 'G', text: 'Option G' },\r\n        { key: 'H', text: 'Option H' },\r\n        { key: 'I', text: 'Option I' },\r\n        { key: 'J', text: 'Option J' },\r\n      ]; */\r\n\r\n    const [selectedSuburb, setSelectedSuburb] = React.useState<string | number | undefined>('');\r\n\r\n    const onChangePropertySuburb = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedSuburb(option?.key);\r\n            if (option !== undefined) {\r\n                setNewProperty({ ...newProperty, suburb: option!.text })\r\n            } else {\r\n                setNewProperty({ ...newProperty, suburb: value! })\r\n            }\r\n        },\r\n        [newProperty],\r\n    );\r\n\r\n    const regionComboOptions: IComboBoxOption[] = distinctRegionsOptions\r\n\r\n    const [selectedRegion, setSelectedRegion] = React.useState<string | number | undefined>(\"\");\r\n\r\n    const onChangePropertyRegion = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedRegion(option?.key);\r\n            if (option !== undefined) {\r\n                setNewProperty({ ...newProperty, region: option!.text })\r\n            } else {\r\n                setNewProperty({ ...newProperty, region: value! })\r\n            }\r\n        },\r\n        [newProperty],\r\n    );\r\n\r\n    const landlordComboOptions: IComboBoxOption[] = landlordsOptions\r\n\r\n    const onChangeLandlord = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedLandlord({\r\n                landlordName: option?.text!,\r\n                landlordId: option?.data.landlordId,\r\n                landlordData: option?.data\r\n            });\r\n            setSelectedContact({\r\n                contactName: \"\",\r\n                contactId: 0,\r\n                contactData: { contactId: 0 }\r\n            });\r\n\r\n        },\r\n        [selectedLandlord],\r\n    );\r\n\r\n   \r\n\r\n    const contactsFormatted = selectedLandlord.landlordData?.contactsList?.map((contact) => {\r\n        return { key: contact.name!, text: contact.name!, data: contact }\r\n    })\r\n    var contactsOptions: IComboBoxOption[] = []\r\n\r\n    if (contactsFormatted !== undefined) {\r\n        contactsOptions = [...contactsFormatted]\r\n    }\r\n\r\n    const contactComboOptions: IComboBoxOption[] = contactsOptions\r\n\r\n    const onChangeContact = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedContact({\r\n                contactName: option?.text!,\r\n                contactId: option?.data.contactId,\r\n                contactData: option?.data\r\n            });\r\n\r\n        },\r\n        [selectedLandlord],\r\n    );\r\n\r\n    const stackTokens = { childrenGap: 15 };\r\n\r\n\r\n\r\n    const onChangePropertyName = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, propertyName: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    );\r\n\r\n    const onChangeAddress = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, address: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeCoordinates = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, coordinates: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeErfExtent = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, erfExtent: parseFloat(newValue!) || 0 });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeTotalGLA = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, totalGLA: parseFloat(newValue!) || 0 });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, notes: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    );\r\n\r\n\r\n    const handleManageLandlords = () => {\r\n\r\n        navigationState({ ...navigationState(), showManageLandlordsPanel: true })\r\n\r\n    }\r\n\r\n    const [selectedKey, setSelectedKey] = React.useState('Property Details');\r\n\r\n    const handleLinkClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n\r\n        setSelectedKey(item!.props.itemKey!);\r\n    };\r\n\r\n    const getTabId = (itemKey: string | undefined) => {\r\n        return `NewPropertyPivot_${itemKey}`;\r\n    };\r\n\r\n    const titleId = useId('New Property');\r\n\r\n\r\n    const newPropertyTab = () => {\r\n\r\n        switch (selectedKey) {\r\n            case \"Property Details\":\r\n                return (\r\n                    <>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"0\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Property Name\"\r\n                                value={newProperty.propertyName}\r\n                                onChange={onChangePropertyName}\r\n                                styles={textFieldPropertyNameStyles}\r\n\r\n                            />\r\n\r\n                            <Dropdown\r\n                                label=\"Buidling Type\"\r\n                                selectedKey={selectedItem ? selectedItem.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangeBuildingType}\r\n                                placeholder=\"Select type\"\r\n                                options={buildingTypeOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Address\"\r\n                                value={newProperty.address}\r\n                                onChange={onChangeAddress}\r\n                                styles={textFieldAddressStyles}\r\n                            />\r\n                            <TextField\r\n                                label=\"Coordinates\"\r\n                                value={newProperty.coordinates}\r\n                                onChange={onChangeCoordinates}\r\n                                styles={textFieldCoordinatesStyles}\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <ComboBox\r\n                                label=\"Suburb\"\r\n                                allowFreeform={true}\r\n                                autoComplete={\"on\"}\r\n                                options={suburbComboOptions}\r\n                                selectedKey={selectedSuburb}\r\n                                onChange={onChangePropertySuburb}\r\n                                styles={comboBoxStyles}\r\n                                text={newProperty.suburb}\r\n                            />\r\n\r\n                            <ComboBox\r\n                                label=\"Region\"\r\n                                allowFreeform={true}\r\n                                autoComplete={\"on\"}\r\n                                options={regionComboOptions}\r\n                                selectedKey={selectedRegion}\r\n                                onChange={onChangePropertyRegion}\r\n                                styles={comboBoxStyles}\r\n                                text={newProperty.region}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                placeholder=\"Select Province\"\r\n                                label=\"Province\"\r\n                                selectedKey={selectedProvince ? selectedProvince.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangePropertyProvince}\r\n                                options={propertyProvinceOptions}\r\n                                styles={dropdownProvinceStyles}\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n\r\n                        <Stack horizontal>\r\n\r\n\r\n\r\n                            <TextField\r\n                                label=\"Erf Extent\"\r\n                                type=\"number\"\r\n                                value={String(newProperty.erfExtent)}\r\n                                onChange={onChangeErfExtent}\r\n                                styles={textFieldErfStyles}\r\n                                suffix=\"m²\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Total GLA\"\r\n                                type=\"number\"\r\n                                value={String(newProperty.totalGLA)}\r\n                                onChange={onChangeTotalGLA}\r\n                                styles={textFieldErfStyles}\r\n                                suffix=\"m²\"\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n\r\n\r\n\r\n                    </>\r\n                )\r\n\r\n            case \"Landlord Details\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack verticalFill>\r\n\r\n                            <Stack horizontal>\r\n\r\n                                <ComboBox\r\n                                    label=\"Landlord\"\r\n                                    allowFreeform={true}\r\n                                    autoComplete={\"on\"}\r\n                                    options={landlordComboOptions}\r\n                                    selectedKey={selectedLandlord.landlordId}\r\n                                    onChange={onChangeLandlord}\r\n                                    styles={comboBoxLandlordStyles}\r\n                                    text={selectedLandlord.landlordName}\r\n                                />\r\n\r\n                                <ComboBox\r\n                                    label=\"Contact\"\r\n                                    allowFreeform={true}\r\n                                    autoComplete={\"on\"}\r\n                                    options={contactComboOptions}\r\n                                    selectedKey={selectedContact !== undefined ? selectedContact.contactId : \"\"}\r\n                                    onChange={onChangeContact}\r\n                                    styles={comboBoxLandlordStyles}\r\n                                    text={selectedContact.contactName}\r\n                                />\r\n\r\n                            </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <Stack horizontal>\r\n\r\n                                <Stack styles={{root: {width: \"70%\"}}} verticalFill>\r\n\r\n                                    <TextField\r\n                                        underlined\r\n                                        label=\"Email\"\r\n                                        value={selectedContact.contactData !== undefined ? selectedContact.contactData.email : \"\"}\r\n\r\n                                        styles={textFieldLandlordEmailStyles}\r\n\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        underlined\r\n                                        label=\"Mobile No\"\r\n                                        value={selectedContact.contactData !== undefined ? selectedContact.contactData.mobileNo : \"\"}\r\n\r\n                                        styles={textFieldLandlordStyles}\r\n                                    />\r\n                                    <TextField\r\n                                        underlined\r\n                                        label=\"Office No\"\r\n                                        value={selectedContact.contactData !== undefined ? selectedContact.contactData.officeNo : \"\"}\r\n\r\n                                        styles={textFieldLandlordStyles}\r\n                                    />\r\n\r\n                                </Stack>\r\n\r\n\r\n                                <PrimaryButton onClick={handleManageLandlords} styles={buttonStyles}>\r\n                                    Manage Landlords\r\n                                </PrimaryButton>\r\n\r\n                            </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n            case \"Property Notes\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Notes\"\r\n                                value={newProperty.notes}\r\n                                onChange={onChangeNotes}\r\n                                styles={textFieldNotesStyles}\r\n                                multiline\r\n                                autoAdjustHeight\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n\r\n\r\n\r\n\r\n            default:\r\n            // code block\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Modal\r\n                styles={modalStyles}\r\n\r\n                titleAriaId={titleId}\r\n                isOpen={showNewPropertyModal}\r\n                onDismiss={hideNewPropertyModal}\r\n                isBlocking={false}\r\n                containerClassName={contentStyles.container}\r\n            /* dragOptions={dragOptions} */\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>New Property</span>\r\n                    <Stack horizontal\r\n                        styles={headerIconStackStyles}\r\n                    >\r\n\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={saveIcon}\r\n                            ariaLabel=\"Save Investor\"\r\n                            onClick={saveNewProperty}\r\n                        />\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={cancelIcon}\r\n                            ariaLabel=\"Close popup modal\"\r\n                            onClick={hideNewPropertyModal}\r\n                        />\r\n\r\n                    </Stack>\r\n\r\n                </div>\r\n                <div className={contentStyles.body} >\r\n\r\n                    <Stack style={{ width: 486 }} tokens={stackTokens}>\r\n\r\n                        <Pivot\r\n                            aria-label=\"Separately Rendered Content Pivot Example\"\r\n                            selectedKey={selectedKey}\r\n                            // eslint-disable-next-line react/jsx-no-bind\r\n                            onLinkClick={handleLinkClick}\r\n                            headersOnly={true}\r\n                            getTabId={getTabId}\r\n                        >\r\n                            <PivotItem headerText=\"Property Details\" itemKey=\"Property Details\" />\r\n                            <PivotItem headerText=\"Landlord Details\" itemKey=\"Landlord Details\" />\r\n                            <PivotItem headerText=\"Property Notes\" itemKey=\"Property Notes\" />\r\n\r\n                        </Pivot>\r\n\r\n                        {newPropertyTab()}\r\n\r\n\r\n\r\n\r\n\r\n                    </Stack>\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        /* width: 600, */\r\n\r\n    },\r\n\r\n    header: [\r\n\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: \"10px !important\",\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n        fontSize: \"24px\",\r\n\r\n    }\r\n};\r\n\r\nexport default NewPropertyModal\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SavedListsPanel.tsx",["423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles, ILayerStyleProps, ILayerStyles, ILayerProps, FocusTrapCallout, FocusZone, PrimaryButton, TextField, ITextFieldStyles } from 'office-ui-fabric-react';\r\nimport { Panel, PanelType, IPanelProps, IPanelStyles, IPanelStyleProps, } from 'office-ui-fabric-react/lib/Panel';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { GET_SINGLE_PROPERTY, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES, NEW_LANDLORD, GET_LANDLORDS } from \"../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationPostLandlordArgs, Query, NavigationState, Premises, Landlord, PropertyList, SelectedPropertyList } from \"../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar } from \"../reactivevariables/reactivevariables\"\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nimport SavedListItem from \"./SavedListItem\"\r\n\r\nimport { SearchBox, ISearchBoxStyles, } from 'office-ui-fabric-react/lib/SearchBox';\r\n\r\nimport {\r\n  getTheme,\r\n  mergeStyleSets,\r\n  FontWeights,\r\n  ContextualMenu,\r\n  Toggle,\r\n  IToggleStyles,\r\n  DefaultButton,\r\n  Modal,\r\n  IDragOptions,\r\n  IconButton,\r\n  IIconProps,\r\n  IModalStyles,\r\n  mergeStyles,\r\n  ComboBox,\r\n  Fabric,\r\n  IComboBoxOption,\r\n  IComboBox,\r\n  SelectableOptionMenuItemType,\r\n  IComboBoxStyles,\r\n  Stack,\r\n  Text,\r\n  IStackStyles\r\n\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\ninterface Props {\r\n  showSavedListsPanel: boolean\r\n  propertyLists: PropertyList[]\r\n  propertyIdList: number[]\r\n}\r\n\r\nconst SavedListsPanel: React.FunctionComponent<Props> = ({ showSavedListsPanel, propertyLists, propertyIdList }) => {\r\n\r\n\r\n  const handlePanelDismiss = () => {\r\n    navigationStateVar({ ...navigationStateVar(), showSavedListsPanel: false })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const theme = getTheme();\r\n  const deleteIconStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      /*   marginLeft: \"10px !important\",\r\n        marginTop: '4px',\r\n        marginRight: '2px', */\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n\r\n    }\r\n  };\r\n\r\n  const addIconStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: 20\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n\r\n    }\r\n  };\r\n\r\n  const cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n  const addIcon: IIconProps = { iconName: 'Add' };\r\n  const editIcon: IIconProps = { iconName: 'Edit' };\r\n  const photoCollectionIcon: IIconProps = { iconName: 'PhotoCollection' };\r\n  const commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\", padding: 10 } };\r\n  const panelStyles: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles> = {\r\n    /*   root: {}, */\r\n    navigation: {\r\n      justifyContent: \"flex-start\",\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n      paddingTop: 20\r\n    },\r\n    header: { marginBottom: 10 },\r\n    headerText: { fontSize: 24, marginLeft: 15 },\r\n    content:{\r\n    paddingLeft:12,\r\n    paddingRight:20},\r\n    scrollableContent:{overflowY: \"hidden\"}\r\n\r\n  }\r\n\r\n  const layerStyles: IStyleFunctionOrObject<ILayerStyleProps, ILayerStyles> = {\r\n    root: { zIndex: 100000 },\r\n  }\r\n\r\n  const layerProps: ILayerProps = {\r\n    styles: layerStyles\r\n  }\r\n\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n  const propertyDetailsLandlordStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\", width: 125 }\r\n\r\n  const boldStyle2 = { root: { fontWeight: FontWeights.bold } };\r\n  const propertyDetailsHeadingStyles = { /* alignSelf: \"start\", */ fontSize: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10, marginBottom: 10 }\r\n  const propertyNotesStyles = { alignSelf: \"start\", fontSize: \"16px\", paddingLeft: \"15px\", marginTop: 0 }\r\n\r\n  const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300 } };\r\n\r\n  const searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 300, height: 44 } };\r\n\r\n  const styles = mergeStyleSets({\r\n\r\n    callout: {\r\n      maxWidth: 600,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [propertyListSearch, setPropertyListSearch] = React.useState<string | undefined>(\"\")\r\n\r\n\r\n  const onChangeLandlordSearch = React.useCallback(\r\n    (event?: React.ChangeEvent<HTMLInputElement>, newValue?: string) => {\r\n\r\n      setPropertyListSearch(newValue)\r\n    }, [setPropertyListSearch])\r\n\r\n\r\n  console.log(propertyListSearch)\r\n\r\n  const searchSortedPropertyLists = propertyLists?.filter(propertyList => {\r\n    if (propertyList !== null && propertyList !== undefined) {\r\n      if (propertyList?.enquiryName !== null && propertyList?.enquiryName !== undefined) {\r\n        return propertyList?.enquiryName.toLowerCase().includes(propertyListSearch!.toLowerCase())\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  const onRenderNavigationContent: IRenderFunction<IPanelProps> = React.useCallback(\r\n    (props, defaultRender) => (\r\n      <>\r\n        <IconButton\r\n          styles={deleteIconStyles}\r\n          iconProps={cancelIcon}\r\n          ariaLabel=\"Close panel\"\r\n          onClick={handlePanelDismiss}\r\n        />\r\n\r\n      </>\r\n    ),\r\n    [],\r\n  );\r\n\r\n\r\n  const [expanded, setExpanded] = React.useState<false | number>(0);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Panel\r\n        isOpen={showSavedListsPanel}\r\n        onDismiss={handlePanelDismiss}\r\n        isBlocking={false}\r\n        type={PanelType.smallFixedFar}\r\n        onRenderNavigationContent={onRenderNavigationContent}\r\n        /* customWidth={panelType === PanelType.custom || panelType === PanelType.customNear ? '888px' : undefined} */\r\n        closeButtonAriaLabel=\"Close\"\r\n        headerText={\"Manage Saved Lists\"}\r\n        styles={panelStyles}\r\n        layerProps={layerProps}\r\n      >\r\n\r\n        <Stack id=\"Property List Container\" styles={{\r\n          root: {\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            marginLeft: 10\r\n            /* maxWidth: \"fit-content\" */\r\n            /*  marginTop: \"0 !important\" */\r\n          }\r\n        }}>\r\n\r\n          <SearchBox\r\n            styles={searchBoxStyles}\r\n            placeholder=\"Search\"\r\n            onEscape={ev => {\r\n              console.log('Custom onEscape Called');\r\n            }}\r\n            onClear={ev => {\r\n              console.log('Custom onClear Called');\r\n            }}\r\n            onChange={onChangeLandlordSearch}\r\n            onSearch={newValue => console.log('SearchBox onSearch fired: ' + newValue)}\r\n          />\r\n\r\n          { searchSortedPropertyLists !== undefined ? searchSortedPropertyLists.map((propertyList) => {\r\n\r\n            return <SavedListItem propertyList={propertyList} key={propertyList.propertyListId} expanded={expanded} setExpanded={setExpanded} propertyIdList={propertyIdList}></SavedListItem>\r\n\r\n          }) : <Text></Text>}\r\n\r\n\r\n        </Stack>\r\n      </Panel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedListsPanel\r\n\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PropertyListItem.tsx",["479","480","481","482","483","484","485","486","487","488","489","490","491","492","493"],"import * as React from 'react';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Property, Mutation, MutationDeletePropertyArgs } from \"../schematypes/schematypes\"\r\nimport { GET_SELECTED_PROPERTIES, GET_PROPERTIES, DELETE_PROPERTY } from \"../gql/gql\"\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport { mergeStyles, registerIcons } from 'office-ui-fabric-react/lib/Styling';\r\nimport { CommandBarButton, IContextualMenuProps, Stack, Text, FontWeights, IconButton, IIconProps, IStackStyles, initializeIcons, DefaultButton, FocusTrapCallout, FocusZone, PrimaryButton, mergeStyleSets, } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { IndustrialIcon, RetailIcon, OfficeIcon, MixedUseIcon } from \"../assets/svgIcons.js\"\r\nimport { FontIcon } from 'office-ui-fabric-react/lib/Icon';\r\nimport {navigationState} from \"../reactivevariables/reactivevariables\"\r\nimport \"./PropertyListItem.css\"\r\n\r\n\r\ninterface Props {\r\n  property: Property\r\n  key: any\r\n}\r\n\r\nexport const PropertyListItem: React.FunctionComponent<Props> = ({ property }) => {\r\n\r\n  registerIcons({\r\n    icons: {\r\n      'office': <OfficeIcon></OfficeIcon>,\r\n      'industrial': <IndustrialIcon></IndustrialIcon>,\r\n      'retail': <RetailIcon></RetailIcon>,\r\n      'mixeduse': <MixedUseIcon></MixedUseIcon>\r\n    }\r\n  })\r\n\r\n\r\n\r\n  const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n\r\n  const {\r\n    data,\r\n    loading,\r\n    error\r\n  } = useQuery<Query>(GET_SELECTED_PROPERTIES);\r\n\r\n\r\n\r\n\r\n\r\n var selectedProperties = data!.selectedPropertyList!\r\n\r\n  \r\n\r\n\r\n  const onCheckProperty = React.useCallback((): void => {\r\n\r\n    const found = !!selectedPropertyList().find((t) => t.propertyId === property.propertyId);\r\n\r\n    \r\n    if (found) {\r\n      selectedPropertyList(\r\n        selectedProperties.filter((t) => t.propertyId !== property.propertyId)\r\n      )\r\n    } else {\r\n      selectedPropertyList(\r\n        selectedProperties.concat(property)\r\n      )\r\n    }\r\n\r\n  }, [selectedProperties]);\r\n\r\n  var isChecked = () => {\r\n    const found = !!selectedProperties.find((t) => t.propertyId === property.propertyId);\r\n    \r\n    if (found) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const [deleteProperty, { data: deletePropertyData }] = useMutation<Mutation, MutationDeletePropertyArgs>(DELETE_PROPERTY);\r\n\r\n  const deletePropertyButton = () => {\r\n\r\n    deleteProperty({\r\n      variables: {\r\n        propertyId: property.propertyId\r\n      },\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingProperties = cache.readQuery<Query>({ query: GET_PROPERTIES });\r\n        // Add the new todo to the cache\r\n        const existingProperties = getExistingProperties ? getExistingProperties.properties : [];\r\n        const newProperties = existingProperties!.filter(t => {\r\n          if (t)\r\n            return (t.propertyId !== property.propertyId)\r\n        });  /* .returning[0] */;\r\n        if (existingProperties)\r\n          cache.writeQuery<Query>({\r\n            query: GET_PROPERTIES,\r\n            data: { properties: newProperties }\r\n          });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const getPropertyIconType =() => {\r\n    var buildingType= \"\"\r\n    switch(property.buildingType) {\r\n      case \"Office\":\r\n        buildingType = \"office\"\r\n        break;\r\n      case \"Industrial\":\r\n        buildingType = \"industrial\"\r\n        break;\r\n        case \"Retail\":\r\n          buildingType = \"retail\"\r\n          break;\r\n        case \"Mixed Use\":\r\n          buildingType = \"mixeduse\"\r\n          break;\r\n      default:\r\n        buildingType = \"mixeduse\"\r\n    }\r\n    return buildingType\r\n  }\r\n\r\n  const handleSelectedPropertyClick = () => {\r\n    navigationState ( {...navigationState(), selectedPropertyId: property.propertyId, showSelectedPropertyPanel: true})\r\n  }\r\n\r\n\r\n  const styles = mergeStyleSets({\r\n    /*  buttonArea: {\r\n       verticalAlign: 'top',\r\n       display: 'inline-block',\r\n       textAlign: 'center',\r\n       margin: '0 100px',\r\n       minWidth: 130,\r\n       height: 32,\r\n     }, */\r\n    callout: {\r\n      maxWidth: 400,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n\r\n  const checkClass = {\r\n    root: {\r\n      marginLeft: 5,\r\n      visibility: isChecked() ? \"visible\" : \"hidden\",\r\n    },\r\n    checkbox: {\r\n      borderRadius: \"50%\"\r\n    }\r\n  }\r\n\r\n  const imageClass = mergeStyles({\r\n    width: 100,\r\n    height: 80\r\n\r\n  });\r\n\r\n  const chevronClass = mergeStyles({\r\n    alignSelf: 'center',\r\n    marginLeft: 2,\r\n   /*  marginRight: 5, */\r\n    marginTop: \"0 !important\",\r\n    /* color: palette.neutralTertiary, */\r\n    fontSize: 20,\r\n    flexShrink: 0,\r\n    cursor: \"pointer\",\r\n    /* selectors: {\r\n      '&:hover': { \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\" },\r\n    }, */\r\n\r\n  });\r\n\r\n  const iconClass = mergeStyles({\r\n    fontSize: 50,\r\n    height: 50,\r\n    width: 50,\r\n    \r\n   \r\n    marginLeft:15,\r\n    marginRight:15,\r\n    marginTop: \"-10px !important\",\r\n    padding: \"5px\",\r\n    \r\n    \r\n\r\n});\r\n\r\nconst chevronIconDiv = mergeStyles({\r\n  /* fontSize: 50, */\r\n  height: 40,\r\n  width: 40,\r\n  lineHeight: 40,\r\n  textAlign: \"center\",\r\n  marginLeft:15,\r\n  marginRight:15,\r\n  marginTop: \"0px !important\",\r\n  /* padding: \"5px\", */\r\n  selectors: {\r\n    '&:hover': { backgroundColor: \"rgb(0 13 255 / 14%)\" , borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n  },\r\n\r\n});\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyHeadingStyles = { alignSelf: \"start\", fontSize: \"23px\", padding: 5, paddingLeft: \"25px\" }\r\n  const propertyAddressStyles = { alignSelf: \"start\", fontSize: \"14px\", padding: 5, paddingLeft: \"25px\" }\r\n  const theme = getTheme();\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: \"auto\",\r\n      marginTop: '0px !important',\r\n      marginRight: 5,\r\n      width: 40,\r\n      height: 40,\r\n      visibility: isChecked() ? \"visible\" : \"hidden\",\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n      backgroundColor: \"rgb(255 0 0 / 14%)\",\r\n      borderRadius: 30,\r\n      \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\"\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n      marginLeft: 6\r\n\r\n    }\r\n  };\r\n\r\n  const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n\r\n  return (\r\n\r\n    <Stack\r\n      horizontalAlign=\"start\"\r\n      verticalAlign=\"start\"\r\n      id=\"card\"\r\n\r\n      styles={{\r\n        root: {\r\n          width: 700,\r\n          marginBottom: 10,\r\n          padding: '10px',\r\n          textAlign: 'center',\r\n          color: '#605e5c',\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexFlow: \"row\",\r\n          /*  borderTop: \"4px solid #2557a2;\",\r\n           borderBottom: \"4px solid #2557a2;\", */\r\n          backgroundColor: \"white\",\r\n          background: isChecked() ? \"rgb(104 113 140 / 14%)\" : \"white\",\r\n          boxShadow: \"-1px 1px 7px 2px #d4cece\",\r\n          selectors: {\r\n            '&:hover': { background: /* palette.neutralLight */  \"rgb(104 113 140 / 14%)\" },\r\n          },\r\n\r\n        }\r\n      }}\r\n      gap={15}>\r\n\r\n\r\n\r\n      <Checkbox styles={checkClass} checked={isChecked()} onChange={onCheckProperty} />\r\n      {/* <div className={imageClass}>Image</div> */}\r\n\r\n      <FontIcon iconName={getPropertyIconType()}  className={iconClass} />\r\n\r\n      <Stack styles={{ root: { paddingTop: 0, marginTop: \"0 !important\", marginBottom: \"auto\" } }} verticalFill>\r\n        <Text styles={boldStyle} style={propertyHeadingStyles}>{property.propertyName}</Text>\r\n        <Text style={propertyAddressStyles}>{property.address}<span style={{ paddingLeft: 20, paddingRight: 20 }}>|</span>{property.suburb}<span style={{ paddingLeft: 20, paddingRight: 20 }}>|</span>{property.province} </Text>\r\n\r\n\r\n      </Stack>\r\n      <IconButton\r\n        styles={iconButtonStyles}\r\n        id={`deleteButton${property.propertyId}`}\r\n        iconProps={deleteIcon}\r\n        ariaLabel=\"Delete Property\"\r\n        onClick={toggleIsDeleteCalloutVisible}\r\n      />\r\n      {isDeleteCalloutVisible ? (\r\n        <div>\r\n          <FocusTrapCallout\r\n            role=\"alertdialog\"\r\n            className={styles.callout}\r\n            gapSpace={0}\r\n            target={`#deleteButton${property.propertyId}`}\r\n            onDismiss={toggleIsDeleteCalloutVisible}\r\n            setInitialFocus\r\n          >\r\n            <div className={styles.header}>\r\n              <Text className={styles.title}>Delete Property</Text>\r\n            </div>\r\n            <div className={styles.inner}>\r\n              <div>\r\n                <Text className={styles.subtext}>\r\n                  Are you sure you want to delete this property?\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <FocusZone>\r\n              <Stack className={styles.buttons} gap={8} horizontal>\r\n                <PrimaryButton onClick={deletePropertyButton}>Confirm</PrimaryButton>\r\n                <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n              </Stack>\r\n            </FocusZone>\r\n          </FocusTrapCallout>\r\n        </div>\r\n      ) : null}\r\n<div className={chevronIconDiv} onClick={handleSelectedPropertyClick}><Icon className={chevronClass} iconName={'ChevronRight'} /></div>\r\n      \r\n\r\n    </Stack>\r\n\r\n  );\r\n};\r\n\r\nexport default PropertyListItem","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\UpdatePropertyModal.tsx",["494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],"import React, { useState } from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { IStackStyles, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    PrimaryButton,\r\n} from 'office-ui-fabric-react';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { GET_PROPERTIES, NEW_PROPERTY, GET_NAV_STATE, UPDATE_PROPERTY, GET_SINGLE_PROPERTY } from \"../gql/gql\"\r\nimport { Mutation, MutationUpdatePropertyArgs, Query, Property, Landlord, LandlordContact } from \"../schematypes/schematypes\"\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nimport \"./NewPremisesModal.css\"\r\n\r\n\r\n\r\n\r\nconst dragOptions: IDragOptions = {\r\n    moveMenuItemText: 'Move',\r\n    closeMenuItemText: 'Close',\r\n    menu: ContextualMenu,\r\n};\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\nconst saveIcon: IIconProps = { iconName: 'Save' };\r\n\r\ninterface Props {\r\n    showUpdatePropertyModal: boolean;\r\n    distinctSuburbsOptions: IComboBoxOption[];\r\n    distinctRegionsOptions: IComboBoxOption[];\r\n    propertyId: number\r\n    propertyData: Property\r\n    landlordsOptions: IComboBoxOption[];\r\n}\r\n\r\nexport const UpdatePropertyModal: React.FC<Props> = ({ showUpdatePropertyModal, distinctSuburbsOptions, distinctRegionsOptions, propertyId, propertyData, landlordsOptions }) => {\r\n\r\n    const hideUpdatePropertyModal = () => {\r\n        navigationState({ ...navigationState(), showUpdatePropertyModal: false })\r\n    }\r\n\r\n    \r\n\r\n\r\n    const [updatedProperty, setUpdateProperty] = React.useState(propertyData);\r\n\r\n    interface SelectedLandlord {\r\n        landlordId: number\r\n        landlordName: string\r\n        landlordData: Landlord\r\n    }\r\n\r\n    const [selectedLandlord, setSelectedLandlord] = React.useState<SelectedLandlord>(\r\n        {\r\n            landlordId: propertyData.contact?.landlordName?.landlordId!,\r\n            landlordName: propertyData.contact?.landlordName?.landlordName!,\r\n            landlordData: { \r\n                landlordId: propertyData.contact?.landlordName?.landlordId!,\r\n                landlordName: propertyData.contact?.landlordName?.landlordName!,\r\n                contactsList: propertyData.contact?.landlordName?.contactsList!\r\n            }\r\n\r\n        });\r\n\r\n\r\n    interface SelectedContact {\r\n        contactId: number\r\n        contactName: string\r\n        contactData: LandlordContact\r\n    }\r\n\r\n\r\n    const [selectedContact, setSelectedContact] = React.useState<SelectedContact>(\r\n        {\r\n            contactId: propertyData.contact?.contactId! | 0,\r\n            contactName: propertyData.contact?.name!,\r\n            contactData: { \r\n                contactId: propertyData.contact?.contactId!,\r\n                name: propertyData.contact?.name!, \r\n                email: propertyData.contact?.email!,\r\n                mobileNo: propertyData.contact?.mobileNo!,\r\n                officeNo: propertyData.contact?.officeNo!,\r\n            }\r\n\r\n        });\r\n\r\n\r\n    const [updateProperty, { data }] = useMutation<Mutation, MutationUpdatePropertyArgs>(UPDATE_PROPERTY);\r\n\r\n    const saveUpdateProperty = () => {\r\n\r\n        updateProperty({\r\n            variables: {\r\n                contactId: selectedContact.contactId,\r\n                propertyId: propertyId,\r\n                propertyName: updatedProperty.propertyName,\r\n                address: updatedProperty.address,\r\n                suburb: updatedProperty.suburb,\r\n                coordinates: updatedProperty.coordinates,\r\n                /*  earliestOccupation: UpdateProperty.earliestOccupation,\r\n                 earliestExpiry: UpdateProperty.earliestExpiry, */\r\n                erfExtent: updatedProperty.erfExtent,\r\n                totalGLA: updatedProperty.totalGLA,\r\n                vacantArea: updatedProperty.vacantArea,\r\n                buildingType: updatedProperty.buildingType,\r\n                province: updatedProperty.province,\r\n                region: updatedProperty.region,\r\n                notes: updatedProperty.notes,\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n                const existingProperty: Property = getExistingProperty ? getExistingProperty.singleProperty! : { propertyId: 1, propertyName: \"\" };\r\n\r\n                const updatedProperty = {\r\n                    ...existingProperty, propertyName: data.updateProperty.propertyName,\r\n                    address: data.updateProperty.address,\r\n                    suburb: data.updateProperty.suburb,\r\n                    coordinates: data.updateProperty.coordinates,\r\n                    /*  earliestOccupation: UpdateProperty.earliestOccupation,\r\n                     earliestExpiry: UpdateProperty.earliestExpiry, */\r\n                    erfExtent: data.updateProperty.erfExtent,\r\n                    totalGLA: data.updateProperty.totalGLA,\r\n                    vacantArea: data.updateProperty.vacantArea,\r\n                    buildingType: data.updateProperty.buildingType,\r\n                    province: data.updateProperty.province,\r\n                    region: data.updateProperty.region,\r\n                    notes: data.updateProperty.notes,\r\n                    contact:  data.updateProperty.contact\r\n                }\r\n\r\n\r\n\r\n\r\n                if (existingProperty)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId },\r\n                        data: { singleProperty: updatedProperty }\r\n                    });\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n        hideUpdatePropertyModal()\r\n    }\r\n\r\n\r\n\r\n    /* const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false); */\r\n\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n\r\n\r\n    const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldPropertyNameStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300, marginRight: 20 } };\r\n    const textFieldAddressStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300, marginRight: 20 } };\r\n    const textFieldCoordinatesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldErfStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldNotesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 500, marginRight: 20 } };\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 150, marginRight: 20 } };\r\n    const dropdownSectorStyles: Partial<IDropdownStyles> = { dropdown: { width: 420, marginRight: 20 } };\r\n    const dropdownProvinceStyles: Partial<IDropdownStyles> = { dropdown: { width: 140, marginRight: 20 } };\r\n    const comboBoxStyles: Partial<IComboBoxStyles> = { root: { width: 140, marginRight: 20 } }\r\n\r\n    const comboBoxLandlordStyles: Partial<IComboBoxStyles> = { root: { width: 220, marginRight: 20 } }\r\n    const textFieldLandlordStyles: Partial<ITextFieldStyles> = { root: { width: \"100%\", marginRight: 20, marginTop: \"20px !important\" } };\r\n\r\n    const textFieldLandlordEmailStyles: Partial<ITextFieldStyles> = { root: { width: \"100%\", marginRight: 20, marginTop: \"20px !important\" } };\r\n\r\n    const modalStyles: Partial<IModalStyles> = { main: { position: \"absolute\", top: 150 }, layer: {zIndex: 55000} };\r\n\r\n    const buttonStyles = { root: { width: 100, marginRight: \"auto !important\", marginBottom: \"auto\", marginTop: \"60px !important\", marginLeft: \"auto !important\", height: 40 } };\r\n\r\n    const headerIconStackStyles: Partial<IStackStyles> = { root: { marginRight: 0, marginLeft: \"auto\", } }\r\n\r\n    const buildingTypeOptions = [\r\n\r\n        { key: 'Office', text: 'Office' },\r\n        { key: 'Industrial', text: 'Industrial' },\r\n        { key: 'Retail', text: 'Retail' },\r\n        { key: 'Mixed Use', text: 'Mixed Use' },\r\n    ];\r\n\r\n\r\n\r\n    const [selectedItem, setSelectedItem] = React.useState<IDropdownOption>({ key: updatedProperty.buildingType!, text: updatedProperty.buildingType! });\r\n\r\n\r\n\r\n    const onChangeBuildingType = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedItem(item);\r\n            setUpdateProperty({ ...updatedProperty, buildingType: item.text });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const propertyProvinceOptions = [\r\n\r\n        { key: 'WC', text: 'WC' },\r\n        { key: 'Gau', text: 'GAU' },\r\n        { key: 'KZN', text: 'KZN' },\r\n        { key: 'Other', text: 'Other Provinces' },\r\n\r\n    ];\r\n\r\n    const [selectedProvince, setSelectedProvince] = React.useState<IDropdownOption>({ key: updatedProperty.province!, text: updatedProperty.province! });\r\n\r\n    const onChangePropertyProvince = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedProvince(item);\r\n            setUpdateProperty({ ...updatedProperty, province: item.text });\r\n        }\r\n    };\r\n\r\n    const suburbComboOptions: IComboBoxOption[] = distinctSuburbsOptions\r\n\r\n\r\n    /* [\r\n        { key: 'Header1', text: 'First heading', itemType: SelectableOptionMenuItemType.Header },\r\n        { key: 'A', text: 'Option A' },\r\n        { key: 'B', text: 'Option B' },\r\n        { key: 'C', text: 'Option C' },\r\n        { key: 'D', text: 'Option D' },\r\n        { key: 'divider', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n        { key: 'Header2', text: 'Second heading', itemType: SelectableOptionMenuItemType.Header },\r\n        { key: 'E', text: 'Option E' },\r\n        { key: 'F', text: 'Option F', disabled: true },\r\n        { key: 'G', text: 'Option G' },\r\n        { key: 'H', text: 'Option H' },\r\n        { key: 'I', text: 'Option I' },\r\n        { key: 'J', text: 'Option J' },\r\n      ]; */\r\n\r\n    const [selectedSuburb, setSelectedSuburb] = React.useState<string | number | undefined>(updatedProperty.suburb);\r\n\r\n    const onChangePropertySuburb = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedSuburb(option?.key);\r\n            if (option !== undefined) {\r\n                setUpdateProperty({ ...updatedProperty, suburb: option!.text })\r\n            } else {\r\n                setUpdateProperty({ ...updatedProperty, suburb: value })\r\n            }\r\n        },\r\n        [updatedProperty],\r\n    );\r\n\r\n    const regionComboOptions: IComboBoxOption[] = distinctRegionsOptions\r\n\r\n    const [selectedRegion, setSelectedRegion] = React.useState<string | number | undefined>(updatedProperty.region);\r\n\r\n    const onChangePropertyRegion = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedRegion(option?.key);\r\n            if (option !== undefined) {\r\n                setUpdateProperty({ ...updatedProperty, region: option!.text })\r\n            } else {\r\n                setUpdateProperty({ ...updatedProperty, region: value })\r\n            }\r\n        },\r\n        [updatedProperty],\r\n    );\r\n\r\n    const landlordComboOptions: IComboBoxOption[] = landlordsOptions\r\n\r\n    const onChangeLandlord = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedLandlord({\r\n                landlordName: option?.text!,\r\n                landlordId: option?.data.landlordId,\r\n                landlordData: option?.data\r\n            });\r\n            setSelectedContact({\r\n                contactName: \"\",\r\n                contactId: 0,\r\n                contactData: { contactId: 0 }\r\n            });\r\n\r\n        },\r\n        [selectedLandlord],\r\n    );\r\n\r\n   \r\n\r\n    const contactsFormatted = selectedLandlord.landlordData?.contactsList?.map((contact) => {\r\n        return { key: contact.name!, text: contact.name!, data: contact }\r\n    })\r\n    var contactsOptions: IComboBoxOption[] = []\r\n\r\n    if (contactsFormatted !== undefined) {\r\n        contactsOptions = [...contactsFormatted]\r\n    }\r\n\r\n    const contactComboOptions: IComboBoxOption[] = contactsOptions\r\n\r\n    const onChangeContact = React.useCallback(\r\n        (event: React.FormEvent<IComboBox>, option?: IComboBoxOption, index?: number, value?: string) => {\r\n            setSelectedContact({\r\n                contactName: option?.text!,\r\n                contactId: option?.data.contactId,\r\n                contactData: option?.data\r\n            });\r\n           \r\n        },\r\n        [selectedLandlord],\r\n    );\r\n\r\n\r\n    const stackTokens = { childrenGap: 15 };\r\n\r\n\r\n\r\n    const onChangePropertyName = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdateProperty({ ...updatedProperty, propertyName: newValue || '' });\r\n        },\r\n        [updatedProperty],\r\n    );\r\n\r\n    const onChangeAddress = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdateProperty({ ...updatedProperty, address: newValue || '' });\r\n        },\r\n        [updatedProperty],\r\n    );\r\n    const onChangeCoordinates = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdateProperty({ ...updatedProperty, coordinates: newValue || '' });\r\n        },\r\n        [updatedProperty],\r\n    );\r\n    const onChangeErfExtent = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdateProperty({ ...updatedProperty, erfExtent: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedProperty],\r\n    );\r\n    const onChangeTotalGLA = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdateProperty({ ...updatedProperty, totalGLA: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedProperty],\r\n    );\r\n    const onChangeNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdateProperty({ ...updatedProperty, notes: newValue || '' });\r\n        },\r\n        [updatedProperty],\r\n    );\r\n\r\n    const handleManageLandlords = () => {\r\n\r\n        navigationState({ ...navigationState(), showManageLandlordsPanel: true })\r\n\r\n    }\r\n\r\n    const [selectedKey, setSelectedKey] = React.useState('Property Details');\r\n\r\n    const handleLinkClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n\r\n        setSelectedKey(item!.props.itemKey!);\r\n    };\r\n\r\n    const getTabId = (itemKey: string | undefined) => {\r\n        return `NewPropertyPivot_${itemKey}`;\r\n    };\r\n\r\n    const titleId = useId('New Property');\r\n\r\n\r\n    const newPropertyTab = () => {\r\n\r\n        switch (selectedKey) {\r\n            case \"Property Details\":\r\n                return (\r\n                    <>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"0\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Property Name\"\r\n                                value={updatedProperty.propertyName}\r\n                                onChange={onChangePropertyName}\r\n                                styles={textFieldPropertyNameStyles}\r\n\r\n                            />\r\n\r\n                            <Dropdown\r\n                                label=\"Buidling Type\"\r\n                                selectedKey={selectedItem ? selectedItem.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangeBuildingType}\r\n                                placeholder=\"Select type\"\r\n                                options={buildingTypeOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Address\"\r\n                                value={updatedProperty.address}\r\n                                onChange={onChangeAddress}\r\n                                styles={textFieldAddressStyles}\r\n                            />\r\n                            <TextField\r\n                                label=\"Coordinates\"\r\n                                value={updatedProperty.coordinates}\r\n                                onChange={onChangeCoordinates}\r\n                                styles={textFieldCoordinatesStyles}\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <ComboBox\r\n                                label=\"Suburb\"\r\n                                allowFreeform={true}\r\n                                autoComplete={\"on\"}\r\n                                options={suburbComboOptions}\r\n                                selectedKey={selectedSuburb}\r\n                                onChange={onChangePropertySuburb}\r\n                                styles={comboBoxStyles}\r\n                                text={updatedProperty.suburb}\r\n                            />\r\n\r\n                            <ComboBox\r\n                                label=\"Region\"\r\n                                allowFreeform={true}\r\n                                autoComplete={\"on\"}\r\n                                options={regionComboOptions}\r\n                                selectedKey={selectedRegion}\r\n                                onChange={onChangePropertyRegion}\r\n                                styles={comboBoxStyles}\r\n                                text={updatedProperty.region}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                placeholder=\"Select Province\"\r\n                                label=\"Province\"\r\n                                selectedKey={selectedProvince ? selectedProvince.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangePropertyProvince}\r\n                                options={propertyProvinceOptions}\r\n                                styles={dropdownProvinceStyles}\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n\r\n                        <Stack horizontal>\r\n\r\n\r\n\r\n                            <TextField\r\n                                label=\"Erf Extent\"\r\n                                type=\"number\"\r\n                                value={String(updatedProperty.erfExtent)}\r\n                                onChange={onChangeErfExtent}\r\n                                styles={textFieldErfStyles}\r\n                                suffix=\"m²\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Total GLA\"\r\n                                type=\"number\"\r\n                                value={String(updatedProperty.totalGLA)}\r\n                                onChange={onChangeTotalGLA}\r\n                                styles={textFieldErfStyles}\r\n                                suffix=\"m²\"\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n\r\n\r\n\r\n                    </>\r\n                )\r\n\r\n            case \"Landlord Details\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack verticalFill>\r\n\r\n                            <Stack horizontal>\r\n\r\n                                <ComboBox\r\n                                    label=\"Landlord\"\r\n                                    allowFreeform={true}\r\n                                    autoComplete={\"on\"}\r\n                                    options={landlordComboOptions}\r\n                                    selectedKey={selectedLandlord.landlordId}\r\n                                    onChange={onChangeLandlord}\r\n                                    styles={comboBoxLandlordStyles}\r\n                                    text={selectedLandlord.landlordName}\r\n                                />\r\n\r\n                                <ComboBox\r\n                                    label=\"Contact\"\r\n                                    allowFreeform={true}\r\n                                    autoComplete={\"on\"}\r\n                                    options={contactComboOptions}\r\n                                    selectedKey={selectedContact !== undefined ? selectedContact.contactId : \"\"}\r\n                                    onChange={onChangeContact}\r\n                                    styles={comboBoxLandlordStyles}\r\n                                    text={selectedContact.contactName}\r\n                                />\r\n\r\n                            </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <Stack horizontal>\r\n\r\n                                <Stack styles={{root: {width: \"70%\"}}} verticalFill>\r\n\r\n                                    <TextField\r\n                                        underlined\r\n                                        label=\"Email\"\r\n                                        value={selectedContact.contactData !== undefined ? selectedContact.contactData.email : \"\"}\r\n\r\n                                        styles={textFieldLandlordEmailStyles}\r\n\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        underlined\r\n                                        label=\"Mobile No\"\r\n                                        value={selectedContact.contactData !== undefined ? selectedContact.contactData.mobileNo : \"\"}\r\n\r\n                                        styles={textFieldLandlordStyles}\r\n                                    />\r\n                                    <TextField\r\n                                        underlined\r\n                                        label=\"Office No\"\r\n                                        value={selectedContact.contactData !== undefined ? selectedContact.contactData.officeNo : \"\"}\r\n\r\n                                        styles={textFieldLandlordStyles}\r\n                                    />\r\n\r\n                                </Stack>\r\n\r\n\r\n                                <PrimaryButton onClick={handleManageLandlords} styles={buttonStyles}>\r\n                                    Manage Landlords\r\n                                </PrimaryButton>\r\n\r\n                            </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n            case \"Property Notes\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Notes\"\r\n                                value={updatedProperty.notes}\r\n                                onChange={onChangeNotes}\r\n                                styles={textFieldNotesStyles}\r\n                                multiline\r\n                                autoAdjustHeight\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n\r\n\r\n\r\n\r\n            default:\r\n            // code block\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Modal\r\n                styles={modalStyles}\r\n\r\n                titleAriaId={titleId}\r\n                isOpen={showUpdatePropertyModal}\r\n                onDismiss={hideUpdatePropertyModal}\r\n               /*  isBlocking={true} */\r\n                containerClassName={contentStyles.container}\r\n            /* dragOptions={dragOptions} */\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>Update Property</span>\r\n                    <Stack horizontal\r\n                        styles={headerIconStackStyles}\r\n                    >\r\n\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={saveIcon}\r\n                            ariaLabel=\"Save Investor\"\r\n                            onClick={saveUpdateProperty}\r\n                        />\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={cancelIcon}\r\n                            ariaLabel=\"Close popup modal\"\r\n                            onClick={hideUpdatePropertyModal}\r\n                        />\r\n\r\n                    </Stack>\r\n\r\n                </div>\r\n                <div className={contentStyles.body} >\r\n\r\n                    <Stack style={{ width: 486 }} tokens={stackTokens}>\r\n\r\n                        <Pivot\r\n                            aria-label=\"Separately Rendered Content Pivot Example\"\r\n                            selectedKey={selectedKey}\r\n                            // eslint-disable-next-line react/jsx-no-bind\r\n                            onLinkClick={handleLinkClick}\r\n                            headersOnly={true}\r\n                            getTabId={getTabId}\r\n                        >\r\n                            <PivotItem headerText=\"Property Details\" itemKey=\"Property Details\" />\r\n                            <PivotItem headerText=\"Landlord Details\" itemKey=\"Landlord Details\" />\r\n                            <PivotItem headerText=\"Property Notes\" itemKey=\"Property Notes\" />\r\n\r\n                        </Pivot>\r\n\r\n                        {newPropertyTab()}\r\n\r\n\r\n\r\n\r\n\r\n                    </Stack>\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        \r\n\r\n    },\r\n\r\n    header: [\r\n\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: \"10px !important\",\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n        fontSize: \"24px\",\r\n\r\n    }\r\n};\r\n\r\nexport default UpdatePropertyModal\r\n","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\LandlordListItem.tsx",["515","516","517","518"],"import * as React from 'react';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Query, Mutation, MutationDeleteLandlordArgs, MutationUpdateLandlordArgs, MutationPostLandlordContactArgs, Landlord } from \"../schematypes/schematypes\"\r\nimport { DELETE_LANDLORD, GET_LANDLORDS, UPDATE_LANDLORD, NEW_LANDLORD_CONTACT } from \"../gql/gql\"\r\nimport { useMutation, } from '@apollo/client';\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\nimport {IContextualMenuProps, Stack, Text, FontWeights, IconButton, IIconProps, DefaultButton, FocusTrapCallout, FocusZone, PrimaryButton, mergeStyleSets, TextField, ITextFieldStyles } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport ContactListItem from \"./ContactListItem\"\r\n\r\n\r\ninterface Props {\r\n  landlord: Landlord\r\n  key: any\r\n  expanded: number | false\r\n  setExpanded: React.Dispatch<React.SetStateAction<number | false>>\r\n}\r\n\r\nexport const LandlordListItem: React.FunctionComponent<Props> = ({ landlord, expanded, setExpanded }) => {\r\n\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (expanded === landlord.landlordId) {\r\n      setIsOpen(true)\r\n    } else { setIsOpen(false) }\r\n\r\n  }, [expanded, landlord.landlordId])\r\n\r\n  const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n  const [isEditCalloutVisible, { toggle: toggleIsEditCalloutVisible }] = useBoolean(false);\r\n  const [isAddContactCalloutVisible, { toggle: toggleIsAddContactCalloutVisible }] = useBoolean(false);\r\n\r\n  const [editLandlordName, setEditLandlordName] = React.useState(landlord.landlordName)\r\n\r\n  const [addContact, setAddContact] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    mobileNo: \"\",\r\n    officeNo: \"\"\r\n  })\r\n\r\n  const handleExpand = (landlordId: number) => {\r\n    if (isOpen === false) {\r\n      setExpanded(landlordId)\r\n    } else { setExpanded(false) }\r\n\r\n\r\n\r\n  }\r\n\r\n  const [deleteLandlord, { data: deleteLandlordData }] = useMutation<Mutation, MutationDeleteLandlordArgs>(DELETE_LANDLORD);\r\n\r\n  const deleteLandlordButton = () => {\r\n\r\n    deleteLandlord({\r\n      variables: {\r\n        landlordId: landlord.landlordId\r\n      },\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n\r\n        const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n        const newLandlords = existingLandlords!.filter(t => {\r\n\r\n          return (t.landlordId !== landlord.landlordId)\r\n        });\r\n        if (existingLandlords)\r\n          cache.writeQuery<Query>({\r\n            query: GET_LANDLORDS,\r\n            data: { landlords: newLandlords }\r\n          });\r\n      }\r\n\r\n    })\r\n    toggleIsDeleteCalloutVisible()\r\n  }\r\n\r\n  const [updateLandlord, { data: updateLandlordData }] = useMutation<Mutation, MutationUpdateLandlordArgs>(UPDATE_LANDLORD);\r\n\r\n  const updateLandlordButton = () => {\r\n\r\n    updateLandlord({\r\n      variables: {\r\n        landlordId: landlord.landlordId,\r\n        landlordName: editLandlordName\r\n\r\n      },\r\n\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n\r\n        const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n        const updatedLandlord = data.updateLandlord!/* .returning[0] */;\r\n        const otherLandlords = existingLandlords!.filter(t => {\r\n          return t.landlordId !== landlord.landlordId\r\n        })\r\n        if (existingLandlords)\r\n          cache.writeQuery<Query>({\r\n            query: GET_LANDLORDS,\r\n            data: { landlords: [updatedLandlord, ...otherLandlords] }\r\n          });\r\n      }\r\n\r\n    })\r\n    setEditLandlordName(\"\")\r\n    toggleIsEditCalloutVisible()\r\n  }\r\n\r\n  const [postContact, { data }] = useMutation<Mutation, MutationPostLandlordContactArgs>(NEW_LANDLORD_CONTACT);\r\n\r\n  const saveNewContactButton = () => {\r\n\r\n    postContact({\r\n      variables: {\r\n        landlordId: landlord.landlordId,\r\n        name: addContact.name,\r\n        email: addContact.email,\r\n        mobileNo: addContact.mobileNo,\r\n        officeNo: addContact.officeNo,\r\n\r\n      },\r\n\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n        // Add the new todo to the cache\r\n        const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n        const selectedLandlord = existingLandlords!.find(t =>\r\n          t.landlordId === landlord.landlordId\r\n        )\r\n        const otherLandlords = existingLandlords!.filter(t => {\r\n          return t.landlordId !== landlord.landlordId\r\n        })\r\n        const existingContacts = selectedLandlord?.contactsList\r\n        const newContact = data.postLandlordContact!/* .returning[0] */;\r\n        const updatedLandlord = { landlordId: selectedLandlord!.landlordId, landlordName: selectedLandlord!.landlordName, contactsList: [...existingContacts!, newContact] }\r\n        if (existingLandlords)\r\n          cache.writeQuery<Query>({\r\n            query: GET_LANDLORDS,\r\n            data: { landlords: [updatedLandlord!, ...otherLandlords] }\r\n          });\r\n      }\r\n\r\n\r\n    })\r\n\r\n    setAddContact({\r\n      name: \"\",\r\n      email: \"\",\r\n      mobileNo: \"\",\r\n      officeNo: \"\"\r\n    })\r\n    toggleIsAddContactCalloutVisible()\r\n    setIsOpen(true)\r\n  }\r\n\r\n\r\n\r\n\r\n  const styles = mergeStyleSets({\r\n\r\n    callout: {\r\n      maxWidth: 400,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const chevronClass = mergeStyles({\r\n    alignSelf: 'center',\r\n    marginLeft: 2,\r\n    /*  marginRight: 5, */\r\n    marginTop: \"0 !important\",\r\n    /* color: palette.neutralTertiary, */\r\n    fontSize: 20,\r\n    flexShrink: 0,\r\n    cursor: \"pointer\",\r\n    /* selectors: {\r\n      '&:hover': { \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\" },\r\n    }, */\r\n\r\n  });\r\n\r\n  \r\n\r\n  const chevronIconDiv = mergeStyles({\r\n    /* fontSize: 50, */\r\n    height: 40,\r\n    width: 40,\r\n    lineHeight: 40,\r\n    textAlign: \"center\",\r\n    /* marginLeft: \"auto !important\",\r\n    marginRight: 15, */\r\n    marginTop: \"0px !important\",\r\n    marginBottom: \"0px !important\",\r\n    /* padding: \"5px\", */\r\n    selectors: {\r\n      '&:hover': { backgroundColor: \"rgb(0 13 255 / 14%)\", borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n    },\r\n\r\n  });\r\n\r\n  const chevronDiv = mergeStyles({\r\n\r\n    marginTop: \"0px !important\",\r\n    marginRight: 15,\r\n    marginLeft: \"auto !important\",\r\n  });\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyHeadingStyles = { alignSelf: \"start\", fontSize: \"23px\", padding: 5, paddingLeft: \"25px\" }\r\n  \r\n  const theme = getTheme();\r\n \r\n  \r\n\r\n  const menuProps: IContextualMenuProps = {\r\n    items: [\r\n      {\r\n        key: 'Delete Landlord',\r\n        text: 'Delete Landlord',\r\n        iconProps: { iconName: 'Delete' },\r\n        onClick: toggleIsDeleteCalloutVisible\r\n      },\r\n      {\r\n        key: 'Edit Landlord',\r\n        text: 'Edit Landlord',\r\n        iconProps: { iconName: 'Edit' },\r\n        onClick: toggleIsEditCalloutVisible\r\n      },\r\n      {\r\n        key: 'Add Contact',\r\n        text: 'Add Contact',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: toggleIsAddContactCalloutVisible\r\n      },\r\n    ],\r\n    directionalHintFixed: false,\r\n    styles: {container: {width: 150}}\r\n  };\r\n\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: 5,\r\n      marginTop: '0px !important',\r\n      marginRight: 5,\r\n      width: 35,\r\n      height: 35,\r\n      /*  visibility: isChecked() ? \"visible\" : \"hidden\", */\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n      backgroundColor: \"rgb(3 122 212 / 16%);\",\r\n      /* borderRadius: 30, */\r\n      \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\"\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n      marginLeft: 6\r\n\r\n    }\r\n  };\r\n\r\n  \r\n  const menuIcon: IIconProps = { iconName: 'SingleColumnEdit' };\r\n\r\n  const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 300 } };\r\n  const textFieldContactStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 250 } };\r\n\r\n  const onChangeLandlordName = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setEditLandlordName(newValue!);\r\n    },\r\n    [editLandlordName],\r\n  );\r\n\r\n  const onChangeContactName = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, name: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  const onChangeContactEmail = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, email: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  const onChangeContactMobileNo = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, mobileNo: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  const onChangeContactOfficeNo = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, officeNo: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  return (\r\n\r\n    <Stack styles={{ root: { marginTop: 20 } }} verticalFill>\r\n\r\n      <Stack\r\n        horizontalAlign=\"start\"\r\n        verticalAlign=\"start\"\r\n        id=\"card\"\r\n\r\n        styles={{\r\n          root: {\r\n            width: 580,\r\n            marginBottom: 10,\r\n            marginTop: 10,\r\n            padding: '10px',\r\n            textAlign: 'center',\r\n            color: '#605e5c',\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexFlow: \"row\",\r\n            /*  borderTop: \"4px solid #2557a2;\",\r\n             borderBottom: \"4px solid #2557a2;\", */\r\n            backgroundColor: \"white\",\r\n            background: /* isChecked() ? \"rgb(104 113 140 / 14%)\" : */ \"white\",\r\n            boxShadow: \"-1px 1px 7px 2px #d4cece\",\r\n            selectors: {\r\n              '&:hover': { background: /* palette.neutralLight */  \"rgb(104 113 140 / 14%)\" },\r\n            },\r\n\r\n          }\r\n        }}\r\n        gap={15}>\r\n\r\n\r\n\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          id={`comboButton${landlord.landlordId}`}\r\n          menuProps={menuProps}\r\n          iconProps={menuIcon}\r\n          ariaLabel=\"Combo Button\"\r\n        />\r\n\r\n        <Stack styles={{ root: { paddingTop: 0, marginTop: \"0 !important\", marginBottom: \"auto\" } }} verticalFill>\r\n          <Text styles={boldStyle} style={propertyHeadingStyles}>{landlord.landlordName}</Text>\r\n\r\n\r\n\r\n        </Stack>\r\n\r\n\r\n        {isDeleteCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#comboButton${landlord.landlordId}`}\r\n              onDismiss={toggleIsDeleteCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Delete Landlord</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n                  <Text className={styles.subtext}>\r\n                    Are you sure you want to delete this landlord?\r\n                </Text>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={deleteLandlordButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n       \r\n        {isEditCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#comboButton${landlord.landlordId}`}\r\n              onDismiss={toggleIsEditCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Edit Landlord</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n\r\n                  <TextField\r\n                    styles={textFieldStyles}\r\n                    label=\"Landlord Name\"\r\n\r\n                    value={editLandlordName}\r\n                    onChange={onChangeLandlordName}></TextField>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={updateLandlordButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsEditCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n\r\n        {isAddContactCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#comboButton${landlord.landlordId}`}\r\n              onDismiss={toggleIsAddContactCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Add Contact</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Name\"\r\n                    value={addContact.name}\r\n                    onChange={onChangeContactName}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Email\"\r\n                    value={addContact.email}\r\n                    onChange={onChangeContactEmail}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Mobile No\"\r\n                    value={addContact.mobileNo}\r\n                    onChange={onChangeContactMobileNo}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Office No\"\r\n                    value={addContact.officeNo}\r\n                    onChange={onChangeContactOfficeNo}>\r\n                  </TextField>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={saveNewContactButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsAddContactCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n\r\n        <motion.section\r\n          className={chevronDiv}\r\n          /*  key=\"chevron\"\r\n           initial=\"collapsed\" */\r\n          animate={isOpen ? \"open\" : \"collapsed\"}\r\n          /*  exit=\"collapsed\" */\r\n          variants={{\r\n            open: { transform: \"rotate(270deg)\" },\r\n            collapsed: { transform: \"rotate(90deg)\" }\r\n          }}\r\n          transition={{ duration: 0.4, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n\r\n          <div className={chevronIconDiv} onClick={() => handleExpand(landlord.landlordId)}><Icon className={chevronClass} iconName={'ChevronRight'} /></div>\r\n\r\n        </motion.section>\r\n\r\n\r\n\r\n\r\n      </Stack>\r\n\r\n\r\n      <AnimatePresence initial={false}>\r\n        {isOpen && (\r\n          <motion.section\r\n            key=\"content\"\r\n            initial=\"collapsed\"\r\n            animate=\"open\"\r\n            exit=\"collapsed\"\r\n            variants={{\r\n              open: { opacity: 1, height: \"auto\" },\r\n              collapsed: { opacity: 0, height: 0 }\r\n            }}\r\n            transition={{ duration: 0.4, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n          >\r\n            <Stack horizontal styles={{\r\n              root: {\r\n                width: 580,\r\n                display: \"flex\",\r\n                flexFlow: \"row wrap\"\r\n\r\n              }\r\n            }} >\r\n\r\n              {landlord.contactsList?.map((contact) => {\r\n                return <ContactListItem landlordId={landlord.landlordId} contact={contact} key={contact.contactId}></ContactListItem>\r\n\r\n              })}\r\n\r\n            </Stack>\r\n          </motion.section>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n    </Stack>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default LandlordListItem","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\SavedListItem.tsx",["519","520","521","522","523","524","525","526","527"],"import * as React from 'react';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Query, Mutation, MutationDeletePropertyListArgs, MutationUpdatePropertyListArgs, MutationPostPropertyListArgs, PropertyList, SelectedPropertyList } from \"../schematypes/schematypes\"\r\nimport { DELETE_PROPERTY_LIST, GET_PROPERTY_LISTS, UPDATE_PROPERTY_LIST, NEW_PROPERTY_LIST } from \"../gql/gql\"\r\nimport { useMutation, } from '@apollo/client';\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\nimport { IContextualMenuProps, Stack, Text, FontWeights, IconButton, IIconProps, DefaultButton, FocusTrapCallout, FocusZone, PrimaryButton, mergeStyleSets, TextField, ITextFieldStyles, Checkbox, ICheckboxProps, ICheckboxStyles } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport ContactListItem from \"./ContactListItem\"\r\n\r\nimport { selectedPropertyList as selectedPropertyListVar } from \"../reactivevariables/reactivevariables\"\r\n\r\n\r\ninterface Props {\r\n  propertyList: PropertyList\r\n  key: any\r\n  expanded: number | false\r\n  setExpanded: React.Dispatch<React.SetStateAction<number | false>>\r\n  propertyIdList: number[]\r\n}\r\n\r\nexport const SavedListItem: React.FunctionComponent<Props> = ({ propertyList, expanded, setExpanded, propertyIdList }) => {\r\n\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (expanded === propertyList.propertyListId) {\r\n      setIsOpen(true)\r\n    } else { setIsOpen(false) }\r\n\r\n  }, [expanded, propertyList.propertyListId])\r\n\r\n  const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n  const [isEditCalloutVisible, { toggle: toggleIsEditCalloutVisible }] = useBoolean(false);\r\n  /* const [isAddContactCalloutVisible, { toggle: toggleIsAddContactCalloutVisible }] = useBoolean(false); */\r\n\r\n  const [editPropertyList, setEditPropertyList] = React.useState<MutationUpdatePropertyListArgs>({\r\n    propertyListId: propertyList.propertyListId,\r\n    enquiryName: propertyList.enquiryName,\r\n    enquiryDate: propertyList.enquiryDate,\r\n    propertyIdList: propertyList.properties?.map((property) => { return property.propertyId })\r\n  })\r\n\r\n  /* const [addContact, setAddContact] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    mobileNo: \"\",\r\n    officeNo: \"\"\r\n  }) */\r\n\r\n  const handleExpand = (propertyListId: number) => {\r\n    if (isOpen === false) {\r\n      setExpanded(propertyListId)\r\n    } else { setExpanded(false) }\r\n\r\n\r\n\r\n  }\r\n\r\n  const [deletePropertyList, { data: deletePropertyListData }] = useMutation<Mutation, MutationDeletePropertyListArgs>(DELETE_PROPERTY_LIST);\r\n\r\n  const deletePropertyListButton = () => {\r\n\r\n    deletePropertyList({\r\n      variables: {\r\n        propertyListId: propertyList.propertyListId\r\n      },\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingPropertyLists = cache.readQuery<Query>({ query: GET_PROPERTY_LISTS });\r\n\r\n        const existingPropertyLists = getExistingPropertyLists ? getExistingPropertyLists.propertyLists : [];\r\n        const newPropertyLists = existingPropertyLists!.filter(t => {\r\n\r\n          return (t.propertyListId !== propertyList.propertyListId)\r\n        });\r\n        if (existingPropertyLists)\r\n          cache.writeQuery<Query>({\r\n            query: GET_PROPERTY_LISTS,\r\n            data: { propertyLists: newPropertyLists }\r\n          });\r\n      }\r\n\r\n    })\r\n    toggleIsDeleteCalloutVisible()\r\n  }\r\n\r\n  const [updatePropertyList, { data: updatePropertyListData }] = useMutation<Mutation, MutationUpdatePropertyListArgs>(UPDATE_PROPERTY_LIST);\r\n\r\n  const updatePropertyListButton = () => {\r\n\r\n    updatePropertyList({\r\n      variables: {\r\n        propertyListId: propertyList.propertyListId,\r\n        enquiryName: editPropertyList.enquiryName,\r\n        enquiryDate: editPropertyList.enquiryDate,\r\n        propertyIdList: editPropertyList.propertyIdList\r\n\r\n      },\r\n\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingPropertyLists = cache.readQuery<Query>({ query: GET_PROPERTY_LISTS });\r\n\r\n        const existingPropertyLists = getExistingPropertyLists ? getExistingPropertyLists.propertyLists : [];\r\n        const updatedPropertyList = data.updatePropertyList!/* .returning[0] */;\r\n        const otherPropertyLists = existingPropertyLists!.filter(t => {\r\n          return t.propertyListId !== propertyList.propertyListId\r\n        })\r\n        if (existingPropertyLists)\r\n          cache.writeQuery<Query>({\r\n            query: GET_PROPERTY_LISTS,\r\n            data: { propertyLists: [updatedPropertyList, ...otherPropertyLists] }\r\n          });\r\n      }\r\n\r\n    })\r\n    /* setEditLandlordName(\"\") */\r\n    toggleIsEditCalloutVisible()\r\n  }\r\n\r\n  /*  const [postContact, { data }] = useMutation<Mutation, MutationPostLandlordContactArgs>(NEW_LANDLORD_CONTACT);\r\n \r\n   const saveNewContactButton = () => {\r\n \r\n     postContact({\r\n       variables: {\r\n         landlordId: landlord.landlordId,\r\n         name: addContact.name,\r\n         email: addContact.email,\r\n         mobileNo: addContact.mobileNo,\r\n         officeNo: addContact.officeNo,\r\n \r\n       },\r\n \r\n       update(cache, { data }) {\r\n \r\n         if (!data) {\r\n           return null;\r\n         }\r\n \r\n         const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n         \r\n         const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n         const selectedLandlord = existingLandlords!.find(t =>\r\n           t.landlordId === landlord.landlordId\r\n         )\r\n         const otherLandlords = existingLandlords!.filter(t => {\r\n           return t.landlordId !== landlord.landlordId\r\n         })\r\n         const existingContacts = selectedLandlord?.contactsList\r\n         const newContact = data.postLandlordContact!;\r\n         const updatedLandlord = { landlordId: selectedLandlord!.landlordId, landlordName: selectedLandlord!.landlordName, contactsList: [...existingContacts!, newContact] }\r\n         if (existingLandlords)\r\n           cache.writeQuery<Query>({\r\n             query: GET_LANDLORDS,\r\n             data: { landlords: [updatedLandlord!, ...otherLandlords] }\r\n           });\r\n       }\r\n \r\n \r\n     })\r\n \r\n     setAddContact({\r\n       name: \"\",\r\n       email: \"\",\r\n       mobileNo: \"\",\r\n       officeNo: \"\"\r\n     })\r\n     toggleIsAddContactCalloutVisible()\r\n     setIsOpen(true)\r\n   } */\r\n\r\n\r\n\r\n\r\n  const styles = mergeStyleSets({\r\n\r\n    callout: {\r\n      maxWidth: 300,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const chevronClass = mergeStyles({\r\n    alignSelf: 'center',\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    /*  marginRight: 5, */\r\n    marginTop: \"0 !important\",\r\n    /* color: palette.neutralTertiary, */\r\n    fontSize: 16,\r\n    flexShrink: 0,\r\n    cursor: \"pointer\",\r\n    /* selectors: {\r\n      '&:hover': { \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\" },\r\n    }, */\r\n\r\n  });\r\n\r\n\r\n\r\n  const chevronIconDiv = mergeStyles({\r\n    /* fontSize: 50, */\r\n    height: 30,\r\n    width: 30,\r\n    lineHeight: 30,\r\n    textAlign: \"center\",\r\n    /* marginLeft: \"auto !important\",\r\n    marginRight: 15, */\r\n    marginTop: \"0px !important\",\r\n    marginBottom: \"0px !important\",\r\n    /* padding: \"5px\", */\r\n    selectors: {\r\n      '&:hover': { backgroundColor: \"rgb(0 13 255 / 14%)\", borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n    },\r\n\r\n  });\r\n\r\n  const chevronDiv = mergeStyles({\r\n\r\n    marginTop: \"0px !important\",\r\n    marginRight: 5,\r\n    marginLeft: \"auto !important\",\r\n  });\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyHeadingStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: 5, paddingBottom: 2 }\r\n\r\n  const checkboxStyles: Partial<ICheckboxStyles> = { root: { marginTop: 5, marginRight: 30, marginLeft: \"auto\", width: \"fit-content\" }, label: { marginLeft: 4 } };\r\n\r\n  const theme = getTheme();\r\n\r\n\r\n\r\n  const menuProps: IContextualMenuProps = {\r\n    items: [\r\n      {\r\n        key: 'Delete Property List',\r\n        text: 'Delete Property List',\r\n        iconProps: { iconName: 'Delete' },\r\n        onClick: toggleIsDeleteCalloutVisible\r\n      },\r\n      {\r\n        key: 'Edit Property List',\r\n        text: 'Edit Property List',\r\n        iconProps: { iconName: 'Edit' },\r\n        onClick: toggleIsEditCalloutVisible\r\n      },\r\n      /* {\r\n        key: 'Add Contact',\r\n        text: 'Add Contact',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: toggleIsAddContactCalloutVisible\r\n      }, */\r\n    ],\r\n    directionalHintFixed: false,\r\n    styles: { container: { width: 175 } }\r\n  };\r\n\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      /* marginLeft: 5, */\r\n      marginTop: '0px !important',\r\n      /* marginRight: 5, */\r\n      /*  width: 35,\r\n       height: 35, */\r\n      /*  visibility: isChecked() ? \"visible\" : \"hidden\", */\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n      backgroundColor: \"rgb(3 122 212 / 16%);\",\r\n      /* borderRadius: 30, */\r\n      \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\"\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"20px\",\r\n      marginLeft: 2\r\n\r\n    }\r\n  };\r\n\r\n\r\n  const menuIcon: IIconProps = { iconName: 'SingleColumnEdit' };\r\n\r\n  const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200 } };\r\n  const textFieldContactStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 250 } };\r\n\r\n  const onChangeEnquiryName = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setEditPropertyList({ ...editPropertyList, enquiryName: newValue! });\r\n    },\r\n    [setEditPropertyList],\r\n  );\r\n\r\n  /* const onChangeContactName = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, name: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  const onChangeContactEmail = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, email: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  const onChangeContactMobileNo = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, mobileNo: newValue! });\r\n    },\r\n    [addContact],\r\n  );\r\n\r\n  const onChangeContactOfficeNo = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setAddContact({ ...addContact, officeNo: newValue! });\r\n    },\r\n    [addContact],\r\n  ); */\r\n\r\n  console.log(propertyList.properties)\r\n\r\n  const handleSetSelectedProperties = () => {\r\n\r\n    selectedPropertyListVar(propertyList.properties)\r\n\r\n  }\r\n\r\n  const [isCurrentListChecked, setIsCurrentListChecked] = React.useState(false);\r\n\r\n  const onChangeSetCurrentListToggle = React.useCallback((ev?: React.FormEvent<HTMLInputElement | HTMLElement> | undefined, checked?: boolean | undefined) => {\r\n    if (isCurrentListChecked) {\r\n      setIsCurrentListChecked(false)\r\n      setEditPropertyList({ ...editPropertyList, propertyIdList: propertyList.properties?.map((property) => { return property.propertyId }) })\r\n    } else {\r\n      setIsCurrentListChecked(true)\r\n      setEditPropertyList({ ...editPropertyList, propertyIdList: propertyIdList })\r\n    }\r\n\r\n\r\n  }, [editPropertyList, propertyIdList, isCurrentListChecked, setIsCurrentListChecked, propertyList.properties])\r\n\r\n  const [isCurrentDateChecked, setIsCurrentDateChecked] = React.useState(false);\r\n\r\n  const onChangeSetCurrentDateToggle = React.useCallback((ev?: React.FormEvent<HTMLInputElement | HTMLElement> | undefined, checked?: boolean | undefined) => {\r\n    if (isCurrentDateChecked) {\r\n      setIsCurrentDateChecked(false)\r\n      setEditPropertyList({ ...editPropertyList, enquiryDate: propertyList.enquiryDate })\r\n    } else {\r\n      setIsCurrentDateChecked(true)\r\n      setEditPropertyList({ ...editPropertyList, enquiryDate: new Date() })\r\n    }\r\n\r\n\r\n  }, [editPropertyList, isCurrentDateChecked, setIsCurrentDateChecked, propertyList.enquiryDate])\r\n\r\n  const getPropertyListDate = () => {\r\n\r\n\r\n    var date: Date = new Date()\r\n\r\n    if (propertyList.enquiryDate !== undefined) {\r\n      date = new Date(propertyList.enquiryDate)\r\n    }\r\n    return date.toLocaleDateString(\r\n      'en-gb',\r\n      {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n\r\n    <Stack styles={{ root: { marginTop: 20 } }} verticalFill>\r\n\r\n      <Stack\r\n        horizontalAlign=\"start\"\r\n        verticalAlign=\"start\"\r\n        id=\"card\"\r\n\r\n        styles={{\r\n          root: {\r\n            /* width: 580, */\r\n            marginBottom: 10,\r\n            marginTop: 10,\r\n            padding: '5px',\r\n            textAlign: 'center',\r\n            color: '#605e5c',\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexFlow: \"row\",\r\n            /*  borderTop: \"4px solid #2557a2;\",\r\n             borderBottom: \"4px solid #2557a2;\", */\r\n            backgroundColor: \"white\",\r\n            background: /* isChecked() ? \"rgb(104 113 140 / 14%)\" : */ \"white\",\r\n            boxShadow: \"-1px 1px 7px 2px #d4cece\",\r\n            selectors: {\r\n              '&:hover': { background: /* palette.neutralLight */  \"rgb(104 113 140 / 14%)\" },\r\n            },\r\n\r\n          }\r\n        }}\r\n        gap={15}>\r\n\r\n        <div className={chevronIconDiv} onClick={handleSetSelectedProperties}><Icon className={chevronClass} iconName={'ChevronLeft'} /></div>\r\n\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          id={`comboButton${propertyList.propertyListId}`}\r\n          menuProps={menuProps}\r\n          iconProps={menuIcon}\r\n          ariaLabel=\"Combo Button\"\r\n        />\r\n\r\n        <Stack styles={{ root: { paddingTop: 0, marginTop: \"0 !important\", marginBottom: \"auto\" } }} verticalFill>\r\n          <Text styles={boldStyle} style={propertyHeadingStyles}>{propertyList.enquiryName} </Text>\r\n          <Text style={{ paddingLeft: 5 }}>{getPropertyListDate()}</Text>\r\n\r\n\r\n        </Stack>\r\n\r\n\r\n        {isDeleteCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#comboButton${propertyList.propertyListId}`}\r\n              onDismiss={toggleIsDeleteCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Delete List</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n                  <Text className={styles.subtext}>\r\n                    Are you sure you want to delete this list?\r\n                </Text>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={deletePropertyListButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n\r\n        {isEditCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#comboButton${propertyList.propertyListId}`}\r\n              onDismiss={toggleIsEditCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Edit List</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n\r\n                  <TextField\r\n                    styles={textFieldStyles}\r\n                    label=\"Enquiry Name\"\r\n\r\n                    value={editPropertyList.enquiryName}\r\n                    onChange={onChangeEnquiryName}></TextField>\r\n                  <Checkbox boxSide=\"end\" styles={checkboxStyles} label=\"Set Current List?\" checked={isCurrentListChecked} onChange={onChangeSetCurrentListToggle} />\r\n                  <Checkbox boxSide=\"end\" styles={checkboxStyles} label=\"Set Current Date?\" checked={isCurrentDateChecked} onChange={onChangeSetCurrentDateToggle} />\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={updatePropertyListButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsEditCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n\r\n        {/* {isAddContactCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#comboButton${landlord.landlordId}`}\r\n              onDismiss={toggleIsAddContactCalloutVisible}\r\n              setInitialFocus\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Add Contact</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Name\"\r\n                    value={addContact.name}\r\n                    onChange={onChangeContactName}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Email\"\r\n                    value={addContact.email}\r\n                    onChange={onChangeContactEmail}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Mobile No\"\r\n                    value={addContact.mobileNo}\r\n                    onChange={onChangeContactMobileNo}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Office No\"\r\n                    value={addContact.officeNo}\r\n                    onChange={onChangeContactOfficeNo}>\r\n                  </TextField>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={saveNewContactButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsAddContactCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null} */}\r\n\r\n        <motion.section\r\n          className={chevronDiv}\r\n          /*  key=\"chevron\"\r\n           initial=\"collapsed\" */\r\n          animate={isOpen ? \"open\" : \"collapsed\"}\r\n          /*  exit=\"collapsed\" */\r\n          variants={{\r\n            open: { transform: \"rotate(270deg)\" },\r\n            collapsed: { transform: \"rotate(90deg)\" }\r\n          }}\r\n          transition={{ duration: 0.4, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n\r\n          <div className={chevronIconDiv} onClick={() => handleExpand(propertyList.propertyListId)}><Icon className={chevronClass} iconName={'ChevronRight'} /></div>\r\n\r\n        </motion.section>\r\n\r\n\r\n\r\n\r\n      </Stack>\r\n\r\n\r\n      <AnimatePresence initial={false}>\r\n        {isOpen && (\r\n          <motion.section\r\n            key=\"content\"\r\n            initial=\"collapsed\"\r\n            animate=\"open\"\r\n            exit=\"collapsed\"\r\n            variants={{\r\n              open: { opacity: 1, height: \"auto\" },\r\n              collapsed: { opacity: 0, height: 0 }\r\n            }}\r\n            transition={{ duration: 0.4, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n          >\r\n            <Stack verticalFill styles={{\r\n              root: {\r\n                /* width: 580, */\r\n                display: \"flex\",\r\n                /*  flexFlow: \"row wrap\" */\r\n\r\n              }\r\n            }} >\r\n\r\n              {propertyList.properties?.map((property) => {\r\n                return (\r\n\r\n                  <Stack styles={{ root: { marginLeft: 20, marginTop: \"10px !important\", alignItems: \"center\" } }} horizontal>\r\n\r\n                    <Text styles={boldStyle} style={propertyHeadingStyles}>{property.propertyName} </Text>\r\n                    \r\n                    {/* <IconButton\r\n                        styles={deleteIconStyles}\r\n                        iconProps={deleteIcon}\r\n                        ariaLabel=\"Remove Property\"\r\n                        onClick={() => handleRemoveProperty(property.propertyId)}\r\n                    /> */}\r\n\r\n                  </Stack>\r\n\r\n\r\n                )\r\n\r\n              })}\r\n\r\n            </Stack>\r\n          </motion.section>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n    </Stack>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default SavedListItem","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ContactListItem.tsx",["528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558"],"import * as React from 'react';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Property, Mutation, MutationDeleteLandlordContactArgs, MutationUpdateLandlordContactArgs, LandlordContact } from \"../schematypes/schematypes\"\r\nimport { GET_SELECTED_PROPERTIES, GET_PROPERTIES, DELETE_PROPERTY, DELETE_LANDLORD_CONTACT, UPDATE_LANDLORD_CONTACT, GET_LANDLORDS } from \"../gql/gql\"\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport { mergeStyles, registerIcons } from 'office-ui-fabric-react/lib/Styling';\r\nimport { CommandBarButton, IContextualMenuProps, Stack, Text, FontWeights, IconButton, IIconProps, IStackStyles, initializeIcons, DefaultButton, FocusTrapCallout, FocusZone, PrimaryButton, mergeStyleSets, ITextFieldStyles, DirectionalHint } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { IndustrialIcon, RetailIcon, OfficeIcon, MixedUseIcon } from \"../assets/svgIcons.js\"\r\nimport { FontIcon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nimport \"./PropertyListItem.css\"\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n\r\ninterface Props {\r\n  contact: LandlordContact\r\n  key: any\r\n  landlordId: number\r\n\r\n}\r\n\r\nexport const ContactListItem: React.FunctionComponent<Props> = ({ contact, landlordId }) => {\r\n\r\n\r\n\r\n\r\n  const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n\r\n  const [isEditContactCalloutVisible, { toggle: toggleIsEditContactCalloutVisible }] = useBoolean(false);\r\n\r\n  const [editContact, setEditContact] = React.useState({\r\n    name: contact?.name,\r\n    email: contact?.email,\r\n    mobileNo: contact?.mobileNo,\r\n    officeNo: contact?.officeNo,\r\n  })\r\n\r\n\r\n\r\n  const [deleteLandlordContact, { data: deleteLandlordContactData }] = useMutation<Mutation, MutationDeleteLandlordContactArgs>(DELETE_LANDLORD_CONTACT);\r\n\r\n  const deleteLandlordContactButton = () => {\r\n\r\n    deleteLandlordContact({\r\n      variables: {\r\n        contactId: contact.contactId\r\n      },\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n            return null;\r\n        }\r\n\r\n        const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n        // Add the new todo to the cache\r\n        const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n        const selectedLandlord = existingLandlords!.find(t => \r\n          t.landlordId === landlordId\r\n        )\r\n        const otherLandlords = existingLandlords!.filter (t => {\r\n          return t.landlordId !== landlordId\r\n        })\r\n        const existingContacts = selectedLandlord?.contactsList\r\n        const newContacts = existingContacts!.filter (t => {\r\n          return t.contactId !== contact.contactId\r\n        })\r\n       const updatedLandlord = {landlordId: selectedLandlord!.landlordId, landlordName: selectedLandlord!.landlordName , contactsList: [...newContacts ]}\r\n        if (existingLandlords)\r\n            cache.writeQuery<Query>({\r\n                query: GET_LANDLORDS,\r\n                data: { landlords: [updatedLandlord!, ...otherLandlords] }\r\n            });\r\n    }\r\n\r\n    })\r\n    toggleIsDeleteCalloutVisible()\r\n  }\r\n\r\n  const [updateLandlordContact, { data: updateLandlordData }] = useMutation<Mutation, MutationUpdateLandlordContactArgs>(UPDATE_LANDLORD_CONTACT);\r\n\r\n  const updateLandlordContactButton = () => {\r\n\r\n      updateLandlordContact({\r\n        variables: {\r\n          contactId: contact.contactId,\r\n          name: editContact.name,\r\n          email: editContact.email,\r\n          mobileNo: editContact.mobileNo,\r\n          officeNo: editContact.officeNo,\r\n        },\r\n\r\n        update(cache, { data }) {\r\n\r\n          if (!data) {\r\n              return null;\r\n          }\r\n  \r\n          const getExistingLandlords = cache.readQuery<Query>({ query: GET_LANDLORDS });\r\n          // Add the new todo to the cache\r\n          const existingLandlords = getExistingLandlords ? getExistingLandlords.landlords : [];\r\n          const selectedLandlord = existingLandlords!.find(t => \r\n            t.landlordId === landlordId\r\n          )\r\n          const otherLandlords = existingLandlords!.filter (t => {\r\n            return t.landlordId !== landlordId\r\n          })\r\n          const existingContacts = selectedLandlord?.contactsList\r\n          const otherContacts = existingContacts!.filter (t => {\r\n            return t.contactId !== contact.contactId\r\n          })\r\n          const newContact = data.updateLandlordContact\r\n         const updatedLandlord = {landlordId: selectedLandlord!.landlordId, landlordName: selectedLandlord!.landlordName , contactsList: [...otherContacts, newContact ]}\r\n          if (existingLandlords)\r\n              cache.writeQuery<Query>({\r\n                  query: GET_LANDLORDS,\r\n                  data: { landlords: [updatedLandlord!, ...otherLandlords] }\r\n              });\r\n      }\r\n\r\n    })\r\n    setEditContact(\r\n      {name: \"\",\r\n    email: \"\",\r\n    mobileNo: \"\",\r\n    officeNo: \"\"}\r\n    )\r\n    toggleIsEditContactCalloutVisible()\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /* const [deleteProperty, { data: deletePropertyData }] = useMutation<Mutation, MutationDeletePropertyArgs>(DELETE_PROPERTY);\r\n\r\n  const deletePropertyButton = () => {\r\n\r\n    deleteProperty({\r\n      variables: {\r\n        propertyId: property.propertyId\r\n      },\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingProperties = cache.readQuery<Query>({ query: GET_PROPERTIES });\r\n        \r\n        const existingProperties = getExistingProperties ? getExistingProperties.properties : [];\r\n        const newProperties = existingProperties!.filter(t => {\r\n          if (t)\r\n            return (t.propertyId !== property.propertyId)\r\n        });  \r\n        if (existingProperties)\r\n          cache.writeQuery<Query>({\r\n            query: GET_PROPERTIES,\r\n            data: { properties: newProperties }\r\n          });\r\n      }\r\n\r\n    })\r\n\r\n  } */\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const styles = mergeStyleSets({\r\n    /*  buttonArea: {\r\n       verticalAlign: 'top',\r\n       display: 'inline-block',\r\n       textAlign: 'center',\r\n       margin: '0 100px',\r\n       minWidth: 130,\r\n       height: 32,\r\n     }, */\r\n    callout: {\r\n      maxWidth: 400,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const chevronClass = mergeStyles({\r\n    alignSelf: 'center',\r\n    marginLeft: 2,\r\n    /*  marginRight: 5, */\r\n    marginTop: \"0 !important\",\r\n    /* color: palette.neutralTertiary, */\r\n    fontSize: 20,\r\n    flexShrink: 0,\r\n    cursor: \"pointer\",\r\n    /* selectors: {\r\n      '&:hover': { \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\" },\r\n    }, */\r\n\r\n  });\r\n\r\n  const iconClass = mergeStyles({\r\n    fontSize: 50,\r\n    height: 50,\r\n    width: 50,\r\n\r\n\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginTop: \"-10px !important\",\r\n    padding: \"5px\",\r\n\r\n\r\n\r\n  });\r\n\r\n  const chevronIconDiv = mergeStyles({\r\n    /* fontSize: 50, */\r\n    height: 40,\r\n    width: 40,\r\n    lineHeight: 40,\r\n    textAlign: \"center\",\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginTop: \"0px !important\",\r\n    /* padding: \"5px\", */\r\n    selectors: {\r\n      '&:hover': { backgroundColor: \"rgb(0 13 255 / 14%)\", borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n    },\r\n\r\n  });\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyHeadingStyles = { alignSelf: \"start\", fontSize: \"23px\", padding: 5 }\r\n  const contactDetailsStyles = { alignSelf: \"start\", fontSize: \"14px\", padding: 5, width: \"100%\", display: \"flex\", }\r\n  const theme = getTheme();\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: \"auto\",\r\n      marginTop: '0px !important',\r\n      marginBottom:0,\r\n      marginRight: 5,\r\n      width: 30,\r\n      height: 30,\r\n      /* visibility: isChecked() ? \"visible\" : \"hidden\", */\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n      backgroundColor: \"rgb(255 0 0 / 14%)\",\r\n      borderRadius: 30,\r\n      \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\"\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"18px\",\r\n      marginLeft: 6\r\n\r\n    }\r\n  };\r\n\r\n  const contactIconClass = mergeStyles({\r\n    transform: \"translateY(2px)\",\r\n    marginRight: 15,\r\n    fontSize: \"medium\"\r\n\r\n});\r\n\r\n  const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n  const editIcon: IIconProps = { iconName: 'Edit' };\r\n\r\n  const textFieldContactStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 250 } };\r\n\r\n\r\n  const onChangeContactName = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setEditContact({ ...editContact, name: newValue! });\r\n    },\r\n    [editContact],\r\n  );\r\n\r\n  const onChangeContactEmail = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setEditContact({ ...editContact, email: newValue! });\r\n    },\r\n    [editContact],\r\n  );\r\n\r\n  const onChangeContactMobileNo = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setEditContact({ ...editContact, mobileNo: newValue! });\r\n    },\r\n    [editContact],\r\n  );\r\n\r\n  const onChangeContactOfficeNo = React.useCallback(\r\n    (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n      setEditContact({ ...editContact, officeNo: newValue! });\r\n    },\r\n    [editContact],\r\n  );\r\n\r\n  return (\r\n\r\n\r\n\r\n    <Stack\r\n      horizontalAlign=\"start\"\r\n      verticalAlign=\"start\"\r\n      id=\"card\"\r\nverticalFill\r\n      styles={{\r\n        root: {\r\n          width: \"47%\",\r\n          marginBottom: 10,\r\n          marginLeft: \"auto !important\",\r\n          marginRight: \"auto\",\r\n          marginTop: 10,\r\n          padding: '10px',\r\n          textAlign: 'center',\r\n          color: '#605e5c',\r\n         /*  alignItems: \"center\", */\r\n          display: \"flex\",\r\n         /*  flexFlow: \"row\", */\r\n          /*  borderTop: \"4px solid #2557a2;\",\r\n           borderBottom: \"4px solid #2557a2;\", */\r\n          backgroundColor: \"white\",\r\n          background: /* isChecked() ? \"rgb(104 113 140 / 14%)\" : */ \"white\",\r\n          boxShadow: \"-1px 1px 7px 2px #d4cece\",\r\n          selectors: {\r\n            '&:hover': { background: /* palette.neutralLight */  \"rgb(104 113 140 / 14%)\" },\r\n          },\r\n\r\n        }\r\n      }}\r\n      gap={15}>\r\n\r\n\r\n\r\n     \r\n\r\n      <Stack styles={{ root: { paddingTop: 0, marginTop: \"0 !important\", marginBottom: \"auto\", width: \"100%\" } }} verticalFill>\r\n        <Text block={true} nowrap={true} style={contactDetailsStyles}><Icon className={contactIconClass} iconName=\"Contact\" /> {contact.name}</Text>\r\n        <Text block={true} nowrap={true} style={contactDetailsStyles}><Icon className={contactIconClass} iconName=\"Mail\" />{contact.email!.length <26? contact.email: `${contact.email?.slice(0,25)}...` }</Text>\r\n        <Text  style={contactDetailsStyles}><Icon className={contactIconClass} iconName=\"Phone\" />{contact.officeNo}</Text>\r\n        <Text  style={contactDetailsStyles}> <Icon className={contactIconClass} iconName=\"CellPhone\" />{contact.mobileNo}</Text>\r\n\r\n\r\n\r\n      </Stack>\r\n\r\n      <Stack styles={{root:{marginRight:5, marginLeft: \"auto !important\", marginTop:\"-30px !important\"}}} horizontal>\r\n\r\n      <IconButton\r\n        styles={iconButtonStyles}\r\n        id={`contactDeleteButton${contact.contactId}`}\r\n        iconProps={deleteIcon}\r\n        ariaLabel=\"Delete Contact\"\r\n        onClick={toggleIsDeleteCalloutVisible}\r\n      />\r\n      {isDeleteCalloutVisible ? (\r\n        <div>\r\n          <FocusTrapCallout\r\n            role=\"alertdialog\"\r\n            className={styles.callout}\r\n            gapSpace={0}\r\n            target={`#contactDeleteButton${contact.contactId}`}\r\n            onDismiss={toggleIsDeleteCalloutVisible}\r\n            setInitialFocus\r\n          >\r\n            <div className={styles.header}>\r\n              <Text className={styles.title}>Delete Contact</Text>\r\n            </div>\r\n            <div className={styles.inner}>\r\n              <div>\r\n                <Text className={styles.subtext}>\r\n                  Are you sure you want to delete this contact?\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <FocusZone>\r\n              <Stack className={styles.buttons} gap={8} horizontal>\r\n                <PrimaryButton onClick={deleteLandlordContactButton}>Confirm</PrimaryButton>\r\n                <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n              </Stack>\r\n            </FocusZone>\r\n          </FocusTrapCallout>\r\n        </div>\r\n      ) : null}\r\n\r\n      <IconButton\r\n        styles={iconButtonStyles}\r\n        id={`editContactButton${contact.contactId}`}\r\n        iconProps={editIcon}\r\n        ariaLabel=\"Edit Contact\"\r\n        onClick={toggleIsEditContactCalloutVisible}\r\n      />\r\n      {isEditContactCalloutVisible ? (\r\n          <div>\r\n            <FocusTrapCallout\r\n              role=\"alertdialog\"\r\n              className={styles.callout}\r\n              gapSpace={0}\r\n              target={`#editContactButton${contact.contactId}`}\r\n              onDismiss={toggleIsEditContactCalloutVisible}\r\n              setInitialFocus\r\n              directionalHint={DirectionalHint.bottomCenter}\r\n            >\r\n              <div className={styles.header}>\r\n                <Text className={styles.title}>Edit Contact</Text>\r\n              </div>\r\n              <div className={styles.inner}>\r\n                <div>\r\n\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Name\"\r\n                    value={editContact.name}\r\n                    onChange={onChangeContactName}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Email\"\r\n                    value={editContact.email}\r\n                    onChange={onChangeContactEmail}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Mobile No\"\r\n                    value={editContact.mobileNo}\r\n                    onChange={onChangeContactMobileNo}>\r\n                  </TextField>\r\n                  <TextField\r\n                    styles={textFieldContactStyles}\r\n                    label=\"Office No\"\r\n                    value={editContact.officeNo}\r\n                    onChange={onChangeContactOfficeNo}>\r\n                  </TextField>\r\n                </div>\r\n              </div>\r\n              <FocusZone>\r\n                <Stack className={styles.buttons} gap={8} horizontal>\r\n                  <PrimaryButton onClick={updateLandlordContactButton}>Confirm</PrimaryButton>\r\n                  <DefaultButton onClick={toggleIsEditContactCalloutVisible}>Cancel</DefaultButton>\r\n                </Stack>\r\n              </FocusZone>\r\n            </FocusTrapCallout>\r\n          </div>\r\n        ) : null}\r\n\r\n\r\n      </Stack>\r\n      \r\n\r\n\r\n    </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default ContactListItem","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\assets\\svgIcons.js",[],["559","560"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\DuplicatePremisesModal.tsx",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PremisesNotesModal.tsx",["595","596","597","598","599","600","601","602","603","604","605","606","607"],"import * as React from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    DefaultButton,\r\n    Modal,\r\n    IModalStyles,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    ILayerProps,\r\n    IModalProps,\r\n    Stack,\r\n    Text,\r\n    IStackStyles\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { GET_SINGLE_PROPERTY, } from \"../gql/gql\"\r\nimport { Query, NavigationState } from \"../schematypes/schematypes\"\r\nimport { useQuery, } from '@apollo/client';\r\nimport { navigationState as navigationStateVar } from \"../reactivevariables/reactivevariables\"\r\n\r\n\r\n\r\n\r\n\r\ntype Maybe<T> = T | null;\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\ninterface Props {\r\n    propertyId: number\r\n    premisesId: number\r\n    showPremisesNotesModal: boolean;\r\n    /* imagesArray: Maybe<string>[] */\r\n}\r\n\r\nconst PremisesNotesModal: React.FC<Props> = ({ showPremisesNotesModal, propertyId, premisesId }) => {\r\n\r\n\r\n\r\n    const {\r\n        data: propertyData,\r\n        loading: propertyLoading,\r\n        error: propertyError\r\n    } = useQuery<Query>(GET_SINGLE_PROPERTY, {\r\n        variables: { propertyId: propertyId },\r\n    });\r\n\r\n    const getPremises = propertyData?.singleProperty?.premisesList!.find(premises => premises?.premisesId === premisesId);\r\n\r\n\r\n    /* const {\r\n      data: navigationStateData,\r\n      loading: navigationLoading,\r\n      error: navigationError\r\n    } = useQuery<Query>(GET_NAV_STATE);\r\n  \r\n    \r\n  const navStateQuery =() => {\r\n      const {\r\n          data: navigationStateData,\r\n          loading: navigationLoading,\r\n          error: navigationError\r\n        } = useQuery<Query>(GET_NAV_STATE);\r\n  \r\n  } */\r\n\r\n\r\n    /* console.log(navigationStateData?.navigationState) */\r\n\r\n    const hidePremisesNotesModal = () => {\r\n        navigationStateVar({ ...navigationStateVar(), showPremisesNotesModal: false })\r\n    }\r\n\r\n    \r\n\r\n    const modalStyles: Partial<IModalStyles> = { main: { position: \"absolute\", top: 150 }, };\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const notesHeadingStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n    const notesStyles = { alignSelf: \"start\", fontSize: \"14px\", paddingLeft: \"15px\", marginLeft:20 }\r\n\r\n    const featuresStyles = { alignSelf: \"start\", fontSize: \"14px\", paddingLeft: \"15px\" }\r\n    const featuresHeadingStyles = { alignSelf: \"start\", fontSize: \"14px\", paddingLeft: \"15px\" }\r\n\r\n    /* const onLayerDidMount: ILayerProps ={\r\n        onLayerDidMount: true\r\n    } */\r\n\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n    const titleId = useId('Notes&Features');\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                titleAriaId={titleId}\r\n                isOpen={showPremisesNotesModal}\r\n                /* onDismiss={hideImageGalleryModal} */\r\n                isBlocking={true}\r\n                containerClassName={contentStyles.container}\r\n                styles={modalStyles}\r\n            /* modalProps={modalProps} */\r\n            /*  layerProps={onLayerDidMount} */\r\n\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>{`Notes & Features`}</span>\r\n                    <IconButton\r\n                        styles={iconButtonStyles}\r\n                        iconProps={cancelIcon}\r\n                        ariaLabel={\"Close Notes & Features Modal\"}\r\n                        onClick={hidePremisesNotesModal}\r\n                    />\r\n                </div>\r\n                <div className={contentStyles.body}>\r\n\r\n                    <Stack verticalFill styles={{\r\n                        root: {\r\n                            marginTop: \"0 !important\",\r\n                            marginBottom: 20,\r\n                        },\r\n                    }}\r\n                        gap={15}>\r\n                        <Text styles={boldStyle} style={notesHeadingStyles}>Industrial Features:</Text>\r\n                        <Stack horizontal styles={{\r\n                        root: {\r\n                            marginLeft:20\r\n                        },\r\n                    }}>\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>Yard Size:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.yard} m²`}</Text>\r\n\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>Floor to Eave Height:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.height} m`}</Text>\r\n\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>No of Doors:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.doors}`}</Text>\r\n                        </Stack>\r\n\r\n                        <Stack horizontal styles={{\r\n                        root: {\r\n                            marginLeft:20\r\n                        },\r\n                    }}>\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>Loading Type:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.loading}`}</Text>\r\n\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>Sprinkler Type:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.sprinklered}`}</Text>\r\n\r\n                            \r\n                        </Stack>\r\n\r\n                        <Stack horizontal styles={{\r\n                        root: {\r\n                            marginLeft:20\r\n                        },\r\n                    }}>\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>Canopy Details:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.canopies}`}</Text>\r\n\r\n                            <Text styles={boldStyle} style={featuresHeadingStyles}>Power:</Text>\r\n                            <Text /* styles={boldStyle} */ style={featuresStyles}>{`${getPremises?.power}`}</Text>\r\n\r\n                            \r\n                        </Stack>\r\n\r\n\r\n\r\n                    </Stack>\r\n\r\n                    <Stack verticalFill styles={{\r\n                        root: {\r\n                            marginTop: \"0 !important\",\r\n                            marginBottom: 20,\r\n                        },\r\n                    }}\r\n                        gap={15}>\r\n                        <Text styles={boldStyle} style={notesHeadingStyles}>Premises Notes:</Text>\r\n                        <Text /* styles={boldStyle} */ style={notesStyles}>{getPremises?.premisesNotes}</Text>\r\n\r\n\r\n                    </Stack>\r\n\r\n                    <Stack verticalFill styles={{\r\n                        root: {\r\n                            marginTop: \"0 !important\"\r\n                        },\r\n                    }}\r\n                        gap={15}>\r\n                        <Text styles={boldStyle} style={notesHeadingStyles}>Tenant Notes:</Text>\r\n                        <Text /* styles={boldStyle} */ style={notesStyles}>{getPremises?.tenantNotes}</Text>\r\n\r\n\r\n                    </Stack>\r\n\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        width: 550\r\n    },\r\n    header: [\r\n\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\nconst toggleStyles = { root: { marginBottom: '20px' } };\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: 'auto',\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n};\r\n\r\nexport default PremisesNotesModal","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\UpdatePremisesModal.tsx",["608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\NewPremisesModal.tsx",["642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ImageGalleryModal.tsx",["674","675","676","677","678","679","680","681","682","683","684","685","686","687","688"],"import * as React from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport {\r\n  getTheme,\r\n  mergeStyleSets,\r\n  FontWeights,\r\n  ContextualMenu,\r\n  Toggle,\r\n  DefaultButton,\r\n  Modal,\r\n  IDragOptions,\r\n  IconButton,\r\n  IIconProps,\r\n  ILayerProps,\r\n  IModalProps\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { GET_NAV_STATE, } from \"../gql/gql\"\r\nimport { Query, NavigationState } from \"../schematypes/schematypes\"\r\nimport { gql, useQuery, } from '@apollo/client';\r\nimport {navigationState as navigationStateVar} from \"../reactivevariables/reactivevariables\"\r\nimport ImageSlider from \"./ImageSlider\"\r\n\r\ntype Maybe<T> = T | null;\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\ninterface Props {\r\n    propertyId: number;\r\n    showImageGalleryModal: boolean;\r\n    /* imagesArray: Maybe<string>[] */\r\n}\r\n\r\nconst ImageGalleryModal: React.FC<Props> = ({showImageGalleryModal, propertyId}) => {\r\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n  \r\n  /* const {\r\n    data: navigationStateData,\r\n    loading: navigationLoading,\r\n    error: navigationError\r\n  } = useQuery<Query>(GET_NAV_STATE);\r\n\r\n  \r\nconst navStateQuery =() => {\r\n    const {\r\n        data: navigationStateData,\r\n        loading: navigationLoading,\r\n        error: navigationError\r\n      } = useQuery<Query>(GET_NAV_STATE);\r\n\r\n} */\r\n\r\n\r\n  /* console.log(navigationStateData?.navigationState) */\r\n\r\n  const hideImageGalleryModal = () => {\r\n    navigationStateVar({ ...navigationStateVar(), showImageGalleryModal: false })\r\n}\r\n\r\nconst modalProps: IModalProps = {\r\n    isBlocking: false,\r\n    styles: { main: { maxWidth: 450 } },\r\n  };\r\n\r\n/* const onLayerDidMount: ILayerProps ={\r\n    onLayerDidMount: true\r\n} */\r\n\r\n  // Use useId() to ensure that the IDs are unique on the page.\r\n  // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n  const titleId = useId('ImageGallery');\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Modal\r\n        titleAriaId={titleId}\r\n        isOpen={showImageGalleryModal}\r\n        onDismiss={hideModal}\r\n        isBlocking={true}\r\n        containerClassName={contentStyles.container}\r\n        /* modalProps={modalProps} */\r\n       /*  layerProps={onLayerDidMount} */\r\n        \r\n      >\r\n        <div className={contentStyles.header}>\r\n          <span id={titleId}>Image Gallery</span>\r\n          <IconButton\r\n            styles={iconButtonStyles}\r\n            iconProps={cancelIcon}\r\n            ariaLabel=\"Close image gallery\"\r\n            onClick={hideImageGalleryModal}\r\n          />\r\n        </div>\r\n        <div className={contentStyles.body}>\r\n        <ImageSlider propertyId={propertyId} ></ImageSlider>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    alignItems: 'stretch',\r\n  },\r\n  header: [\r\n    \r\n    theme.fonts.xLargePlus,\r\n    {\r\n      flex: '1 1 auto',\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      fontWeight: FontWeights.semibold,\r\n      padding: '12px 12px 14px 24px',\r\n    },\r\n  ],\r\n  body: {\r\n    flex: '4 4 auto',\r\n    padding: '0 24px 24px 24px',\r\n    overflowY: 'hidden',\r\n    selectors: {\r\n      p: { margin: '14px 0' },\r\n      'p:first-child': { marginTop: 0 },\r\n      'p:last-child': { marginBottom: 0 },\r\n    },\r\n  },\r\n});\r\nconst toggleStyles = { root: { marginBottom: '20px' } };\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: 'auto',\r\n    marginTop: '4px',\r\n    marginRight: '2px',\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n\r\nexport default ImageGalleryModal","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PremisesList.tsx",["689","690","691","692","693","694","695","696","697"],"import * as React from 'react';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Property } from \"../schematypes/schematypes\"\r\nimport { useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport PremisesListItem from \"./PremisesListItem\"\r\nimport { Text, Stack, ITextStyles, IStyleFunctionOrObject, IconButton, IIconProps } from 'office-ui-fabric-react';\r\n/* import { DeepPartial  } from 'office-ui-fabric-react/lib/Styling'; */\r\nimport { TooltipHost, ITooltipHostStyles, ITooltipHostStyleProps, } from 'office-ui-fabric-react/lib/Tooltip';\r\nimport { useId } from '@uifabric/react-hooks';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nconst calloutProps = { gapSpace: 0 };\r\n// The TooltipHost root uses display: inline by default.\r\n// If that's causing sizing issues or tooltip positioning issues, try overriding to inline-block.\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    singleProperty: Property | undefined\r\n}\r\n\r\nexport const PremisesList: React.FunctionComponent<Props> = ({ singleProperty }) => {\r\n\r\n   \r\n\r\n    const tooltipNetRentalId = useId('NetRental');\r\n    const tooltipOpCostsId = useId('NetRental');\r\n    const tooltipOtherId = useId('NetRental');\r\n    const tooltipGrossRentalId = useId('NetRental');\r\n    const tooltipOpenRateId = useId('NetRental');\r\n    const tooltipCoveredRateId = useId('NetRental');\r\n    const tooltipShadedRateId = useId('NetRental');\r\n    const tooltipEscId = useId('NetRental');\r\n    const tooltipParkingRatioId = useId('NetRental');\r\n\r\n    const tooltipHostStyles: IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles> = { root: { display: \"flex\" } }\r\n\r\n    var originalPropertyData = singleProperty\r\n    var originalPremises = originalPropertyData!.premisesList!\r\n    var indexSortedPremises = originalPremises.slice().sort((a, b) => {\r\n        return (a.premisesIndex!) - (b.premisesIndex!)\r\n    });\r\n\r\n    var floorSortedPremises = indexSortedPremises.slice().sort((a, b) => {\r\n        var floorA = a.floor!.toUpperCase();\r\n        var floorB = b.floor!.toUpperCase();\r\n        if (floorA < floorB && a.premisesIndex=== b.premisesIndex) {\r\n            return -1;\r\n        }\r\n        if (floorA > floorB && a.premisesIndex=== b.premisesIndex) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n\r\n\r\n    const tableCellStyles: ITextStyles = { root: { alignSelf: \"start\", fontSize: \"14px\", padding: 5, marginTop: \"auto !important\", marginBottom: \"auto\", width: 45, /* fontStyle : \"italic\", */ fontWeight: 600, } }\r\n    const tableCellTenantStyles: ITextStyles = { root: {height: 19, marginTop: \"9.5px !important\", marginBottom:9.5 , alignSelf: \"start\", fontSize: \"14px\", padding: 5,   /* fontStyle : \"italic\", */ fontWeight: 600, } }\r\n    const tableCellNotesStyles: ITextStyles = { root: {height: 19, marginTop: \"auto !important\", marginBottom:18 , alignSelf: \"start\", fontSize: \"14px\", padding: 5,   /* fontStyle : \"italic\", */ fontWeight: 600, } }\r\n    const tableHeadingStyles: ITextStyles = { root: { fontSize: \"18px\", paddingTop: 5, fontWeight: 600, } }\r\n    const tableCellBelowStyles: ITextStyles = { root: { alignSelf: \"start\", fontSize: \"10px\", padding: 0, marginTop: \"auto !important\", marginBottom: \"auto\", width: 50, } }\r\n    const theme = getTheme();\r\n    const iconButtonStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            marginLeft: 20,\r\n            marginTop: '0px !important',\r\n            marginRight: 5,\r\n            width: 35,\r\n            height: 35,\r\n            /*  visibility: isChecked() ? \"visible\" : \"hidden\", */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n            backgroundColor: \"rgb(3 122 212 / 16%);\",\r\n            /* borderRadius: 30, */\r\n            \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\"\r\n\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n            marginLeft: 6\r\n\r\n        }\r\n    };\r\n\r\n    const addIcon: IIconProps = { iconName: 'Add' };\r\n\r\n    /* const onFilterChanged = (_: any, text: string): void => {\r\n      setItems(originalItems.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0));\r\n    }; */\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Stack\r\n                horizontalAlign=\"start\"\r\n                verticalAlign=\"start\"\r\n                id=\"premisesListHeadings\"\r\n\r\n                styles={{\r\n                    root: {\r\n                        width: \"fit-content\",\r\n                        marginBottom: 10,\r\n                        marginTop: 20,\r\n                        marginLeft: 20,\r\n                        marginRight: \"auto\",\r\n                        /* padding: '10px', */\r\n                        textAlign: 'center',\r\n                        color: '#605e5c',\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexFlow: \"row\",\r\n                        /*  borderTop: \"4px solid #2557a2;\",\r\n                         borderBottom: \"4px solid #2557a2;\", */\r\n                        backgroundColor: \"white\",\r\n                        /*  background: isChecked() ? \"rgb(104 113 140 / 14%)\" : \"white\", */\r\n                        /* boxShadow: \"-1px 1px 7px 2px #d4cece\", */\r\n                        /* selectors: {\r\n                            '&:hover': { background:   \"rgb(104 113 140 / 14%)\" },\r\n                        }, */\r\n\r\n                    }\r\n                }}\r\n            >\r\n\r\n                {/*  <Stack verticalAlign=\"start\" horizontalAlign=\"start\" styles={{\r\n                    root: {\r\n                        textAlign: 'center',\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexFlow: \"row\",\r\n                    }\r\n                }}>\r\n                    <div style={{ width: 50, display: \"flex\" }}></div>\r\n                    <div style={{ width: 350, display: \"flex\" }}>Premises Details</div>\r\n                    <div style={{ width: 250, display: \"flex\" }}>Rental Details</div>\r\n                    <div style={{ width: 390, display: \"flex\" }}>Parking Details</div>\r\n                    <div style={{ width: 275, display: \"flex\" }}>Tenant Details</div>\r\n                    <div style={{ width: 50, display: \"flex\" }}></div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Stack> */}\r\n\r\n                <Stack verticalAlign=\"start\" horizontalAlign=\"start\" styles={{\r\n                    root: {\r\n                        textAlign: 'center',\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexFlow: \"row\",\r\n                    }\r\n                }}>\r\n\r\n                    <div style={{ width: 80, display: \"flex\" }}>\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={addIcon}\r\n                            ariaLabel=\"Add Premises\"\r\n                            onClick={() => navigationState({ ...navigationState(), showNewPremisesModal: true })}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(210 26 69 / 42%)\",\r\n                        borderRight: \"3px solid rgb(210 26 69 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(210 26 69 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Premises Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <Text styles={tableCellStyles} style={{ width: 100 }}>Floor/ Unit</Text>\r\n                            <Text styles={tableCellStyles}>Area</Text>\r\n                            <Text styles={tableCellStyles}>Vacant</Text>\r\n                            <Text styles={tableCellStyles} style={{ width: 55 }}>Type</Text>\r\n                            <Text styles={tableCellStyles} style={{ width: 100 }}>Occupation Date</Text>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(63 55 189 / 42%)\",\r\n                        borderRight: \"3px solid rgb(63 55 189 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(63 55 189 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Rental Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipNetRentalId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Net Rental</Text> </TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipOpCostsId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Op Costs</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipOtherId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Other Costs</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipGrossRentalId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Gross Rental</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"annual %\" id={tooltipEscId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Esc</Text></TooltipHost>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(61 177 123 / 42%)\",\r\n                        borderRight: \"3px solid rgb(61 177 123 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(61 177 123 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Parking Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <Text styles={tableCellStyles}>Open Bays</Text>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipOpenRateId} calloutProps={calloutProps}><Text styles={tableCellStyles}>Open Rate</Text></TooltipHost>\r\n                            <Text styles={tableCellStyles} style={{ width: 50 }}>Covered Bays</Text>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipCoveredRateId} calloutProps={calloutProps}> <Text styles={tableCellStyles} style={{ width: 50 }}>Covered Rate</Text></TooltipHost>\r\n                            <Text styles={tableCellStyles} style={{ width: 50 }}>Shaded Bays</Text>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipShadedRateId} calloutProps={calloutProps}><Text styles={tableCellStyles} style={{ width: 50 }}>Shaded Rate</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"bays/100m²\" id={tooltipParkingRatioId} calloutProps={calloutProps}><Text styles={tableCellStyles} style={{ width: 50 }}>Parking Ratio</Text></TooltipHost>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(212 236 10 / 42%)\",\r\n                        borderRight: \"3px solid rgb(212 236 10 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(212 236 10 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Tenant Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <Text styles={tableCellTenantStyles} style={{ width: 125, height: 19, marginTop: \"9.5px !important\", marginBottom:9.5 }}>Tenant Name</Text>\r\n                            <Text styles={tableCellTenantStyles} style={{ width: 100 }}>Lease Expiry </Text>\r\n                        </div>\r\n                    </div>\r\n                    <Text style={{ width: 60 }} styles={tableCellNotesStyles}>{`Notes & Features`}</Text>\r\n                </Stack>\r\n            </Stack>\r\n\r\n\r\n            {floorSortedPremises.map(premises => {\r\n\r\n                return (\r\n                    <PremisesListItem key={premises?.premisesId} premises={premises!} propertyId={singleProperty?.propertyId!}> </PremisesListItem>\r\n                )\r\n\r\n            })}\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PremisesList","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\Map.tsx",["698","699","700","701","702"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PDFOutput\\SelectedPropertyListPDF.tsx",["703","704","705","706","707","708","709","710","711","712","713","714","715","716","717"],"import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\n\r\nimport { Font } from '@react-pdf/renderer'\r\nimport SegoeUI from \"../../assets/fonts/SegoeUI.ttf\"\r\nimport SegoeUIBold from \"../../assets/fonts/SegoeUIBold.ttf\"\r\n\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES } from \"../../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationUpdatePropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent } from \"../../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar } from \"../../reactivevariables/reactivevariables\"\r\nimport { Cloudinary } from \"cloudinary-core\"\r\n\r\n\r\n\r\nvar cl = new Cloudinary({ cloud_name: \"drlfedqyz\", secure: true });\r\nvar image = cl.url(\"1567618101_fela1x\", { width: 600, crop: \"fit\" })\r\nconsole.log(image)\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    frontPage: {\r\n        flexDirection: 'column',\r\n        backgroundColor: '#20314b',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    contactPage: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    overallContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n\r\n    },\r\n    detailsSection: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n\r\n\r\n        width: \"100%\",\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    imagesSection: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        paddingLeft: 80,\r\n\r\n        width: \"100%\",\r\n\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    footerSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginTop: \"auto\",\r\n        marginBottom: 0\r\n\r\n    },\r\n    headerText: {\r\n        margin: \"auto\",\r\n        fontSize: 20,\r\n        fontFamily: \"SegoeUI\",\r\n\r\n        color: \"white\",\r\n\r\n    },\r\n    footerImageSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \"backgroundColor\": '#1f304a',\r\n        width: \"100vw\",\r\n        height: \"65px\",\r\n\r\n\r\n    },\r\n    frontPageSection: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        \"backgroundColor\": '#20314b',\r\n        /* width: \"100vw\",\r\n        height: \"auto\", */\r\n    },\r\n    frontPageBackground: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        /*  \"backgroundColor\": '#20314b', */\r\n\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: 'auto',\r\n\r\n        /*  marginTop: \"auto\",\r\n         marginBottom: \"auto\", */\r\n        /* \"backgroundColor\": '#20314b', */\r\n\r\n\r\n    },\r\n    contactPageBackground: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        /*  \"backgroundColor\": '#20314b', */\r\n\r\n        position: \"absolute\",\r\n        top: 88,\r\n        left: 0,\r\n        width: 245.7,\r\n        height: 441,\r\n\r\n        /*  marginTop: \"auto\",\r\n         marginBottom: \"auto\", */\r\n        /* \"backgroundColor\": '#20314b', */\r\n\r\n\r\n    },\r\n    frontPageText1: {\r\n        fontSize: 30,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: \"20%\",\r\n    },\r\n    frontPageText2: {\r\n        fontSize: 30,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10\r\n    },\r\n    contactPageText1: {\r\n        fontSize: 18,\r\n        fontFamily: \"SegoeUI\",\r\n        /* fontWeight: \"bold\", */\r\n        color: \"black\",\r\n\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: \"15%\",\r\n        marginBottom: 10\r\n    },\r\n    contactPageText2: {\r\n        fontSize: 24,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10\r\n    },\r\n    contactPageText3: {\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        /* fontWeight: \"bold\", */\r\n        color: \"black\",\r\n        marginLeft: \"30%\",\r\n        marginRight: \"10%\",\r\n        marginBottom: 10,\r\n        marginTop: 100\r\n    },\r\n    headerSection: {\r\n        /* position: 'absolute',\r\n        bottom: 0,\r\n        left: 0, */\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \"backgroundColor\": '#20314b',\r\n        width: \"100vw\",\r\n        height: \"65px\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n    },\r\n    footerImageStyles: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n\r\n    },\r\n    pageNumbers: {\r\n        position: \"absolute\",\r\n        top: 20,\r\n        right: 20,\r\n        fontSize: 8,\r\n        color: \"white\",\r\n\r\n    },\r\n    enquiryHeading: {\r\n        fontFamily: 'SegoeUI',\r\n        margin: 10,\r\n        marginLeft: 40,\r\n        padding: 10,\r\n    },\r\n    propertyHeading: {\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        width: 125,\r\n        /*  height: \"20px\", */\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 1.5,\r\n        /* marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center', */\r\n    },\r\n    propertyText: {\r\n        fontSize: 10,\r\n        color: \"black\",\r\n        width: \"100%\",\r\n        /*  height: \"30px\", */\r\n        paddingLeft: 10,\r\n        /* paddingTop: 1.5, */\r\n    },\r\n    propertyNumber: {\r\n\r\n        fontSize: 12,\r\n        borderStyle: \"solid\",\r\n        height: 20,\r\n        width: 20,\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        paddingLeft: 7,\r\n        paddingTop: 1.5,\r\n        \"backgroundColor\": '#20314b',\r\n        color: \"white\",\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    propertyNumberColumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        marginLeft: 10,\r\n        paddingTop: 4,\r\n        /* width: \"10%\", */\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    propertyDetails: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        width: 110,\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    premisesDetailsContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n\r\n\r\n\r\n    premisesHeadings: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        /*  width: \"25%\", */\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        /*    flexGrow: 1, */\r\n        \"backgroundColor\": '#20314b',\r\n    },\r\n    premisesDetails: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        /*  width: \"25%\", */\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    premisesContainer: {\r\n        /* width: \"20%\", */\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        /* borderBottomWidth: 1,\r\n        borderBottomStyle: \"solid\", */\r\n        /*  height: 35, */\r\n        /*  height: \"30px\", */\r\n    },\r\n    premisesHeadingText: {\r\n        fontSize: 10,\r\n        /*  height: 15, */\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        color: \"white\",\r\n    },\r\n    premisesText: {\r\n        fontSize: 8,\r\n        /*  height: 15, */\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    premisesHeadingSubText: {\r\n        fontSize: 6,\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        height: 10,\r\n        color: \"white\",\r\n    },\r\n    imagesContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: 40,\r\n\r\n\r\n    },\r\n    image: {\r\n        width: 200,\r\n\r\n\r\n    },\r\n\r\n\r\n});\r\n\r\nFont.registerHyphenationCallback(word => [word]);\r\n\r\n\r\nFont.register({\r\n    family: 'SegoeUI', fonts: [\r\n        { src: SegoeUI }, { src: SegoeUIBold, fontStyle: 'normal', fontWeight: \"bold\" },\r\n        /*  { src: source2, fontStyle: 'italic' },\r\n         { src: source3, fontStyle: 'italic', fontWeight: 700 }, */\r\n    ]\r\n});\r\n\r\ninterface Props {\r\n\r\n    selectedPropertyList: SelectedPropertyList,\r\n    enquiryName: string,\r\n    agent: Agent,\r\n    imageLimit: string | number,\r\n    showImages: boolean\r\n\r\n    /* enquiryName: string */\r\n\r\n}\r\n\r\n\r\nconst SelectedPropertyListPDF: React.FC<Props> = ({ selectedPropertyList, enquiryName, agent, imageLimit, showImages }) => (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Document >\r\n\r\n        <Page orientation=\"landscape\" size=\"A4\" style={styles.frontPage}>\r\n\r\n            <Image style={styles.frontPageBackground} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610358103/background_2_duzy8o.jpg\"></Image>\r\n\r\n            <Text style={styles.frontPageText1} >Schedule of Accomodation:</Text>\r\n            <Text style={styles.frontPageText2} >{enquiryName}</Text>\r\n\r\n\r\n\r\n        </Page>\r\n        <Page wrap orientation=\"landscape\" size=\"A4\" style={styles.page}>\r\n            <View fixed style={styles.headerSection}>\r\n\r\n                <Text style={styles.headerText}>Property Details</Text>\r\n\r\n\r\n\r\n\r\n                <Text style={styles.pageNumbers} render={({ pageNumber, totalPages }) => (\r\n                    `${pageNumber-1} / ${totalPages-2}`\r\n                )} fixed />\r\n\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {selectedPropertyList.map((property, index) => (\r\n\r\n                <View minPresenceAhead={50} wrap={false} key={property.propertyId} style={styles.overallContainer}>\r\n\r\n                    <View style={styles.detailsSection}>\r\n\r\n                        <View style={styles.propertyNumberColumn}>\r\n                            <Text style={styles.propertyNumber}>{index + 1}</Text>\r\n                        </View>\r\n\r\n                        <View style={styles.propertyDetails}>\r\n\r\n\r\n                            <Text style={styles.propertyHeading}>{property.propertyName}</Text>\r\n                            <Text style={styles.propertyText}>{property.address}</Text>\r\n                            <Text style={styles.propertyText}>{property.suburb}</Text>\r\n                            {/* <Text style={styles.propertyText}>{property.province}</Text> */}\r\n\r\n\r\n\r\n                        </View>\r\n\r\n                        <View style={styles.premisesDetailsContainer}>\r\n\r\n                            <View style={styles.premisesHeadings}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={styles.premisesHeadingText} >Floor/ Unit</Text>\r\n                                    <Text style={styles.premisesHeadingSubText} ></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Area</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}>m²</Text>\r\n                                </View>\r\n                                {/*  <View style={[styles.premisesContainer, {width: 40}]}>\r\n                            <Text style={styles.premisesHeadingText} >Vacant?</Text>\r\n                            <Text style={styles.premisesHeadingSubText} ></Text>\r\n                        </View> */}\r\n                                <View style={[styles.premisesContainer, { width: 30 }]}>\r\n                                    <Text style={styles.premisesHeadingText} >Type</Text>\r\n                                    <Text style={styles.premisesHeadingSubText} ></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 55 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 55 }]} >Occupation Date</Text>\r\n                                    <Text style={styles.premisesHeadingSubText} ></Text>\r\n                                </View>\r\n\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Net Rental</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/m²/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Op Costs</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/m²/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Other</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/m²/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Gross Rental</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/m²/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 30 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 30 }]} >Esc</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 30 }]}>%</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Open Bays</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Open Rate</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/bay/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Covered Bays</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Covered Rate</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/bay/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Shaded Bays</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 45 }]} >Shaded Rate</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 45 }]}>R/bay/month</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 50 }]} >Parking Ratio</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 50 }]}>bays/100m²</Text>\r\n                                </View>\r\n                            </View>\r\n                            {selectedPropertyList[index].premisesList!.map((premises, index) => (\r\n\r\n                                <View style={index % 2 !== 0 ? styles.premisesDetails : [styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]}>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={styles.premisesText} >{premises.floor}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{premises.area}</Text>\r\n\r\n                                    </View>\r\n                                    {/*  <View style={[styles.premisesContainer, {width: 40}]}>\r\n<Text style={styles.premisesHeadingText} >Vacant?</Text>\r\n<Text style={styles.premisesHeadingSubText} ></Text>\r\n</View> */}\r\n                                    <View style={[styles.premisesContainer, { width: 30 }]}>\r\n                                        <Text style={styles.premisesText} >{premises.type === \"Warehouse\" ? \"W/H\" : premises.type}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 55 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 55 }]} >\r\n                                            {new Date(premises.occupation).toLocaleDateString(\r\n                                                'en-gb',\r\n                                                {\r\n                                                    year: 'numeric',\r\n                                                    month: 'numeric',\r\n                                                    day: 'numeric'\r\n                                                }\r\n                                            )}</Text>\r\n\r\n                                    </View>\r\n\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.netRental}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.opCosts}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.other}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.grossRental}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 30 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 30 }]} >{premises.esc}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{premises.openBays}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.openRate}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{premises.coveredBays}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.coveredRate}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{premises.shadedBays}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 45 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 45 }]} >{premises.shadedRate}</Text>\r\n\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{premises.parkingRatio}</Text>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n                            ))}\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </View>\r\n\r\n                    <View style={styles.imagesSection}>\r\n\r\n                        {showImages === true ? selectedPropertyList[index].images!.slice(0, 3).map((image, index) => (\r\n\r\n                            <View style={styles.imagesContainer} >\r\n                                <Image style={styles.image} src={cl.url(`${image}`, { width: 600, crop: \"fit\" })}></Image>\r\n                            </View>\r\n\r\n                        )): <Text></Text>}\r\n\r\n\r\n\r\n                    </View>\r\n\r\n\r\n\r\n\r\n                </View>\r\n\r\n\r\n            ))}\r\n            <View fixed style={styles.footerSection}>\r\n                <View style={styles.footerImageSection}>\r\n                    <Image style={styles.footerImageStyles} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610187102/EBLogoHeader_ypjyj5.jpg\"></Image>\r\n                </View>\r\n            </View>\r\n\r\n\r\n        </Page>\r\n        <Page orientation=\"landscape\" size=\"A4\" style={styles.contactPage}>\r\n            <View fixed style={styles.headerSection}>\r\n\r\n                <Text style={styles.headerText}>Contact</Text>\r\n\r\n\r\n            </View>\r\n            <Image style={styles.contactPageBackground} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610357459/lion_light_dptptx.jpg\"></Image>\r\n\r\n            <Text style={styles.contactPageText1} >For further information, please contact:</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined? agent.name : \"\" }</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined? agent.mobile : \"\"}</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined? agent.email : \"\"}</Text>\r\n\r\n            <Text style={styles.contactPageText3} >Whilst every effort has been made to ensure accuracy, no liability will be accepted for any errors or omissions and the prospective tenant/ purchaser is required to verify details prior to contract</Text>\r\n\r\n            <View fixed style={styles.footerSection}>\r\n                <View style={styles.footerImageSection}>\r\n                    <Image style={styles.footerImageStyles} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610187102/EBLogoHeader_ypjyj5.jpg\"></Image>\r\n                </View>\r\n            </View>\r\n\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nexport default SelectedPropertyListPDF","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PDFOutput\\PropertyListLargeImagesPDF.tsx",["718","719","720","721","722","723","724","725","726","727","728","729","730","731"],"import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\n\r\nimport { Font } from '@react-pdf/renderer'\r\nimport SegoeUI from \"../../assets/fonts/SegoeUI.ttf\"\r\nimport SegoeUIBold from \"../../assets/fonts/SegoeUIBold.ttf\"\r\n\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES } from \"../../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationUpdatePropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent } from \"../../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar } from \"../../reactivevariables/reactivevariables\"\r\nimport { Cloudinary } from \"cloudinary-core\"\r\n\r\n\r\n\r\nvar cl = new Cloudinary({ cloud_name: \"drlfedqyz\", secure: true });\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    frontPage: {\r\n        flexDirection: 'column',\r\n        backgroundColor: '#20314b',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    contactPage: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    overallContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n\r\n    },\r\n\r\n    initialPageContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  margin: 5, */\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    primaryImageContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: 0,\r\n        marginLeft: 20,\r\n        marginTop: 0,\r\n        marginBottom: \"auto\",\r\n    },\r\n    primaryImage: {\r\n        width: 600,\r\n        height: 400,\r\n        marginTop: 30,\r\n        marginBottom: \"auto\"\r\n    },\r\n    premisesDetailsContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: 30,\r\n        marginBottom: \"auto\",\r\n        marginLeft: 20\r\n        /*  height: 500 */\r\n        /* width: 120 */\r\n    },\r\n    propertyNumberColumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n\r\n        /*  marginTop: 0,\r\n         marginBottom: \"auto\", */\r\n        /*  marginLeft: 10,\r\n         paddingTop: 4, */\r\n        /* width: \"10%\", */\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    secondaryPageContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    secondaryImageContainers: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n    secondaryImage: {\r\n        width: 660,\r\n        height: 440,\r\n        marginTop: 13,\r\n        marginBottom: \"auto\"\r\n    },\r\n    /*  detailsSection: {\r\n         fontFamily: 'SegoeUI',\r\n         display: \"flex\",\r\n         flexDirection: \"row\",\r\n         margin: 5,\r\n         marginLeft: \"auto\",\r\n         marginRight: \"auto\",\r\n \r\n \r\n         width: \"100%\",\r\n         \r\n     }, */\r\n    premisesInfo: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginTop: 10,\r\n        marginLeft: 5,\r\n        marginRight: 0,\r\n        alignItems: \"flex-start\",\r\n        width: 175\r\n    },\r\n    premisesInfoHeadings: {\r\n\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n\r\n    },\r\n    premisesInfoText: {\r\n        marginLeft: 5,\r\n        fontSize: 10,\r\n        fontFamily: \"SegoeUI\",\r\n        color: \"black\",\r\n        paddingTop: 2\r\n\r\n    },\r\n    imagesSection: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        paddingLeft: 80,\r\n\r\n        width: \"100%\",\r\n\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    footerSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginTop: \"auto\",\r\n        marginBottom: 0\r\n\r\n    },\r\n    headerText: {\r\n        margin: \"auto\",\r\n        fontSize: 20,\r\n        fontFamily: \"SegoeUI\",\r\n\r\n        color: \"white\",\r\n\r\n    },\r\n    footerImageSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \"backgroundColor\": '#1f304a',\r\n        width: \"100vw\",\r\n        height: \"65px\",\r\n\r\n\r\n    },\r\n    frontPageSection: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        \"backgroundColor\": '#20314b',\r\n        /* width: \"100vw\",\r\n        height: \"auto\", */\r\n    },\r\n    frontPageBackground: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        /*  \"backgroundColor\": '#20314b', */\r\n\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: 'auto',\r\n\r\n        /*  marginTop: \"auto\",\r\n         marginBottom: \"auto\", */\r\n        /* \"backgroundColor\": '#20314b', */\r\n\r\n\r\n    },\r\n    contactPageBackground: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        /*  \"backgroundColor\": '#20314b', */\r\n\r\n        position: \"absolute\",\r\n        top: 88,\r\n        left: 0,\r\n        width: 245.7,\r\n        height: 441,\r\n\r\n        /*  marginTop: \"auto\",\r\n         marginBottom: \"auto\", */\r\n        /* \"backgroundColor\": '#20314b', */\r\n\r\n\r\n    },\r\n    frontPageText1: {\r\n        fontSize: 30,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: \"20%\",\r\n    },\r\n    frontPageText2: {\r\n        fontSize: 30,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10\r\n    },\r\n    contactPageText1: {\r\n        fontSize: 18,\r\n        fontFamily: \"SegoeUI\",\r\n        /* fontWeight: \"bold\", */\r\n        color: \"black\",\r\n\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: \"15%\",\r\n        marginBottom: 10\r\n    },\r\n    contactPageText2: {\r\n        fontSize: 24,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10\r\n    },\r\n    contactPageText3: {\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        /* fontWeight: \"bold\", */\r\n        color: \"black\",\r\n        marginLeft: \"30%\",\r\n        marginRight: \"10%\",\r\n        marginBottom: 10,\r\n        marginTop: 100\r\n    },\r\n    headerSection: {\r\n        /* position: 'absolute',\r\n        bottom: 0,\r\n        left: 0, */\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \"backgroundColor\": '#20314b',\r\n        width: \"100vw\",\r\n        height: \"65px\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n    },\r\n    footerImageStyles: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n\r\n    },\r\n    pageNumbers: {\r\n        position: \"absolute\",\r\n        top: 10,\r\n        right: 30,\r\n        fontSize: 10,\r\n        color: \"white\",\r\n\r\n    },\r\n    enquiryHeading: {\r\n        fontFamily: 'SegoeUI',\r\n        margin: 10,\r\n        marginLeft: 40,\r\n        padding: 10,\r\n    },\r\n    propertyHeading: {\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        /*  width: 125, */\r\n        /*  height: \"20px\", */\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 1.5,\r\n        /* marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center', */\r\n    },\r\n    propertyText: {\r\n        fontSize: 10,\r\n        color: \"black\",\r\n        width: \"100%\",\r\n        /*  height: \"30px\", */\r\n        paddingLeft: 10,\r\n        /* paddingTop: 1.5, */\r\n    },\r\n    propertyNumber: {\r\n\r\n        fontSize: 12,\r\n        borderStyle: \"solid\",\r\n        height: 20,\r\n        width: 20,\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        paddingLeft: 6.95,\r\n        paddingTop: 1.35,\r\n        \"backgroundColor\": '#20314b',\r\n        color: \"white\",\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    propertyNumber10plus: {\r\n\r\n        fontSize: 10,\r\n        borderStyle: \"solid\",\r\n        height: 20,\r\n        width: 20,\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        paddingLeft: 4.75,\r\n        paddingTop: 2.15,\r\n        \"backgroundColor\": '#20314b',\r\n        color: \"white\",\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n    propertyDetails: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        width: 125,\r\n        marginBottom: 10,\r\n        marginTop: 5,\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n\r\n    premisesDetailsHeading: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    },\r\n    parkingDetailsHeading: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    },\r\n\r\n\r\n\r\n    premisesHeadings: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        /*  width: \"25%\", */\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        /*    flexGrow: 1, */\r\n        \"backgroundColor\": '#20314b',\r\n    },\r\n    premisesDetails: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        /*  width: \"25%\", */\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    premisesContainer: {\r\n        /* width: \"20%\", */\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        /* borderBottomWidth: 1,\r\n        borderBottomStyle: \"solid\", */\r\n        /*  height: 35, */\r\n        /*  height: \"30px\", */\r\n    },\r\n    premisesHeadingText: {\r\n        fontSize: 10,\r\n        /*  height: 15, */\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        color: \"white\",\r\n    },\r\n    premisesText: {\r\n        fontSize: 8,\r\n        /*  height: 15, */\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    premisesHeadingSubText: {\r\n        fontSize: 6,\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        height: 10,\r\n        color: \"white\",\r\n    },\r\n    imagesContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: 40,\r\n\r\n\r\n    },\r\n    /*  image: {\r\n         width: 200,\r\n \r\n \r\n     }, */\r\n\r\n\r\n});\r\n\r\nFont.registerHyphenationCallback(word => [word]);\r\n\r\n\r\nFont.register({\r\n    family: 'SegoeUI', fonts: [\r\n        { src: SegoeUI }, { src: SegoeUIBold, fontStyle: 'normal', fontWeight: \"bold\" },\r\n        /*  { src: source2, fontStyle: 'italic' },\r\n         { src: source3, fontStyle: 'italic', fontWeight: 700 }, */\r\n    ]\r\n});\r\n\r\nconst getParkingRowsLength = (premises: Premises[]) => {\r\n    var count = 0\r\n    if(premises.reduce((acc, premises) => {\r\n        return acc + premises.openRate!\r\n    }, 0) > 0 ) {\r\n        count += 1\r\n    }\r\n\r\n    if(premises.reduce((acc, premises) => {\r\n        return acc + premises.coveredRate!\r\n    }, 0) > 0 ) {\r\n        count += 1\r\n    }\r\n\r\n    if(premises.reduce((acc, premises) => {\r\n        return acc + premises.shadedRate!\r\n    }, 0) > 0 ) {\r\n        count += 1\r\n    }\r\n    return count\r\n}\r\n\r\nconst getParkingRowsOrder = (premises: Premises[], rowType: string) => {\r\n    var parking = {covered: false, shaded: false, open: false}\r\n    \r\n\r\n    if(premises.reduce((acc, premises) => {\r\n        return acc + premises.coveredRate!\r\n    }, 0) > 0 ) {\r\n        parking.covered = true\r\n    } else {parking.covered = false}\r\n\r\n    if(premises.reduce((acc, premises) => {\r\n        return acc + premises.shadedRate!\r\n    }, 0) > 0 ) {\r\n        parking.shaded = true\r\n    } else {parking.shaded = false}\r\n\r\n    if(premises.reduce((acc, premises) => {\r\n        return acc + premises.openRate!\r\n    }, 0) > 0 ) {\r\n        parking.open = true\r\n    } else {parking.open = false}\r\n\r\n    //true true true\r\n\r\n    if(parking.covered === true && parking.shaded === true && parking.open === true && rowType === \"covered\" )\r\n    return true\r\n\r\n    if(parking.covered === true && parking.shaded === true && parking.open === true && rowType === \"shaded\" )\r\n    return false\r\n\r\n    if(parking.covered === true && parking.shaded === true && parking.open === true && rowType === \"open\" )\r\n    return true\r\n\r\n    //false true true\r\n\r\n    if(parking.covered === false && parking.shaded === true && parking.open === true && rowType === \"covered\" )\r\n    return true\r\n\r\n    if(parking.covered === false && parking.shaded === true && parking.open === true && rowType === \"shaded\" )\r\n    return true\r\n\r\n    if(parking.covered === false && parking.shaded === true && parking.open === true && rowType === \"open\" )\r\n    return false\r\n\r\n    //false false true\r\n\r\n    if(parking.covered === false && parking.shaded === false && parking.open === true && rowType === \"covered\" )\r\n    return false\r\n\r\n    if(parking.covered === false && parking.shaded === false && parking.open === true && rowType === \"shaded\" )\r\n    return false\r\n\r\n    if(parking.covered === false && parking.shaded === false && parking.open === true && rowType === \"open\" )\r\n    return true\r\n\r\n    //true false true\r\n\r\n    if(parking.covered === true && parking.shaded === false && parking.open === true && rowType === \"covered\" )\r\n    return true\r\n\r\n    if(parking.covered === true && parking.shaded === false && parking.open === true && rowType === \"shaded\" )\r\n    return false\r\n\r\n    if(parking.covered === true && parking.shaded === false && parking.open === true && rowType === \"open\" )\r\n    return false\r\n\r\n    //true true false\r\n\r\n    if(parking.covered === true && parking.shaded === true && parking.open === false && rowType === \"covered\" )\r\n    return true\r\n\r\n    if(parking.covered === true && parking.shaded === true && parking.open === false && rowType === \"shaded\" )\r\n    return false\r\n\r\n    if(parking.covered === true && parking.shaded === true && parking.open === false && rowType === \"open\" )\r\n    return false\r\n\r\n    //false true false\r\n\r\n    if(parking.covered === false && parking.shaded === true && parking.open === false && rowType === \"covered\" )\r\n    return false\r\n\r\n    if(parking.covered === false && parking.shaded === true && parking.open === false && rowType === \"shaded\" )\r\n    return true\r\n\r\n    if(parking.covered === false && parking.shaded === true && parking.open === false && rowType === \"open\" )\r\n    return false\r\n\r\n    //true false false\r\n\r\n    if(parking.covered === true && parking.shaded === false && parking.open === false && rowType === \"covered\" )\r\n    return true\r\n\r\n    if(parking.covered === true && parking.shaded === false && parking.open === false && rowType === \"shaded\" )\r\n    return false\r\n\r\n    if(parking.covered === true && parking.shaded === false && parking.open === false && rowType === \"open\" )\r\n    return false\r\n\r\n\r\n}\r\n\r\n\r\nconst getEarliestOccDate = (premises: Premises[]) => {\r\n\r\n\r\n    var premisesByOccDates: Premises[] = []\r\n    var date: Date = new Date()\r\n    if (premises !== undefined) {\r\n        premisesByOccDates = premises.slice().sort((a, b) => {\r\n            return Date.parse(a.occupation) - Date.parse(b.occupation)\r\n        });\r\n    }\r\n\r\n    if (premisesByOccDates[0] !== undefined) {\r\n        date = new Date(premisesByOccDates[0].occupation)\r\n    }\r\n    return date.toLocaleDateString(\r\n        'en-gb',\r\n        {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n        }\r\n    );\r\n}\r\n\r\nconst getLowestHighestEsc = (premises: Premises[]) => {\r\n\r\n\r\n    var premisesByEsc: Premises[] = []\r\n    var escPair: number[] = []\r\n    if (premises !== undefined) {\r\n        premisesByEsc = premises.slice().sort((a, b) => {\r\n            return a.esc! - b.esc!\r\n        });\r\n    }\r\n\r\n    if (premisesByEsc[0] !== undefined) {\r\n        escPair = [premisesByEsc[0].esc!, premisesByEsc[premisesByEsc.length - 1].esc!]\r\n    }\r\n    return escPair\r\n}\r\n\r\nconst getLowestHighestYard = (premises: Premises[]) => {\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByYard: Premises[] = []\r\n    var yardPair: number[] = []\r\n    if (premises !== undefined) {\r\n\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.yard !== 0 \r\n        })\r\n\r\n        premisesByYard = filteredPremises.slice().sort((a, b) => {\r\n            return a.yard! - b.yard!\r\n        });\r\n    }\r\n\r\n    if (premisesByYard[0] !== undefined ) {\r\n       \r\n            yardPair = [premisesByYard[0].yard!, premisesByYard[premisesByYard.length - 1].yard!]\r\n          \r\n    } \r\n    if(yardPair[0] !== undefined) {\r\n        return yardPair\r\n    } else return [0,0]\r\n    \r\n}\r\n\r\nconst getLowestHighestHeight = (premises: Premises[]) => {\r\n\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByHeight: Premises[] = []\r\n    var heightPair: number[] = []\r\n    if (premises !== undefined) {\r\n\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.height !== 0\r\n        })\r\n\r\n        premisesByHeight = filteredPremises.slice().sort((a, b) => {\r\n            return a.height! - b.height!\r\n        });\r\n    }\r\n\r\n    if (premisesByHeight[0] !== undefined) {\r\n        heightPair = [premisesByHeight[0].height!, premisesByHeight[premisesByHeight.length - 1].height!]\r\n    }\r\n    if(heightPair[0] !== undefined) {\r\n        return heightPair\r\n    } else return [0,0]\r\n}\r\n\r\nconst getLowestHighestDoors = (premises: Premises[]) => {\r\n\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByDoors: Premises[] = []\r\n    var doorPair: number[] = []\r\n    if (premises !== undefined) {\r\n\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.doors !== 0\r\n        })\r\n\r\n        premisesByDoors = filteredPremises.slice().sort((a, b) => {\r\n            return a.doors! - b.doors!\r\n        });\r\n    }\r\n\r\n    if (premisesByDoors[0] !== undefined) {\r\n        doorPair = [premisesByDoors[0].doors!, premisesByDoors[premisesByDoors.length - 1].doors!]\r\n    }\r\n    if(doorPair[0] !== undefined) {\r\n        return doorPair\r\n    } else return [0,0]\r\n}\r\n\r\nconst getLoading = (premises: Premises[]) => {\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByArea: Premises[] = []\r\n    \r\n    if (premises !== undefined) {\r\n\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.loading !== \"\" && premises.loading !== undefined\r\n        })\r\n        premisesByArea = filteredPremises.slice().sort((a, b) => {\r\n            return a.area! - b.area!\r\n        });\r\n    }\r\n\r\n   if(premisesByArea[premisesByArea.length - 1] !== undefined) {\r\n    return premisesByArea[premisesByArea.length - 1].loading!\r\n   } else { return \"\"}\r\n    \r\n}\r\n\r\nconst getSprinklered = (premises: Premises[]) => {\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByArea: Premises[] = []\r\n    \r\n    if (premises !== undefined) {\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.sprinklered !== \"\" && premises.sprinklered !== undefined\r\n        })\r\n        premisesByArea = filteredPremises.slice().sort((a, b) => {\r\n            return a.area! - b.area!\r\n        });\r\n    }\r\n\r\n    if(premisesByArea[premisesByArea.length - 1] !== undefined) {\r\n        return premisesByArea[premisesByArea.length - 1].sprinklered!\r\n    } else { return \"\"}\r\n    \r\n}\r\n\r\nconst getCanopies = (premises: Premises[]) => {\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByArea: Premises[] = []\r\n    \r\n    if (premises !== undefined) {\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.canopies !== \"\" && premises.canopies !== undefined\r\n        })\r\n        premisesByArea = filteredPremises.slice().sort((a, b) => {\r\n            return a.area! - b.area!\r\n        });\r\n    }\r\n\r\n    if(premisesByArea[premisesByArea.length - 1] !== undefined) {\r\n        return premisesByArea[premisesByArea.length - 1].canopies!\r\n    } else {return \"\"}\r\n    \r\n}\r\n\r\nconst getPower = (premises: Premises[]) => {\r\n    var filteredPremises: Premises[] = []\r\n    var premisesByArea: Premises[] = []\r\n    \r\n    if (premises !== undefined) {\r\n        filteredPremises = premises.filter((premises)=> {\r\n            return premises.area !== 0 && premises.power !== \"\" && premises.power !== undefined\r\n        })\r\n        premisesByArea = filteredPremises.slice().sort((a, b) => {\r\n            return a.area! - b.area!\r\n        });\r\n    }\r\n\r\n    if(premisesByArea[premisesByArea.length - 1] !== undefined) {\r\n        return premisesByArea[premisesByArea.length - 1].power!\r\n    } else {return \"\"}\r\n   \r\n}\r\n\r\nconst getImageLimit = (imageLimit:any, showImages: boolean) => {\r\n    if(showImages === true) {\r\n        if(isNaN(imageLimit) === false )  {\r\n            return imageLimit\r\n        }\r\n    } else return 1\r\n  \r\n\r\n}\r\n\r\ninterface Props {\r\n\r\n    selectedPropertyList: SelectedPropertyList,\r\n    enquiryName: string,\r\n    agent: Agent,\r\n    imageLimit: number | string,\r\n    showImages: boolean\r\n\r\n    /* enquiryName: string */\r\n\r\n}\r\n\r\n\r\n\r\nconst PropertyListLargeImagesPDF: React.FC<Props> = ({ selectedPropertyList, enquiryName, agent, imageLimit, showImages }) => (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Document >\r\n\r\n        <Page orientation=\"landscape\" size=\"A4\" style={styles.frontPage}>\r\n\r\n            <Image style={styles.frontPageBackground} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610358103/background_2_duzy8o.jpg\"></Image>\r\n\r\n            <Text style={styles.frontPageText1} >Schedule of Accomodation:</Text>\r\n            <Text style={styles.frontPageText2} >{enquiryName}</Text>\r\n\r\n\r\n\r\n        </Page>\r\n        <Page wrap orientation=\"landscape\" size=\"A4\" style={styles.page}>\r\n            <View fixed style={styles.headerSection}>\r\n\r\n                <Text style={styles.headerText}>Property Details</Text>\r\n\r\n\r\n\r\n\r\n                <Text style={styles.pageNumbers} render={({ pageNumber, totalPages }) => (\r\n                    `${pageNumber - 1} / ${totalPages - 2}`\r\n                )} fixed />\r\n\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {selectedPropertyList.map((property, index) => (\r\n\r\n\r\n                <View /* minPresenceAhead={50} */ /* wrap={false} */ key={property.propertyId} style={styles.overallContainer}>\r\n\r\n                    <View style={styles.initialPageContainer}>\r\n\r\n                        <View style={styles.primaryImageContainer} >\r\n                            {selectedPropertyList[index].images!.length !== 0 ? <Image style={styles.primaryImage} src={cl.url(`${property.images![0]}`)}></Image> : <Image style={styles.primaryImage} src={cl.url(\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610357447/background_eocbnx.jpg\")}></Image>}\r\n                        </View>\r\n\r\n                        <View wrap={false} style={styles.premisesDetailsContainer}>\r\n\r\n\r\n                            <View style={styles.propertyNumberColumn}>\r\n                                <Text style={index < 9 ? styles.propertyNumber : styles.propertyNumber10plus}>{index + 1}</Text>\r\n                                <Text style={styles.propertyHeading}>{property.propertyName}</Text>\r\n                            </View>\r\n\r\n\r\n\r\n                            <Text style={[styles.propertyText, { marginLeft: 20 }]}>{`${property.address}, ${property.suburb} `}</Text>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <Text style={styles.premisesDetailsHeading} >Premises Details</Text>\r\n\r\n\r\n                            <View style={styles.premisesHeadings}>\r\n                                <View style={[styles.premisesContainer, { width: 80 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 80, textAlign: \"left\", marginLeft: 5 }]} >Floor/ Unit</Text>\r\n                                    <Text style={styles.premisesHeadingSubText} ></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={styles.premisesHeadingText} >Area</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}>m²</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={styles.premisesHeadingText} >Gross Rental</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 50 }]}>R/m²/month</Text>\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n\r\n                            {selectedPropertyList[index].premisesList!.map((premises, index) => (\r\n                                <View style={index % 2 !== 0 ? styles.premisesDetails : [styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]}>\r\n                                    <View style={[styles.premisesContainer, { width: 80 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 80, textAlign: \"left\", marginLeft: 5 }]} >{premises.floor}</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{premises.area}</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{premises.grossRental}</Text>\r\n                                    </View>\r\n\r\n\r\n                                </View>\r\n\r\n\r\n                            ))}\r\n\r\n                            {selectedPropertyList[index].premisesList!.length>1?\r\n                            <View style={(selectedPropertyList[index].premisesList!.length) % 2 !== 0 ? styles.premisesDetails : [styles.premisesDetails, { backgroundColor: \"#ede6e6\" , borderTop: 0.5}]}>\r\n                                <View style={[styles.premisesContainer, { width: 80 }]}>\r\n                                    {/*  <Text style={styles.premisesText} >{premises.floor}</Text> */}\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} > {selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.area!\r\n                                        }, 0) : 0\r\n                                    } </Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    {/*  <Text style={[styles.premisesText, { width: 50 }]} >{premises.grossRental}</Text> */}\r\n                                </View>\r\n                            </View>: <Text></Text>}\r\n\r\n                            <Text style={styles.parkingDetailsHeading} >Parking Details</Text>\r\n\r\n                            <View style={styles.premisesHeadings}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40, textAlign: \"left\", marginLeft: 5 }]} >Type</Text>\r\n                                    {<Text style={[styles.premisesHeadingSubText, { width: 40 }]} ></Text>}\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Bays</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Ratio</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}>bays/100m²</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 50 }]} >Avg Rate</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 50 }]}>R/bay/month</Text>\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n                            {selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                return acc + premises.coveredRate!\r\n                            }, 0) > 0 && property.buildingType !== \"Industrial\" ?\r\n                                <View style={getParkingRowsOrder(selectedPropertyList[index].premisesList!,\"covered\")?[styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]:[styles.premisesDetails]}>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Covered</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.coveredBays!\r\n                                        }, 0) > 0 ?\r\n                                            selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.coveredBays!\r\n                                            }, 0).toFixed(0) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.coveredBays!\r\n                                        }, 0) > 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.coveredBays!\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.area!\r\n                                            }, 0) * 100).toFixed(1) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.coveredBays! === 0) {\r\n                                                    return acc + premises.coveredRate!\r\n                                                } else {\r\n                                                    return acc + (premises.coveredRate! * premises.coveredBays!)\r\n                                                }\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.coveredBays! === 0) {\r\n                                                    return acc + 1\r\n                                                } else {\r\n                                                    return acc + premises.coveredBays!\r\n                                                }\r\n                                            }, 0)).toFixed(2) : 0\r\n                                        }</Text>\r\n                                    </View>\r\n                                </View> : <Text></Text>}\r\n\r\n                            {selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                return acc + premises.shadedRate!\r\n                            }, 0) > 0 && property.buildingType !== \"Industrial\" ?\r\n                            <View style={getParkingRowsOrder(selectedPropertyList[index].premisesList!,\"shaded\")?[styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]:[styles.premisesDetails]}>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Shaded</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.shadedBays!\r\n                                        }, 0) > 0 ?\r\n                                            selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.shadedBays!\r\n                                            }, 0).toFixed(0) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.shadedBays!\r\n                                        }, 0) > 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.shadedBays!\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.area!\r\n                                            }, 0) * 100).toFixed(1) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.shadedBays! === 0) {\r\n                                                    return acc + premises.shadedRate!\r\n                                                } else {\r\n                                                    return acc + (premises.shadedRate! * premises.shadedBays!)\r\n                                                }\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.shadedBays! === 0) {\r\n                                                    return acc + 1\r\n                                                } else {\r\n                                                    return acc + premises.shadedBays!\r\n                                                }\r\n                                            }, 0)).toFixed(2) : 0\r\n                                        }</Text>\r\n                                    </View>\r\n                                </View> : <Text></Text>}\r\n\r\n                            {selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                return acc + premises.openRate!\r\n                            }, 0) > 0 && property.buildingType !== \"Industrial\" ?\r\n                            <View style={getParkingRowsOrder(selectedPropertyList[index].premisesList!,\"open\")?[styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]:[styles.premisesDetails]}>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Open</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >\r\n                                            {selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.openBays!\r\n                                            }, 0) > 0 ?\r\n                                                selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                    return acc + premises.openBays!\r\n                                                }, 0).toFixed(0) : \"-\"\r\n                                            }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.openBays!\r\n                                        }, 0) > 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.openBays!\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.area!\r\n                                            }, 0) * 100).toFixed(1) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.openBays! === 0) {\r\n                                                    return acc + premises.openRate!\r\n                                                } else {\r\n                                                    return acc + (premises.openRate! * premises.openBays!)\r\n                                                }\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.openBays! === 0) {\r\n                                                    return acc + 1\r\n                                                } else {\r\n                                                    return acc + premises.openBays!\r\n                                                }\r\n                                            }, 0)).toFixed(2) : 0\r\n                                        }</Text>\r\n                                    </View>\r\n                                </View> : <Text></Text>}\r\n\r\n                            {getParkingRowsLength(selectedPropertyList[index].premisesList!)>1? <View style={getParkingRowsLength(selectedPropertyList[index].premisesList!)!==3?[styles.premisesDetails, { backgroundColor: \"#ede6e6\", borderTop: 0.5 }]: [styles.premisesDetails, {borderTop: 0.5}]}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Overall</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.openBays! === 0 && premises.shadedBays! === 0 && premises.coveredBays! === 0) {\r\n                                                return acc + premises.parkingRatio! * (premises.area! / 100)\r\n                                            } else {\r\n                                                return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                            }\r\n                                        }, 0).toFixed(0) : 0\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.openBays! === 0 && premises.shadedBays! === 0 && premises.coveredBays! === 0) {\r\n                                                return acc + premises.parkingRatio! * (premises.area! / 100)\r\n                                            } else {\r\n                                                return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                            }\r\n\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.area!\r\n                                        }, 0) * 100).toFixed(1) : 0\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                        return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                    }, 0) > 0 ?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n\r\n                                            return acc + (premises.openRate! * premises.openBays!) + (premises.shadedRate! * premises.shadedBays!) + (premises.coveredRate! * premises.coveredBays!)\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                        }, 0)).toFixed(2) : \"-\"\r\n                                    }</Text>\r\n                                </View>\r\n                            </View> : <Text></Text>}\r\n\r\n\r\n\r\n\r\n\r\n                            <View>\r\n\r\n                                <View style={[styles.premisesInfo, { marginTop: 20 }]}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75 }]}>Occupation:</Text>\r\n                                    <Text style={styles.premisesInfoText}>{`${getEarliestOccDate(selectedPropertyList[index].premisesList!)} +`}\r\n                                    </Text>\r\n\r\n                                </View>\r\n\r\n                                <View style={styles.premisesInfo}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75 }]}>Escalation:</Text>\r\n                                    {getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0] !== undefined ?\r\n                                        <Text style={styles.premisesInfoText}>{getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestEsc(selectedPropertyList[index].premisesList!)[1] ?\r\n                                            `${getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0]}% to ${getLowestHighestEsc(selectedPropertyList[index].premisesList!)[1]}% `\r\n                                            : `${getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0]}`}\r\n                                        </Text> : <Text></Text>}\r\n\r\n                                </View>\r\n\r\n                                {property.buildingType === \"Industrial\" ? <View style={[styles.premisesInfo, { flexDirection: \"column\" }]}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75, marginLeft: 0 }]}>Features:</Text>\r\n\r\n                                    <Text style={[styles.premisesInfoText, { marginLeft: 0, fontSize: 8 }]}>\r\n                                        {getLowestHighestYard(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestYard(selectedPropertyList[index].premisesList!)[1] || getLowestHighestYard(selectedPropertyList[index].premisesList!)[1] !== 0  ? \r\n                                        `Yard Size: ${getLowestHighestYard(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestYard(selectedPropertyList[index].premisesList!)[1] ?\r\n                                            `${getLowestHighestYard(selectedPropertyList[index].premisesList!)[0]}m² to ${getLowestHighestYard(selectedPropertyList[index].premisesList!)[1]}m²`\r\n                                            : `${getLowestHighestYard(selectedPropertyList[index].premisesList!)[0]}m²`} | `: \"\"} \r\n\r\n                                         {getLowestHighestHeight(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestHeight(selectedPropertyList[index].premisesList!)[1] || getLowestHighestHeight(selectedPropertyList[index].premisesList!)[1] !== 0  ? \r\n                                         `Floor to Eave Height:  ${getLowestHighestHeight(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestHeight(selectedPropertyList[index].premisesList!)[1] ?\r\n                                            `${getLowestHighestHeight(selectedPropertyList[index].premisesList!)[0]}m to ${getLowestHighestHeight(selectedPropertyList[index].premisesList!)[1]}m`\r\n                                            : `${getLowestHighestHeight(selectedPropertyList[index].premisesList!)[0]}m`} | `: \"\"} \r\n                                            \r\n                                            {getLowestHighestDoors(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestDoors(selectedPropertyList[index].premisesList!)[1] || getLowestHighestDoors(selectedPropertyList[index].premisesList!)[1] !== 0   ? \r\n                                            `Doors: ${getLowestHighestDoors(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestDoors(selectedPropertyList[index].premisesList!)[1] ?\r\n                                            `${getLowestHighestDoors(selectedPropertyList[index].premisesList!)[0]} to ${getLowestHighestDoors(selectedPropertyList[index].premisesList!)[1]}`\r\n                                            : `${getLowestHighestDoors(selectedPropertyList[index].premisesList!)[0]}`} | ` : \"\"}\r\n\r\n                                            {getLoading(property.premisesList!) !== \"\" ? `Loading Type: ${getLoading(property.premisesList!)} | `  : \"\"}\r\n\r\n                                            {getSprinklered(property.premisesList!) !== \"\" ? `Sprinkler Type: ${getSprinklered(property.premisesList!)} | `  : \"\"}\r\n\r\n                                            {getCanopies(property.premisesList!) !== \"\" ? `Canopy Details: ${getCanopies(property.premisesList!)} | `  : \"\"}\r\n\r\n                                            {getPower(property.premisesList!) !== \"\" ? `Power: ${getPower(property.premisesList!)}`  : \"\"}\r\n                                            \r\n                                            </Text>\r\n\r\n\r\n                                </View> : <Text></Text>}\r\n\r\n                               \r\n\r\n                                {property.notes !== \"\" ? <View style={[styles.premisesInfo, { flexDirection: \"column\" }]}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75, marginLeft: 0 }]}>Notes:</Text>\r\n\r\n                                    <Text style={[styles.premisesInfoText, { marginLeft: 0, fontSize: 8 }]}>{property.notes}</Text>\r\n\r\n\r\n                                </View> : <Text></Text>}\r\n\r\n                            </View>\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    {imageLimit === \"Any\" ? property.images?.slice(1).map((image) => (\r\n\r\n                        <View style={styles.secondaryImageContainers} >\r\n                            {selectedPropertyList[index].images!.length !== 0 ? <Image style={styles.secondaryImage} src={cl.url(`${image}`, /* { width: 600, crop: \"fit\" } */)}></Image> : <Text></Text>}\r\n                        </View>\r\n\r\n                    )) : \r\n                    property.images?.slice(1, getImageLimit(imageLimit, showImages)).map((image) => (\r\n\r\n                        <View style={styles.secondaryImageContainers} >\r\n                            {selectedPropertyList[index].images!.length !== 0 ? <Image style={styles.secondaryImage} src={cl.url(`${image}`, /* { width: 600, crop: \"fit\" } */)}></Image> : <Text></Text>}\r\n                        </View>\r\n\r\n                    ))\r\n                    }\r\n\r\n                </View>\r\n\r\n\r\n            ))}\r\n\r\n            <View fixed style={styles.footerSection}>\r\n                <View style={styles.footerImageSection}>\r\n                    <Image style={styles.footerImageStyles} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610187102/EBLogoHeader_ypjyj5.jpg\"></Image>\r\n                </View>\r\n            </View>\r\n\r\n\r\n        </Page>\r\n        <Page orientation=\"landscape\" size=\"A4\" style={styles.contactPage}>\r\n            <View fixed style={styles.headerSection}>\r\n\r\n                <Text style={styles.headerText}>Contact</Text>\r\n\r\n\r\n            </View>\r\n            <Image style={styles.contactPageBackground} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610357459/lion_light_dptptx.jpg\"></Image>\r\n\r\n            <Text style={styles.contactPageText1} >For further information, please contact:</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined ? agent.name : \"\"}</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined ? agent.mobile : \"\"}</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined ? agent.email : \"\"}</Text>\r\n\r\n            <Text style={styles.contactPageText3} >Whilst every effort has been made to ensure accuracy, no liability will be accepted for any errors or omissions and the prospective tenant/ purchaser is required to verify details prior to contract</Text>\r\n\r\n            <View fixed style={styles.footerSection}>\r\n                <View style={styles.footerImageSection}>\r\n                    <Image style={styles.footerImageStyles} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610187102/EBLogoHeader_ypjyj5.jpg\"></Image>\r\n                </View>\r\n            </View>\r\n\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nexport default PropertyListLargeImagesPDF","C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\assets\\pin.js",[],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\ImageSlider.tsx",["732","733","734","735","736","737","738","739","740","741","742","743"],"C:\\Users\\ruper\\Desktop\\Own Projects\\psafrontendv2\\src\\components\\PremisesListItem.tsx",["744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771"],{"ruleId":"772","severity":1,"message":"773","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":20},{"ruleId":"772","severity":1,"message":"776","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":20},{"ruleId":"772","severity":1,"message":"777","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":19},{"ruleId":"772","severity":1,"message":"778","line":13,"column":3,"nodeType":"774","messageId":"775","endLine":13,"endColumn":16},{"ruleId":"772","severity":1,"message":"779","line":14,"column":3,"nodeType":"774","messageId":"775","endLine":14,"endColumn":6},{"ruleId":"772","severity":1,"message":"780","line":17,"column":3,"nodeType":"774","messageId":"775","endLine":17,"endColumn":13},{"ruleId":"772","severity":1,"message":"781","line":18,"column":13,"nodeType":"774","messageId":"775","endLine":18,"endColumn":21},{"ruleId":"782","replacedBy":"783"},{"ruleId":"784","replacedBy":"785"},{"ruleId":"772","severity":1,"message":"786","line":17,"column":11,"nodeType":"774","messageId":"775","endLine":17,"endColumn":22},{"ruleId":"772","severity":1,"message":"787","line":21,"column":11,"nodeType":"774","messageId":"775","endLine":21,"endColumn":23},{"ruleId":"772","severity":1,"message":"788","line":2,"column":8,"nodeType":"774","messageId":"775","endLine":2,"endColumn":12},{"ruleId":"772","severity":1,"message":"789","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":14},{"ruleId":"772","severity":1,"message":"790","line":7,"column":16,"nodeType":"774","messageId":"775","endLine":7,"endColumn":20},{"ruleId":"772","severity":1,"message":"791","line":7,"column":22,"nodeType":"774","messageId":"775","endLine":7,"endColumn":33},{"ruleId":"772","severity":1,"message":"792","line":8,"column":3,"nodeType":"774","messageId":"775","endLine":8,"endColumn":12},{"ruleId":"772","severity":1,"message":"793","line":12,"column":34,"nodeType":"774","messageId":"775","endLine":12,"endColumn":54},{"ruleId":"772","severity":1,"message":"779","line":13,"column":10,"nodeType":"774","messageId":"775","endLine":13,"endColumn":13},{"ruleId":"772","severity":1,"message":"794","line":13,"column":25,"nodeType":"774","messageId":"775","endLine":13,"endColumn":40},{"ruleId":"772","severity":1,"message":"795","line":24,"column":10,"nodeType":"774","messageId":"775","endLine":24,"endColumn":19},{"ruleId":"772","severity":1,"message":"796","line":24,"column":21,"nodeType":"774","messageId":"775","endLine":24,"endColumn":36},{"ruleId":"772","severity":1,"message":"797","line":24,"column":38,"nodeType":"774","messageId":"775","endLine":24,"endColumn":46},{"ruleId":"772","severity":1,"message":"798","line":24,"column":48,"nodeType":"774","messageId":"775","endLine":24,"endColumn":52},{"ruleId":"772","severity":1,"message":"799","line":28,"column":7,"nodeType":"774","messageId":"775","endLine":28,"endColumn":9},{"ruleId":"772","severity":1,"message":"800","line":44,"column":14,"nodeType":"774","messageId":"775","endLine":44,"endColumn":27},{"ruleId":"772","severity":1,"message":"801","line":45,"column":12,"nodeType":"774","messageId":"775","endLine":45,"endColumn":23},{"ruleId":"772","severity":1,"message":"802","line":50,"column":14,"nodeType":"774","messageId":"775","endLine":50,"endColumn":27},{"ruleId":"772","severity":1,"message":"803","line":51,"column":12,"nodeType":"774","messageId":"775","endLine":51,"endColumn":23},{"ruleId":"772","severity":1,"message":"804","line":57,"column":12,"nodeType":"774","messageId":"775","endLine":57,"endColumn":27},{"ruleId":"772","severity":1,"message":"805","line":62,"column":14,"nodeType":"774","messageId":"775","endLine":62,"endColumn":24},{"ruleId":"772","severity":1,"message":"806","line":63,"column":12,"nodeType":"774","messageId":"775","endLine":63,"endColumn":20},{"ruleId":"772","severity":1,"message":"807","line":68,"column":14,"nodeType":"774","messageId":"775","endLine":68,"endColumn":33},{"ruleId":"772","severity":1,"message":"808","line":69,"column":12,"nodeType":"774","messageId":"775","endLine":69,"endColumn":29},{"ruleId":"772","severity":1,"message":"809","line":179,"column":14,"nodeType":"774","messageId":"775","endLine":179,"endColumn":29},{"ruleId":"772","severity":1,"message":"810","line":180,"column":12,"nodeType":"774","messageId":"775","endLine":180,"endColumn":25},{"ruleId":"772","severity":1,"message":"811","line":196,"column":12,"nodeType":"774","messageId":"775","endLine":196,"endColumn":32},{"ruleId":"772","severity":1,"message":"812","line":197,"column":10,"nodeType":"774","messageId":"775","endLine":197,"endColumn":28},{"ruleId":"772","severity":1,"message":"813","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":19},{"ruleId":"772","severity":1,"message":"814","line":8,"column":3,"nodeType":"774","messageId":"775","endLine":8,"endColumn":11},{"ruleId":"772","severity":1,"message":"815","line":9,"column":3,"nodeType":"774","messageId":"775","endLine":9,"endColumn":17},{"ruleId":"772","severity":1,"message":"791","line":10,"column":3,"nodeType":"774","messageId":"775","endLine":10,"endColumn":14},{"ruleId":"772","severity":1,"message":"816","line":11,"column":3,"nodeType":"774","messageId":"775","endLine":11,"endColumn":17},{"ruleId":"772","severity":1,"message":"789","line":12,"column":3,"nodeType":"774","messageId":"775","endLine":12,"endColumn":7},{"ruleId":"772","severity":1,"message":"817","line":13,"column":3,"nodeType":"774","messageId":"775","endLine":13,"endColumn":16},{"ruleId":"772","severity":1,"message":"818","line":15,"column":3,"nodeType":"774","messageId":"775","endLine":15,"endColumn":16},{"ruleId":"772","severity":1,"message":"819","line":16,"column":3,"nodeType":"774","messageId":"775","endLine":16,"endColumn":13},{"ruleId":"772","severity":1,"message":"820","line":24,"column":7,"nodeType":"774","messageId":"775","endLine":24,"endColumn":49},{"ruleId":"772","severity":1,"message":"821","line":25,"column":7,"nodeType":"774","messageId":"775","endLine":25,"endColumn":50},{"ruleId":"772","severity":1,"message":"822","line":26,"column":7,"nodeType":"774","messageId":"775","endLine":26,"endColumn":29},{"ruleId":"772","severity":1,"message":"813","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":19},{"ruleId":"772","severity":1,"message":"823","line":3,"column":10,"nodeType":"774","messageId":"775","endLine":3,"endColumn":15},{"ruleId":"772","severity":1,"message":"824","line":3,"column":17,"nodeType":"774","messageId":"775","endLine":3,"endColumn":25},{"ruleId":"772","severity":1,"message":"825","line":4,"column":10,"nodeType":"774","messageId":"775","endLine":4,"endColumn":14},{"ruleId":"772","severity":1,"message":"826","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":18},{"ruleId":"772","severity":1,"message":"827","line":5,"column":20,"nodeType":"774","messageId":"775","endLine":5,"endColumn":34},{"ruleId":"772","severity":1,"message":"828","line":6,"column":17,"nodeType":"774","messageId":"775","endLine":6,"endColumn":25},{"ruleId":"772","severity":1,"message":"781","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":18},{"ruleId":"772","severity":1,"message":"829","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":30},{"ruleId":"830","severity":1,"message":"831","line":32,"column":70,"nodeType":"832","messageId":"833","endLine":32,"endColumn":72},{"ruleId":"772","severity":1,"message":"834","line":3,"column":10,"nodeType":"774","messageId":"775","endLine":3,"endColumn":15},{"ruleId":"772","severity":1,"message":"835","line":7,"column":28,"nodeType":"774","messageId":"775","endLine":7,"endColumn":48},{"ruleId":"772","severity":1,"message":"836","line":7,"column":100,"nodeType":"774","messageId":"775","endLine":7,"endColumn":106},{"ruleId":"772","severity":1,"message":"817","line":7,"column":123,"nodeType":"774","messageId":"775","endLine":7,"endColumn":136},{"ruleId":"772","severity":1,"message":"837","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":23},{"ruleId":"772","severity":1,"message":"838","line":13,"column":9,"nodeType":"774","messageId":"775","endLine":13,"endColumn":24},{"ruleId":"772","severity":1,"message":"839","line":21,"column":7,"nodeType":"774","messageId":"775","endLine":21,"endColumn":41},{"ruleId":"772","severity":1,"message":"840","line":42,"column":7,"nodeType":"774","messageId":"775","endLine":42,"endColumn":43},{"ruleId":"772","severity":1,"message":"841","line":44,"column":7,"nodeType":"774","messageId":"775","endLine":44,"endColumn":30},{"ruleId":"772","severity":1,"message":"842","line":46,"column":7,"nodeType":"774","messageId":"775","endLine":46,"endColumn":15},{"ruleId":"772","severity":1,"message":"843","line":66,"column":9,"nodeType":"774","messageId":"775","endLine":66,"endColumn":24},{"ruleId":"772","severity":1,"message":"844","line":82,"column":9,"nodeType":"774","messageId":"775","endLine":82,"endColumn":43},{"ruleId":"772","severity":1,"message":"821","line":130,"column":9,"nodeType":"774","messageId":"775","endLine":130,"endColumn":52},{"ruleId":"772","severity":1,"message":"845","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":26},{"ruleId":"772","severity":1,"message":"790","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":14},{"ruleId":"772","severity":1,"message":"846","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":33},{"ruleId":"772","severity":1,"message":"847","line":8,"column":35,"nodeType":"774","messageId":"775","endLine":8,"endColumn":48},{"ruleId":"772","severity":1,"message":"848","line":8,"column":50,"nodeType":"774","messageId":"775","endLine":8,"endColumn":70},{"ruleId":"772","severity":1,"message":"849","line":8,"column":72,"nodeType":"774","messageId":"775","endLine":8,"endColumn":92},{"ruleId":"772","severity":1,"message":"850","line":8,"column":94,"nodeType":"774","messageId":"775","endLine":8,"endColumn":107},{"ruleId":"772","severity":1,"message":"851","line":10,"column":20,"nodeType":"774","messageId":"775","endLine":10,"endColumn":42},{"ruleId":"772","severity":1,"message":"838","line":10,"column":51,"nodeType":"774","messageId":"775","endLine":10,"endColumn":66},{"ruleId":"772","severity":1,"message":"852","line":10,"column":68,"nodeType":"774","messageId":"775","endLine":10,"endColumn":76},{"ruleId":"772","severity":1,"message":"828","line":10,"column":100,"nodeType":"774","messageId":"775","endLine":10,"endColumn":108},{"ruleId":"772","severity":1,"message":"853","line":10,"column":110,"nodeType":"774","messageId":"775","endLine":10,"endColumn":115},{"ruleId":"772","severity":1,"message":"854","line":10,"column":147,"nodeType":"774","messageId":"775","endLine":10,"endColumn":159},{"ruleId":"772","severity":1,"message":"796","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":25},{"ruleId":"772","severity":1,"message":"855","line":12,"column":27,"nodeType":"774","messageId":"775","endLine":12,"endColumn":39},{"ruleId":"772","severity":1,"message":"825","line":13,"column":10,"nodeType":"774","messageId":"775","endLine":13,"endColumn":14},{"ruleId":"772","severity":1,"message":"856","line":14,"column":8,"nodeType":"774","messageId":"775","endLine":14,"endColumn":23},{"ruleId":"772","severity":1,"message":"816","line":24,"column":5,"nodeType":"774","messageId":"775","endLine":24,"endColumn":19},{"ruleId":"772","severity":1,"message":"857","line":29,"column":5,"nodeType":"774","messageId":"775","endLine":29,"endColumn":10},{"ruleId":"772","severity":1,"message":"858","line":30,"column":5,"nodeType":"774","messageId":"775","endLine":30,"endColumn":17},{"ruleId":"772","severity":1,"message":"859","line":33,"column":5,"nodeType":"774","messageId":"775","endLine":33,"endColumn":17},{"ruleId":"772","severity":1,"message":"860","line":34,"column":5,"nodeType":"774","messageId":"775","endLine":34,"endColumn":16},{"ruleId":"772","severity":1,"message":"861","line":35,"column":5,"nodeType":"774","messageId":"775","endLine":35,"endColumn":13},{"ruleId":"772","severity":1,"message":"862","line":36,"column":5,"nodeType":"774","messageId":"775","endLine":36,"endColumn":11},{"ruleId":"772","severity":1,"message":"863","line":37,"column":5,"nodeType":"774","messageId":"775","endLine":37,"endColumn":20},{"ruleId":"772","severity":1,"message":"792","line":38,"column":5,"nodeType":"774","messageId":"775","endLine":38,"endColumn":14},{"ruleId":"772","severity":1,"message":"864","line":39,"column":5,"nodeType":"774","messageId":"775","endLine":39,"endColumn":33},{"ruleId":"772","severity":1,"message":"865","line":40,"column":5,"nodeType":"774","messageId":"775","endLine":40,"endColumn":20},{"ruleId":"772","severity":1,"message":"866","line":43,"column":5,"nodeType":"774","messageId":"775","endLine":43,"endColumn":17},{"ruleId":"772","severity":1,"message":"867","line":56,"column":8,"nodeType":"774","messageId":"775","endLine":56,"endColumn":31},{"ruleId":"772","severity":1,"message":"805","line":82,"column":18,"nodeType":"774","messageId":"775","endLine":82,"endColumn":28},{"ruleId":"772","severity":1,"message":"806","line":83,"column":16,"nodeType":"774","messageId":"775","endLine":83,"endColumn":24},{"ruleId":"772","severity":1,"message":"868","line":88,"column":18,"nodeType":"774","messageId":"775","endLine":88,"endColumn":41},{"ruleId":"772","severity":1,"message":"869","line":89,"column":16,"nodeType":"774","messageId":"775","endLine":89,"endColumn":37},{"ruleId":"772","severity":1,"message":"870","line":94,"column":38,"nodeType":"774","messageId":"775","endLine":94,"endColumn":58},{"ruleId":"772","severity":1,"message":"871","line":282,"column":11,"nodeType":"774","messageId":"775","endLine":282,"endColumn":29},{"ruleId":"772","severity":1,"message":"872","line":335,"column":11,"nodeType":"774","messageId":"775","endLine":335,"endColumn":30},{"ruleId":"772","severity":1,"message":"873","line":336,"column":11,"nodeType":"774","messageId":"775","endLine":336,"endColumn":31},{"ruleId":"772","severity":1,"message":"874","line":339,"column":11,"nodeType":"774","messageId":"775","endLine":339,"endColumn":51},{"ruleId":"772","severity":1,"message":"875","line":363,"column":11,"nodeType":"774","messageId":"775","endLine":363,"endColumn":20},{"ruleId":"772","severity":1,"message":"876","line":364,"column":11,"nodeType":"774","messageId":"775","endLine":364,"endColumn":32},{"ruleId":"772","severity":1,"message":"877","line":366,"column":11,"nodeType":"774","messageId":"775","endLine":366,"endColumn":21},{"ruleId":"772","severity":1,"message":"878","line":367,"column":11,"nodeType":"774","messageId":"775","endLine":367,"endColumn":39},{"ruleId":"772","severity":1,"message":"879","line":368,"column":11,"nodeType":"774","messageId":"775","endLine":368,"endColumn":30},{"ruleId":"880","severity":1,"message":"881","line":412,"column":9,"nodeType":"882","endLine":412,"endColumn":11,"suggestions":"883"},{"ruleId":"880","severity":1,"message":"884","line":536,"column":9,"nodeType":"882","endLine":536,"endColumn":22,"suggestions":"885"},{"ruleId":"772","severity":1,"message":"845","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":26},{"ruleId":"772","severity":1,"message":"886","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":18},{"ruleId":"772","severity":1,"message":"887","line":5,"column":20,"nodeType":"774","messageId":"775","endLine":5,"endColumn":35},{"ruleId":"772","severity":1,"message":"790","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":14},{"ruleId":"772","severity":1,"message":"888","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":20},{"ruleId":"772","severity":1,"message":"846","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":33},{"ruleId":"772","severity":1,"message":"847","line":8,"column":35,"nodeType":"774","messageId":"775","endLine":8,"endColumn":48},{"ruleId":"772","severity":1,"message":"848","line":8,"column":50,"nodeType":"774","messageId":"775","endLine":8,"endColumn":70},{"ruleId":"772","severity":1,"message":"849","line":8,"column":72,"nodeType":"774","messageId":"775","endLine":8,"endColumn":92},{"ruleId":"772","severity":1,"message":"850","line":8,"column":94,"nodeType":"774","messageId":"775","endLine":8,"endColumn":107},{"ruleId":"772","severity":1,"message":"889","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":21},{"ruleId":"772","severity":1,"message":"890","line":10,"column":10,"nodeType":"774","messageId":"775","endLine":10,"endColumn":18},{"ruleId":"772","severity":1,"message":"891","line":10,"column":20,"nodeType":"774","messageId":"775","endLine":10,"endColumn":46},{"ruleId":"772","severity":1,"message":"838","line":10,"column":55,"nodeType":"774","messageId":"775","endLine":10,"endColumn":70},{"ruleId":"772","severity":1,"message":"852","line":10,"column":72,"nodeType":"774","messageId":"775","endLine":10,"endColumn":80},{"ruleId":"772","severity":1,"message":"828","line":10,"column":104,"nodeType":"774","messageId":"775","endLine":10,"endColumn":112},{"ruleId":"772","severity":1,"message":"892","line":11,"column":73,"nodeType":"774","messageId":"775","endLine":11,"endColumn":96},{"ruleId":"772","severity":1,"message":"825","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":14},{"ruleId":"772","severity":1,"message":"796","line":17,"column":21,"nodeType":"774","messageId":"775","endLine":17,"endColumn":36},{"ruleId":"772","severity":1,"message":"797","line":17,"column":38,"nodeType":"774","messageId":"775","endLine":17,"endColumn":46},{"ruleId":"772","severity":1,"message":"798","line":17,"column":48,"nodeType":"774","messageId":"775","endLine":17,"endColumn":52},{"ruleId":"772","severity":1,"message":"815","line":24,"column":5,"nodeType":"774","messageId":"775","endLine":24,"endColumn":19},{"ruleId":"772","severity":1,"message":"816","line":26,"column":5,"nodeType":"774","messageId":"775","endLine":26,"endColumn":19},{"ruleId":"772","severity":1,"message":"836","line":27,"column":5,"nodeType":"774","messageId":"775","endLine":27,"endColumn":11},{"ruleId":"772","severity":1,"message":"893","line":28,"column":5,"nodeType":"774","messageId":"775","endLine":28,"endColumn":18},{"ruleId":"772","severity":1,"message":"817","line":29,"column":5,"nodeType":"774","messageId":"775","endLine":29,"endColumn":18},{"ruleId":"772","severity":1,"message":"857","line":30,"column":5,"nodeType":"774","messageId":"775","endLine":30,"endColumn":10},{"ruleId":"772","severity":1,"message":"858","line":31,"column":5,"nodeType":"774","messageId":"775","endLine":31,"endColumn":17},{"ruleId":"772","severity":1,"message":"859","line":34,"column":5,"nodeType":"774","messageId":"775","endLine":34,"endColumn":17},{"ruleId":"772","severity":1,"message":"860","line":35,"column":5,"nodeType":"774","messageId":"775","endLine":35,"endColumn":16},{"ruleId":"772","severity":1,"message":"861","line":36,"column":5,"nodeType":"774","messageId":"775","endLine":36,"endColumn":13},{"ruleId":"772","severity":1,"message":"862","line":37,"column":5,"nodeType":"774","messageId":"775","endLine":37,"endColumn":11},{"ruleId":"772","severity":1,"message":"863","line":38,"column":5,"nodeType":"774","messageId":"775","endLine":38,"endColumn":20},{"ruleId":"772","severity":1,"message":"792","line":39,"column":5,"nodeType":"774","messageId":"775","endLine":39,"endColumn":14},{"ruleId":"772","severity":1,"message":"864","line":40,"column":5,"nodeType":"774","messageId":"775","endLine":40,"endColumn":33},{"ruleId":"772","severity":1,"message":"865","line":41,"column":5,"nodeType":"774","messageId":"775","endLine":41,"endColumn":20},{"ruleId":"772","severity":1,"message":"789","line":43,"column":5,"nodeType":"774","messageId":"775","endLine":43,"endColumn":9},{"ruleId":"772","severity":1,"message":"866","line":44,"column":5,"nodeType":"774","messageId":"775","endLine":44,"endColumn":17},{"ruleId":"772","severity":1,"message":"805","line":61,"column":18,"nodeType":"774","messageId":"775","endLine":61,"endColumn":28},{"ruleId":"772","severity":1,"message":"806","line":62,"column":16,"nodeType":"774","messageId":"775","endLine":62,"endColumn":24},{"ruleId":"772","severity":1,"message":"868","line":67,"column":18,"nodeType":"774","messageId":"775","endLine":67,"endColumn":41},{"ruleId":"772","severity":1,"message":"869","line":68,"column":16,"nodeType":"774","messageId":"775","endLine":68,"endColumn":37},{"ruleId":"772","severity":1,"message":"872","line":122,"column":11,"nodeType":"774","messageId":"775","endLine":122,"endColumn":30},{"ruleId":"772","severity":1,"message":"873","line":123,"column":11,"nodeType":"774","messageId":"775","endLine":123,"endColumn":31},{"ruleId":"772","severity":1,"message":"894","line":124,"column":11,"nodeType":"774","messageId":"775","endLine":124,"endColumn":33},{"ruleId":"772","severity":1,"message":"874","line":126,"column":11,"nodeType":"774","messageId":"775","endLine":126,"endColumn":51},{"ruleId":"772","severity":1,"message":"875","line":149,"column":11,"nodeType":"774","messageId":"775","endLine":149,"endColumn":20},{"ruleId":"772","severity":1,"message":"876","line":150,"column":11,"nodeType":"774","messageId":"775","endLine":150,"endColumn":32},{"ruleId":"772","severity":1,"message":"877","line":152,"column":11,"nodeType":"774","messageId":"775","endLine":152,"endColumn":21},{"ruleId":"772","severity":1,"message":"878","line":153,"column":11,"nodeType":"774","messageId":"775","endLine":153,"endColumn":39},{"ruleId":"772","severity":1,"message":"879","line":154,"column":11,"nodeType":"774","messageId":"775","endLine":154,"endColumn":30},{"ruleId":"880","severity":1,"message":"881","line":182,"column":9,"nodeType":"882","endLine":182,"endColumn":11,"suggestions":"895"},{"ruleId":"772","severity":1,"message":"886","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":18},{"ruleId":"772","severity":1,"message":"887","line":5,"column":20,"nodeType":"774","messageId":"775","endLine":5,"endColumn":35},{"ruleId":"772","severity":1,"message":"790","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":14},{"ruleId":"772","severity":1,"message":"848","line":8,"column":46,"nodeType":"774","messageId":"775","endLine":8,"endColumn":66},{"ruleId":"772","severity":1,"message":"849","line":8,"column":68,"nodeType":"774","messageId":"775","endLine":8,"endColumn":88},{"ruleId":"772","severity":1,"message":"838","line":10,"column":55,"nodeType":"774","messageId":"775","endLine":10,"endColumn":70},{"ruleId":"772","severity":1,"message":"825","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":14},{"ruleId":"772","severity":1,"message":"815","line":27,"column":5,"nodeType":"774","messageId":"775","endLine":27,"endColumn":19},{"ruleId":"772","severity":1,"message":"816","line":29,"column":5,"nodeType":"774","messageId":"775","endLine":29,"endColumn":19},{"ruleId":"772","severity":1,"message":"836","line":30,"column":5,"nodeType":"774","messageId":"775","endLine":30,"endColumn":11},{"ruleId":"772","severity":1,"message":"893","line":31,"column":5,"nodeType":"774","messageId":"775","endLine":31,"endColumn":18},{"ruleId":"772","severity":1,"message":"817","line":32,"column":5,"nodeType":"774","messageId":"775","endLine":32,"endColumn":18},{"ruleId":"772","severity":1,"message":"857","line":33,"column":5,"nodeType":"774","messageId":"775","endLine":33,"endColumn":10},{"ruleId":"772","severity":1,"message":"858","line":34,"column":5,"nodeType":"774","messageId":"775","endLine":34,"endColumn":17},{"ruleId":"772","severity":1,"message":"859","line":37,"column":5,"nodeType":"774","messageId":"775","endLine":37,"endColumn":17},{"ruleId":"772","severity":1,"message":"860","line":38,"column":5,"nodeType":"774","messageId":"775","endLine":38,"endColumn":16},{"ruleId":"772","severity":1,"message":"861","line":39,"column":5,"nodeType":"774","messageId":"775","endLine":39,"endColumn":13},{"ruleId":"772","severity":1,"message":"862","line":40,"column":5,"nodeType":"774","messageId":"775","endLine":40,"endColumn":11},{"ruleId":"772","severity":1,"message":"792","line":42,"column":5,"nodeType":"774","messageId":"775","endLine":42,"endColumn":14},{"ruleId":"772","severity":1,"message":"864","line":43,"column":5,"nodeType":"774","messageId":"775","endLine":43,"endColumn":33},{"ruleId":"772","severity":1,"message":"865","line":44,"column":5,"nodeType":"774","messageId":"775","endLine":44,"endColumn":20},{"ruleId":"772","severity":1,"message":"866","line":47,"column":5,"nodeType":"774","messageId":"775","endLine":47,"endColumn":17},{"ruleId":"772","severity":1,"message":"804","line":78,"column":16,"nodeType":"774","messageId":"775","endLine":78,"endColumn":31},{"ruleId":"772","severity":1,"message":"896","line":106,"column":16,"nodeType":"774","messageId":"775","endLine":106,"endColumn":29},{"ruleId":"772","severity":1,"message":"897","line":127,"column":12,"nodeType":"774","messageId":"775","endLine":127,"endColumn":18},{"ruleId":"772","severity":1,"message":"898","line":127,"column":31,"nodeType":"774","messageId":"775","endLine":127,"endColumn":40},{"ruleId":"772","severity":1,"message":"899","line":127,"column":52,"nodeType":"774","messageId":"775","endLine":127,"endColumn":64},{"ruleId":"830","severity":1,"message":"900","line":251,"column":66,"nodeType":"832","messageId":"901","endLine":251,"endColumn":68},{"ruleId":"880","severity":1,"message":"902","line":279,"column":9,"nodeType":"882","endLine":279,"endColumn":11,"suggestions":"903"},{"ruleId":"772","severity":1,"message":"904","line":290,"column":11,"nodeType":"774","messageId":"775","endLine":290,"endColumn":22},{"ruleId":"772","severity":1,"message":"905","line":296,"column":11,"nodeType":"774","messageId":"775","endLine":296,"endColumn":23},{"ruleId":"772","severity":1,"message":"906","line":330,"column":30,"nodeType":"774","messageId":"775","endLine":330,"endColumn":34},{"ruleId":"772","severity":1,"message":"845","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":26},{"ruleId":"772","severity":1,"message":"886","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":18},{"ruleId":"772","severity":1,"message":"887","line":5,"column":20,"nodeType":"774","messageId":"775","endLine":5,"endColumn":35},{"ruleId":"772","severity":1,"message":"790","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":14},{"ruleId":"772","severity":1,"message":"907","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":29},{"ruleId":"772","severity":1,"message":"847","line":8,"column":31,"nodeType":"774","messageId":"775","endLine":8,"endColumn":44},{"ruleId":"772","severity":1,"message":"848","line":8,"column":46,"nodeType":"774","messageId":"775","endLine":8,"endColumn":66},{"ruleId":"772","severity":1,"message":"849","line":8,"column":68,"nodeType":"774","messageId":"775","endLine":8,"endColumn":88},{"ruleId":"772","severity":1,"message":"850","line":8,"column":90,"nodeType":"774","messageId":"775","endLine":8,"endColumn":103},{"ruleId":"772","severity":1,"message":"781","line":9,"column":23,"nodeType":"774","messageId":"775","endLine":9,"endColumn":31},{"ruleId":"772","severity":1,"message":"838","line":10,"column":53,"nodeType":"774","messageId":"775","endLine":10,"endColumn":68},{"ruleId":"772","severity":1,"message":"852","line":10,"column":70,"nodeType":"774","messageId":"775","endLine":10,"endColumn":78},{"ruleId":"772","severity":1,"message":"825","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":14},{"ruleId":"772","severity":1,"message":"816","line":22,"column":3,"nodeType":"774","messageId":"775","endLine":22,"endColumn":17},{"ruleId":"772","severity":1,"message":"836","line":23,"column":3,"nodeType":"774","messageId":"775","endLine":23,"endColumn":9},{"ruleId":"772","severity":1,"message":"893","line":24,"column":3,"nodeType":"774","messageId":"775","endLine":24,"endColumn":16},{"ruleId":"772","severity":1,"message":"857","line":26,"column":3,"nodeType":"774","messageId":"775","endLine":26,"endColumn":8},{"ruleId":"772","severity":1,"message":"858","line":27,"column":3,"nodeType":"774","messageId":"775","endLine":27,"endColumn":15},{"ruleId":"772","severity":1,"message":"859","line":30,"column":3,"nodeType":"774","messageId":"775","endLine":30,"endColumn":15},{"ruleId":"772","severity":1,"message":"860","line":31,"column":3,"nodeType":"774","messageId":"775","endLine":31,"endColumn":14},{"ruleId":"772","severity":1,"message":"861","line":32,"column":3,"nodeType":"774","messageId":"775","endLine":32,"endColumn":11},{"ruleId":"772","severity":1,"message":"862","line":33,"column":3,"nodeType":"774","messageId":"775","endLine":33,"endColumn":9},{"ruleId":"772","severity":1,"message":"863","line":34,"column":3,"nodeType":"774","messageId":"775","endLine":34,"endColumn":18},{"ruleId":"772","severity":1,"message":"792","line":35,"column":3,"nodeType":"774","messageId":"775","endLine":35,"endColumn":12},{"ruleId":"772","severity":1,"message":"864","line":36,"column":3,"nodeType":"774","messageId":"775","endLine":36,"endColumn":31},{"ruleId":"772","severity":1,"message":"865","line":37,"column":3,"nodeType":"774","messageId":"775","endLine":37,"endColumn":18},{"ruleId":"772","severity":1,"message":"866","line":40,"column":3,"nodeType":"774","messageId":"775","endLine":40,"endColumn":15},{"ruleId":"772","severity":1,"message":"906","line":67,"column":26,"nodeType":"774","messageId":"775","endLine":67,"endColumn":30},{"ruleId":"880","severity":1,"message":"908","line":108,"column":5,"nodeType":"882","endLine":108,"endColumn":22,"suggestions":"909"},{"ruleId":"772","severity":1,"message":"873","line":150,"column":9,"nodeType":"774","messageId":"775","endLine":150,"endColumn":29},{"ruleId":"772","severity":1,"message":"910","line":151,"column":9,"nodeType":"774","messageId":"775","endLine":151,"endColumn":40},{"ruleId":"772","severity":1,"message":"874","line":152,"column":9,"nodeType":"774","messageId":"775","endLine":152,"endColumn":49},{"ruleId":"772","severity":1,"message":"875","line":175,"column":9,"nodeType":"774","messageId":"775","endLine":175,"endColumn":18},{"ruleId":"772","severity":1,"message":"876","line":176,"column":9,"nodeType":"774","messageId":"775","endLine":176,"endColumn":30},{"ruleId":"772","severity":1,"message":"911","line":177,"column":9,"nodeType":"774","messageId":"775","endLine":177,"endColumn":38},{"ruleId":"772","severity":1,"message":"877","line":179,"column":9,"nodeType":"774","messageId":"775","endLine":179,"endColumn":19},{"ruleId":"772","severity":1,"message":"878","line":180,"column":9,"nodeType":"774","messageId":"775","endLine":180,"endColumn":37},{"ruleId":"772","severity":1,"message":"879","line":181,"column":9,"nodeType":"774","messageId":"775","endLine":181,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":236,"column":64,"nodeType":"832","messageId":"833","endLine":236,"endColumn":66},{"ruleId":"880","severity":1,"message":"912","line":274,"column":5,"nodeType":"882","endLine":274,"endColumn":7,"suggestions":"913"},{"ruleId":"772","severity":1,"message":"914","line":1,"column":17,"nodeType":"774","messageId":"775","endLine":1,"endColumn":25},{"ruleId":"772","severity":1,"message":"888","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"915","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":40},{"ruleId":"772","severity":1,"message":"916","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":16},{"ruleId":"772","severity":1,"message":"836","line":12,"column":5,"nodeType":"774","messageId":"775","endLine":12,"endColumn":11},{"ruleId":"772","severity":1,"message":"893","line":13,"column":5,"nodeType":"774","messageId":"775","endLine":13,"endColumn":18},{"ruleId":"772","severity":1,"message":"817","line":14,"column":5,"nodeType":"774","messageId":"775","endLine":14,"endColumn":18},{"ruleId":"772","severity":1,"message":"860","line":20,"column":5,"nodeType":"774","messageId":"775","endLine":20,"endColumn":16},{"ruleId":"772","severity":1,"message":"862","line":22,"column":5,"nodeType":"774","messageId":"775","endLine":22,"endColumn":11},{"ruleId":"772","severity":1,"message":"864","line":25,"column":5,"nodeType":"774","messageId":"775","endLine":25,"endColumn":33},{"ruleId":"772","severity":1,"message":"779","line":30,"column":10,"nodeType":"774","messageId":"775","endLine":30,"endColumn":13},{"ruleId":"772","severity":1,"message":"781","line":30,"column":28,"nodeType":"774","messageId":"775","endLine":30,"endColumn":36},{"ruleId":"772","severity":1,"message":"847","line":31,"column":40,"nodeType":"774","messageId":"775","endLine":31,"endColumn":53},{"ruleId":"772","severity":1,"message":"917","line":31,"column":55,"nodeType":"774","messageId":"775","endLine":31,"endColumn":68},{"ruleId":"772","severity":1,"message":"918","line":39,"column":7,"nodeType":"774","messageId":"775","endLine":39,"endColumn":32},{"ruleId":"772","severity":1,"message":"906","line":123,"column":28,"nodeType":"774","messageId":"775","endLine":123,"endColumn":32},{"ruleId":"772","severity":1,"message":"820","line":196,"column":11,"nodeType":"774","messageId":"775","endLine":196,"endColumn":53},{"ruleId":"772","severity":1,"message":"919","line":203,"column":11,"nodeType":"774","messageId":"775","endLine":203,"endColumn":57},{"ruleId":"880","severity":1,"message":"920","line":324,"column":9,"nodeType":"882","endLine":324,"endColumn":27,"suggestions":"921"},{"ruleId":"880","severity":1,"message":"920","line":349,"column":9,"nodeType":"882","endLine":349,"endColumn":27,"suggestions":"922"},{"ruleId":"772","severity":1,"message":"845","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":26},{"ruleId":"772","severity":1,"message":"923","line":2,"column":88,"nodeType":"774","messageId":"775","endLine":2,"endColumn":104},{"ruleId":"772","severity":1,"message":"924","line":2,"column":106,"nodeType":"774","messageId":"775","endLine":2,"endColumn":115},{"ruleId":"772","severity":1,"message":"818","line":2,"column":117,"nodeType":"774","messageId":"775","endLine":2,"endColumn":130},{"ruleId":"772","severity":1,"message":"813","line":2,"column":132,"nodeType":"774","messageId":"775","endLine":2,"endColumn":141},{"ruleId":"772","severity":1,"message":"886","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":18},{"ruleId":"772","severity":1,"message":"887","line":5,"column":20,"nodeType":"774","messageId":"775","endLine":5,"endColumn":35},{"ruleId":"772","severity":1,"message":"790","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":14},{"ruleId":"772","severity":1,"message":"888","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":20},{"ruleId":"772","severity":1,"message":"907","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":29},{"ruleId":"772","severity":1,"message":"847","line":8,"column":31,"nodeType":"774","messageId":"775","endLine":8,"endColumn":44},{"ruleId":"772","severity":1,"message":"848","line":8,"column":46,"nodeType":"774","messageId":"775","endLine":8,"endColumn":66},{"ruleId":"772","severity":1,"message":"849","line":8,"column":68,"nodeType":"774","messageId":"775","endLine":8,"endColumn":88},{"ruleId":"772","severity":1,"message":"850","line":8,"column":90,"nodeType":"774","messageId":"775","endLine":8,"endColumn":103},{"ruleId":"772","severity":1,"message":"925","line":8,"column":105,"nodeType":"774","messageId":"775","endLine":8,"endColumn":117},{"ruleId":"772","severity":1,"message":"917","line":8,"column":119,"nodeType":"774","messageId":"775","endLine":8,"endColumn":132},{"ruleId":"772","severity":1,"message":"889","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":21},{"ruleId":"772","severity":1,"message":"781","line":9,"column":23,"nodeType":"774","messageId":"775","endLine":9,"endColumn":31},{"ruleId":"772","severity":1,"message":"890","line":10,"column":10,"nodeType":"774","messageId":"775","endLine":10,"endColumn":18},{"ruleId":"772","severity":1,"message":"926","line":10,"column":20,"nodeType":"774","messageId":"775","endLine":10,"endColumn":44},{"ruleId":"772","severity":1,"message":"927","line":10,"column":46,"nodeType":"774","messageId":"775","endLine":10,"endColumn":51},{"ruleId":"772","severity":1,"message":"838","line":10,"column":53,"nodeType":"774","messageId":"775","endLine":10,"endColumn":68},{"ruleId":"772","severity":1,"message":"852","line":10,"column":70,"nodeType":"774","messageId":"775","endLine":10,"endColumn":78},{"ruleId":"772","severity":1,"message":"928","line":10,"column":80,"nodeType":"774","messageId":"775","endLine":10,"endColumn":88},{"ruleId":"772","severity":1,"message":"793","line":10,"column":104,"nodeType":"774","messageId":"775","endLine":10,"endColumn":124},{"ruleId":"772","severity":1,"message":"825","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":14},{"ruleId":"772","severity":1,"message":"816","line":22,"column":3,"nodeType":"774","messageId":"775","endLine":22,"endColumn":17},{"ruleId":"772","severity":1,"message":"836","line":23,"column":3,"nodeType":"774","messageId":"775","endLine":23,"endColumn":9},{"ruleId":"772","severity":1,"message":"893","line":24,"column":3,"nodeType":"774","messageId":"775","endLine":24,"endColumn":16},{"ruleId":"772","severity":1,"message":"817","line":25,"column":3,"nodeType":"774","messageId":"775","endLine":25,"endColumn":16},{"ruleId":"772","severity":1,"message":"857","line":26,"column":3,"nodeType":"774","messageId":"775","endLine":26,"endColumn":8},{"ruleId":"772","severity":1,"message":"858","line":27,"column":3,"nodeType":"774","messageId":"775","endLine":27,"endColumn":15},{"ruleId":"772","severity":1,"message":"859","line":30,"column":3,"nodeType":"774","messageId":"775","endLine":30,"endColumn":15},{"ruleId":"772","severity":1,"message":"860","line":31,"column":3,"nodeType":"774","messageId":"775","endLine":31,"endColumn":14},{"ruleId":"772","severity":1,"message":"861","line":32,"column":3,"nodeType":"774","messageId":"775","endLine":32,"endColumn":11},{"ruleId":"772","severity":1,"message":"862","line":33,"column":3,"nodeType":"774","messageId":"775","endLine":33,"endColumn":9},{"ruleId":"772","severity":1,"message":"863","line":34,"column":3,"nodeType":"774","messageId":"775","endLine":34,"endColumn":18},{"ruleId":"772","severity":1,"message":"792","line":35,"column":3,"nodeType":"774","messageId":"775","endLine":35,"endColumn":12},{"ruleId":"772","severity":1,"message":"864","line":36,"column":3,"nodeType":"774","messageId":"775","endLine":36,"endColumn":31},{"ruleId":"772","severity":1,"message":"865","line":37,"column":3,"nodeType":"774","messageId":"775","endLine":37,"endColumn":18},{"ruleId":"772","severity":1,"message":"866","line":40,"column":3,"nodeType":"774","messageId":"775","endLine":40,"endColumn":15},{"ruleId":"772","severity":1,"message":"929","line":80,"column":9,"nodeType":"774","messageId":"775","endLine":80,"endColumn":22},{"ruleId":"772","severity":1,"message":"872","line":96,"column":9,"nodeType":"774","messageId":"775","endLine":96,"endColumn":28},{"ruleId":"772","severity":1,"message":"873","line":97,"column":9,"nodeType":"774","messageId":"775","endLine":97,"endColumn":29},{"ruleId":"772","severity":1,"message":"910","line":98,"column":9,"nodeType":"774","messageId":"775","endLine":98,"endColumn":40},{"ruleId":"772","severity":1,"message":"874","line":99,"column":9,"nodeType":"774","messageId":"775","endLine":99,"endColumn":49},{"ruleId":"772","severity":1,"message":"875","line":126,"column":9,"nodeType":"774","messageId":"775","endLine":126,"endColumn":18},{"ruleId":"772","severity":1,"message":"876","line":127,"column":9,"nodeType":"774","messageId":"775","endLine":127,"endColumn":30},{"ruleId":"772","severity":1,"message":"911","line":128,"column":9,"nodeType":"774","messageId":"775","endLine":128,"endColumn":38},{"ruleId":"772","severity":1,"message":"877","line":130,"column":9,"nodeType":"774","messageId":"775","endLine":130,"endColumn":19},{"ruleId":"772","severity":1,"message":"878","line":131,"column":9,"nodeType":"774","messageId":"775","endLine":131,"endColumn":37},{"ruleId":"772","severity":1,"message":"879","line":132,"column":9,"nodeType":"774","messageId":"775","endLine":132,"endColumn":28},{"ruleId":"772","severity":1,"message":"820","line":134,"column":9,"nodeType":"774","messageId":"775","endLine":134,"endColumn":51},{"ruleId":"772","severity":1,"message":"930","line":138,"column":9,"nodeType":"774","messageId":"775","endLine":138,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":187,"column":72,"nodeType":"832","messageId":"833","endLine":187,"endColumn":74},{"ruleId":"880","severity":1,"message":"931","line":208,"column":5,"nodeType":"882","endLine":208,"endColumn":7,"suggestions":"932"},{"ruleId":"772","severity":1,"message":"813","line":3,"column":10,"nodeType":"774","messageId":"775","endLine":3,"endColumn":19},{"ruleId":"772","severity":1,"message":"823","line":4,"column":10,"nodeType":"774","messageId":"775","endLine":4,"endColumn":15},{"ruleId":"772","severity":1,"message":"824","line":4,"column":17,"nodeType":"774","messageId":"775","endLine":4,"endColumn":25},{"ruleId":"772","severity":1,"message":"827","line":6,"column":20,"nodeType":"774","messageId":"775","endLine":6,"endColumn":34},{"ruleId":"772","severity":1,"message":"779","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":13},{"ruleId":"772","severity":1,"message":"845","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":26},{"ruleId":"772","severity":1,"message":"835","line":12,"column":28,"nodeType":"774","messageId":"775","endLine":12,"endColumn":48},{"ruleId":"772","severity":1,"message":"866","line":12,"column":100,"nodeType":"774","messageId":"775","endLine":12,"endColumn":112},{"ruleId":"772","severity":1,"message":"933","line":12,"column":114,"nodeType":"774","messageId":"775","endLine":12,"endColumn":129},{"ruleId":"772","severity":1,"message":"934","line":42,"column":5,"nodeType":"774","messageId":"775","endLine":42,"endColumn":12},{"ruleId":"772","severity":1,"message":"935","line":43,"column":5,"nodeType":"774","messageId":"775","endLine":43,"endColumn":10},{"ruleId":"880","severity":1,"message":"936","line":70,"column":6,"nodeType":"882","endLine":70,"endColumn":26,"suggestions":"937"},{"ruleId":"772","severity":1,"message":"938","line":82,"column":34,"nodeType":"774","messageId":"775","endLine":82,"endColumn":52},{"ruleId":"830","severity":1,"message":"831","line":99,"column":60,"nodeType":"832","messageId":"833","endLine":99,"endColumn":62},{"ruleId":"772","severity":1,"message":"939","line":195,"column":9,"nodeType":"774","messageId":"775","endLine":195,"endColumn":19},{"ruleId":"772","severity":1,"message":"914","line":1,"column":17,"nodeType":"774","messageId":"775","endLine":1,"endColumn":25},{"ruleId":"772","severity":1,"message":"888","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"915","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":40},{"ruleId":"772","severity":1,"message":"916","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":16},{"ruleId":"772","severity":1,"message":"836","line":12,"column":5,"nodeType":"774","messageId":"775","endLine":12,"endColumn":11},{"ruleId":"772","severity":1,"message":"893","line":13,"column":5,"nodeType":"774","messageId":"775","endLine":13,"endColumn":18},{"ruleId":"772","severity":1,"message":"817","line":14,"column":5,"nodeType":"774","messageId":"775","endLine":14,"endColumn":18},{"ruleId":"772","severity":1,"message":"860","line":20,"column":5,"nodeType":"774","messageId":"775","endLine":20,"endColumn":16},{"ruleId":"772","severity":1,"message":"862","line":22,"column":5,"nodeType":"774","messageId":"775","endLine":22,"endColumn":11},{"ruleId":"772","severity":1,"message":"864","line":25,"column":5,"nodeType":"774","messageId":"775","endLine":25,"endColumn":33},{"ruleId":"772","severity":1,"message":"779","line":30,"column":10,"nodeType":"774","messageId":"775","endLine":30,"endColumn":13},{"ruleId":"772","severity":1,"message":"781","line":30,"column":28,"nodeType":"774","messageId":"775","endLine":30,"endColumn":36},{"ruleId":"772","severity":1,"message":"940","line":31,"column":10,"nodeType":"774","messageId":"775","endLine":31,"endColumn":24},{"ruleId":"772","severity":1,"message":"941","line":31,"column":26,"nodeType":"774","messageId":"775","endLine":31,"endColumn":38},{"ruleId":"772","severity":1,"message":"847","line":31,"column":40,"nodeType":"774","messageId":"775","endLine":31,"endColumn":53},{"ruleId":"772","severity":1,"message":"918","line":39,"column":7,"nodeType":"774","messageId":"775","endLine":39,"endColumn":32},{"ruleId":"772","severity":1,"message":"906","line":108,"column":30,"nodeType":"774","messageId":"775","endLine":108,"endColumn":34},{"ruleId":"772","severity":1,"message":"820","line":184,"column":11,"nodeType":"774","messageId":"775","endLine":184,"endColumn":53},{"ruleId":"772","severity":1,"message":"919","line":191,"column":11,"nodeType":"774","messageId":"775","endLine":191,"endColumn":57},{"ruleId":"880","severity":1,"message":"920","line":312,"column":9,"nodeType":"882","endLine":312,"endColumn":27,"suggestions":"942"},{"ruleId":"880","severity":1,"message":"920","line":337,"column":9,"nodeType":"882","endLine":337,"endColumn":27,"suggestions":"943"},{"ruleId":"772","severity":1,"message":"944","line":57,"column":34,"nodeType":"774","messageId":"775","endLine":57,"endColumn":52},{"ruleId":"772","severity":1,"message":"945","line":89,"column":34,"nodeType":"774","messageId":"775","endLine":89,"endColumn":52},{"ruleId":"772","severity":1,"message":"906","line":125,"column":25,"nodeType":"774","messageId":"775","endLine":125,"endColumn":29},{"ruleId":"880","severity":1,"message":"946","line":330,"column":5,"nodeType":"882","endLine":330,"endColumn":23,"suggestions":"947"},{"ruleId":"772","severity":1,"message":"948","line":4,"column":91,"nodeType":"774","messageId":"775","endLine":4,"endColumn":119},{"ruleId":"772","severity":1,"message":"793","line":4,"column":135,"nodeType":"774","messageId":"775","endLine":4,"endColumn":155},{"ruleId":"772","severity":1,"message":"949","line":5,"column":74,"nodeType":"774","messageId":"775","endLine":5,"endColumn":91},{"ruleId":"772","severity":1,"message":"827","line":8,"column":196,"nodeType":"774","messageId":"775","endLine":8,"endColumn":210},{"ruleId":"772","severity":1,"message":"950","line":11,"column":8,"nodeType":"774","messageId":"775","endLine":11,"endColumn":23},{"ruleId":"772","severity":1,"message":"951","line":65,"column":38,"nodeType":"774","messageId":"775","endLine":65,"endColumn":60},{"ruleId":"772","severity":1,"message":"952","line":97,"column":38,"nodeType":"774","messageId":"775","endLine":97,"endColumn":60},{"ruleId":"772","severity":1,"message":"953","line":337,"column":9,"nodeType":"774","messageId":"775","endLine":337,"endColumn":58},{"ruleId":"880","severity":1,"message":"954","line":343,"column":5,"nodeType":"882","endLine":343,"endColumn":26,"suggestions":"955"},{"ruleId":"772","severity":1,"message":"823","line":4,"column":10,"nodeType":"774","messageId":"775","endLine":4,"endColumn":15},{"ruleId":"772","severity":1,"message":"824","line":4,"column":17,"nodeType":"774","messageId":"775","endLine":4,"endColumn":25},{"ruleId":"772","severity":1,"message":"826","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":18},{"ruleId":"772","severity":1,"message":"827","line":6,"column":20,"nodeType":"774","messageId":"775","endLine":6,"endColumn":34},{"ruleId":"772","severity":1,"message":"828","line":7,"column":17,"nodeType":"774","messageId":"775","endLine":7,"endColumn":25},{"ruleId":"772","severity":1,"message":"846","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":33},{"ruleId":"772","severity":1,"message":"940","line":8,"column":35,"nodeType":"774","messageId":"775","endLine":8,"endColumn":49},{"ruleId":"772","severity":1,"message":"956","line":8,"column":51,"nodeType":"774","messageId":"775","endLine":8,"endColumn":66},{"ruleId":"772","severity":1,"message":"779","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":13},{"ruleId":"772","severity":1,"message":"781","line":9,"column":28,"nodeType":"774","messageId":"775","endLine":9,"endColumn":36},{"ruleId":"772","severity":1,"message":"829","line":10,"column":10,"nodeType":"774","messageId":"775","endLine":10,"endColumn":30},{"ruleId":"772","severity":1,"message":"957","line":11,"column":23,"nodeType":"774","messageId":"775","endLine":11,"endColumn":36},{"ruleId":"772","severity":1,"message":"845","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":26},{"ruleId":"772","severity":1,"message":"835","line":12,"column":28,"nodeType":"774","messageId":"775","endLine":12,"endColumn":48},{"ruleId":"772","severity":1,"message":"866","line":12,"column":100,"nodeType":"774","messageId":"775","endLine":12,"endColumn":112},{"ruleId":"772","severity":1,"message":"933","line":12,"column":114,"nodeType":"774","messageId":"775","endLine":12,"endColumn":129},{"ruleId":"772","severity":1,"message":"958","line":14,"column":10,"nodeType":"774","messageId":"775","endLine":14,"endColumn":24},{"ruleId":"772","severity":1,"message":"959","line":14,"column":26,"nodeType":"774","messageId":"775","endLine":14,"endColumn":36},{"ruleId":"772","severity":1,"message":"960","line":14,"column":38,"nodeType":"774","messageId":"775","endLine":14,"endColumn":48},{"ruleId":"772","severity":1,"message":"961","line":14,"column":50,"nodeType":"774","messageId":"775","endLine":14,"endColumn":62},{"ruleId":"772","severity":1,"message":"962","line":15,"column":10,"nodeType":"774","messageId":"775","endLine":15,"endColumn":18},{"ruleId":"772","severity":1,"message":"963","line":16,"column":10,"nodeType":"774","messageId":"775","endLine":16,"endColumn":25},{"ruleId":"772","severity":1,"message":"964","line":19,"column":10,"nodeType":"774","messageId":"775","endLine":19,"endColumn":16},{"ruleId":"772","severity":1,"message":"965","line":19,"column":18,"nodeType":"774","messageId":"775","endLine":19,"endColumn":33},{"ruleId":"772","severity":1,"message":"966","line":47,"column":41,"nodeType":"774","messageId":"775","endLine":47,"endColumn":66},{"ruleId":"772","severity":1,"message":"945","line":86,"column":41,"nodeType":"774","messageId":"775","endLine":86,"endColumn":59},{"ruleId":"772","severity":1,"message":"967","line":230,"column":9,"nodeType":"774","messageId":"775","endLine":230,"endColumn":21},{"ruleId":"772","severity":1,"message":"968","line":245,"column":9,"nodeType":"774","messageId":"775","endLine":245,"endColumn":18},{"ruleId":"772","severity":1,"message":"969","line":260,"column":9,"nodeType":"774","messageId":"775","endLine":260,"endColumn":23},{"ruleId":"772","severity":1,"message":"875","line":276,"column":9,"nodeType":"774","messageId":"775","endLine":276,"endColumn":18},{"ruleId":"772","severity":1,"message":"970","line":277,"column":9,"nodeType":"774","messageId":"775","endLine":277,"endColumn":30},{"ruleId":"782","replacedBy":"783"},{"ruleId":"784","replacedBy":"785"},{"ruleId":"772","severity":1,"message":"914","line":1,"column":17,"nodeType":"774","messageId":"775","endLine":1,"endColumn":25},{"ruleId":"772","severity":1,"message":"888","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"915","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":40},{"ruleId":"772","severity":1,"message":"916","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":16},{"ruleId":"772","severity":1,"message":"971","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":25},{"ruleId":"772","severity":1,"message":"817","line":15,"column":5,"nodeType":"774","messageId":"775","endLine":15,"endColumn":18},{"ruleId":"772","severity":1,"message":"860","line":21,"column":5,"nodeType":"774","messageId":"775","endLine":21,"endColumn":16},{"ruleId":"772","severity":1,"message":"861","line":22,"column":5,"nodeType":"774","messageId":"775","endLine":22,"endColumn":13},{"ruleId":"772","severity":1,"message":"862","line":23,"column":5,"nodeType":"774","messageId":"775","endLine":23,"endColumn":11},{"ruleId":"772","severity":1,"message":"863","line":24,"column":5,"nodeType":"774","messageId":"775","endLine":24,"endColumn":20},{"ruleId":"772","severity":1,"message":"792","line":25,"column":5,"nodeType":"774","messageId":"775","endLine":25,"endColumn":14},{"ruleId":"772","severity":1,"message":"864","line":26,"column":5,"nodeType":"774","messageId":"775","endLine":26,"endColumn":33},{"ruleId":"772","severity":1,"message":"972","line":33,"column":5,"nodeType":"774","messageId":"775","endLine":33,"endColumn":19},{"ruleId":"772","severity":1,"message":"973","line":36,"column":10,"nodeType":"774","messageId":"775","endLine":36,"endColumn":33},{"ruleId":"772","severity":1,"message":"779","line":36,"column":35,"nodeType":"774","messageId":"775","endLine":36,"endColumn":38},{"ruleId":"772","severity":1,"message":"847","line":37,"column":45,"nodeType":"774","messageId":"775","endLine":37,"endColumn":58},{"ruleId":"772","severity":1,"message":"852","line":38,"column":63,"nodeType":"774","messageId":"775","endLine":38,"endColumn":71},{"ruleId":"772","severity":1,"message":"918","line":45,"column":7,"nodeType":"774","messageId":"775","endLine":45,"endColumn":32},{"ruleId":"772","severity":1,"message":"974","line":65,"column":18,"nodeType":"774","messageId":"775","endLine":65,"endColumn":33},{"ruleId":"772","severity":1,"message":"896","line":66,"column":16,"nodeType":"774","messageId":"775","endLine":66,"endColumn":29},{"ruleId":"772","severity":1,"message":"975","line":134,"column":15,"nodeType":"774","messageId":"775","endLine":134,"endColumn":20},{"ruleId":"772","severity":1,"message":"906","line":183,"column":28,"nodeType":"774","messageId":"775","endLine":183,"endColumn":32},{"ruleId":"772","severity":1,"message":"820","line":259,"column":11,"nodeType":"774","messageId":"775","endLine":259,"endColumn":53},{"ruleId":"772","severity":1,"message":"976","line":263,"column":11,"nodeType":"774","messageId":"775","endLine":263,"endColumn":64},{"ruleId":"772","severity":1,"message":"977","line":264,"column":11,"nodeType":"774","messageId":"775","endLine":264,"endColumn":56},{"ruleId":"772","severity":1,"message":"919","line":267,"column":11,"nodeType":"774","messageId":"775","endLine":267,"endColumn":57},{"ruleId":"772","severity":1,"message":"978","line":268,"column":11,"nodeType":"774","messageId":"775","endLine":268,"endColumn":59},{"ruleId":"772","severity":1,"message":"979","line":269,"column":11,"nodeType":"774","messageId":"775","endLine":269,"endColumn":51},{"ruleId":"880","severity":1,"message":"980","line":497,"column":9,"nodeType":"882","endLine":497,"endColumn":29,"suggestions":"981"},{"ruleId":"880","severity":1,"message":"982","line":512,"column":9,"nodeType":"882","endLine":512,"endColumn":29,"suggestions":"983"},{"ruleId":"880","severity":1,"message":"984","line":519,"column":9,"nodeType":"882","endLine":519,"endColumn":29,"suggestions":"985"},{"ruleId":"880","severity":1,"message":"986","line":533,"column":9,"nodeType":"882","endLine":533,"endColumn":29,"suggestions":"987"},{"ruleId":"880","severity":1,"message":"988","line":540,"column":9,"nodeType":"882","endLine":540,"endColumn":29,"suggestions":"989"},{"ruleId":"880","severity":1,"message":"990","line":554,"column":9,"nodeType":"882","endLine":554,"endColumn":29,"suggestions":"991"},{"ruleId":"772","severity":1,"message":"888","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"816","line":7,"column":5,"nodeType":"774","messageId":"775","endLine":7,"endColumn":19},{"ruleId":"772","severity":1,"message":"836","line":8,"column":5,"nodeType":"774","messageId":"775","endLine":8,"endColumn":11},{"ruleId":"772","severity":1,"message":"817","line":9,"column":5,"nodeType":"774","messageId":"775","endLine":9,"endColumn":18},{"ruleId":"772","severity":1,"message":"858","line":12,"column":5,"nodeType":"774","messageId":"775","endLine":12,"endColumn":17},{"ruleId":"772","severity":1,"message":"992","line":15,"column":5,"nodeType":"774","messageId":"775","endLine":15,"endColumn":16},{"ruleId":"772","severity":1,"message":"993","line":16,"column":5,"nodeType":"774","messageId":"775","endLine":16,"endColumn":16},{"ruleId":"772","severity":1,"message":"866","line":19,"column":5,"nodeType":"774","messageId":"775","endLine":19,"endColumn":17},{"ruleId":"772","severity":1,"message":"838","line":23,"column":17,"nodeType":"774","messageId":"775","endLine":23,"endColumn":32},{"ruleId":"772","severity":1,"message":"994","line":31,"column":6,"nodeType":"774","messageId":"775","endLine":31,"endColumn":11},{"ruleId":"772","severity":1,"message":"974","line":47,"column":18,"nodeType":"774","messageId":"775","endLine":47,"endColumn":33},{"ruleId":"772","severity":1,"message":"896","line":48,"column":16,"nodeType":"774","messageId":"775","endLine":48,"endColumn":29},{"ruleId":"772","severity":1,"message":"840","line":243,"column":7,"nodeType":"774","messageId":"775","endLine":243,"endColumn":19},{"ruleId":"772","severity":1,"message":"914","line":1,"column":17,"nodeType":"774","messageId":"775","endLine":1,"endColumn":25},{"ruleId":"772","severity":1,"message":"888","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"915","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":40},{"ruleId":"772","severity":1,"message":"916","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":16},{"ruleId":"772","severity":1,"message":"971","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":25},{"ruleId":"772","severity":1,"message":"817","line":15,"column":5,"nodeType":"774","messageId":"775","endLine":15,"endColumn":18},{"ruleId":"772","severity":1,"message":"860","line":21,"column":5,"nodeType":"774","messageId":"775","endLine":21,"endColumn":16},{"ruleId":"772","severity":1,"message":"861","line":22,"column":5,"nodeType":"774","messageId":"775","endLine":22,"endColumn":13},{"ruleId":"772","severity":1,"message":"862","line":23,"column":5,"nodeType":"774","messageId":"775","endLine":23,"endColumn":11},{"ruleId":"772","severity":1,"message":"863","line":24,"column":5,"nodeType":"774","messageId":"775","endLine":24,"endColumn":20},{"ruleId":"772","severity":1,"message":"792","line":25,"column":5,"nodeType":"774","messageId":"775","endLine":25,"endColumn":14},{"ruleId":"772","severity":1,"message":"864","line":26,"column":5,"nodeType":"774","messageId":"775","endLine":26,"endColumn":33},{"ruleId":"772","severity":1,"message":"972","line":33,"column":5,"nodeType":"774","messageId":"775","endLine":33,"endColumn":19},{"ruleId":"772","severity":1,"message":"973","line":36,"column":10,"nodeType":"774","messageId":"775","endLine":36,"endColumn":33},{"ruleId":"772","severity":1,"message":"779","line":36,"column":35,"nodeType":"774","messageId":"775","endLine":36,"endColumn":38},{"ruleId":"772","severity":1,"message":"847","line":37,"column":48,"nodeType":"774","messageId":"775","endLine":37,"endColumn":61},{"ruleId":"772","severity":1,"message":"852","line":38,"column":65,"nodeType":"774","messageId":"775","endLine":38,"endColumn":73},{"ruleId":"772","severity":1,"message":"918","line":45,"column":7,"nodeType":"774","messageId":"775","endLine":45,"endColumn":32},{"ruleId":"772","severity":1,"message":"974","line":65,"column":18,"nodeType":"774","messageId":"775","endLine":65,"endColumn":33},{"ruleId":"772","severity":1,"message":"896","line":66,"column":16,"nodeType":"774","messageId":"775","endLine":66,"endColumn":29},{"ruleId":"772","severity":1,"message":"975","line":134,"column":15,"nodeType":"774","messageId":"775","endLine":134,"endColumn":20},{"ruleId":"772","severity":1,"message":"906","line":183,"column":30,"nodeType":"774","messageId":"775","endLine":183,"endColumn":34},{"ruleId":"772","severity":1,"message":"820","line":265,"column":11,"nodeType":"774","messageId":"775","endLine":265,"endColumn":53},{"ruleId":"772","severity":1,"message":"976","line":271,"column":11,"nodeType":"774","messageId":"775","endLine":271,"endColumn":64},{"ruleId":"772","severity":1,"message":"977","line":272,"column":11,"nodeType":"774","messageId":"775","endLine":272,"endColumn":56},{"ruleId":"772","severity":1,"message":"919","line":275,"column":11,"nodeType":"774","messageId":"775","endLine":275,"endColumn":57},{"ruleId":"772","severity":1,"message":"978","line":276,"column":11,"nodeType":"774","messageId":"775","endLine":276,"endColumn":59},{"ruleId":"772","severity":1,"message":"979","line":277,"column":11,"nodeType":"774","messageId":"775","endLine":277,"endColumn":51},{"ruleId":"880","severity":1,"message":"980","line":504,"column":9,"nodeType":"882","endLine":504,"endColumn":26,"suggestions":"995"},{"ruleId":"880","severity":1,"message":"982","line":519,"column":9,"nodeType":"882","endLine":519,"endColumn":26,"suggestions":"996"},{"ruleId":"880","severity":1,"message":"984","line":526,"column":9,"nodeType":"882","endLine":526,"endColumn":26,"suggestions":"997"},{"ruleId":"880","severity":1,"message":"986","line":540,"column":9,"nodeType":"882","endLine":540,"endColumn":26,"suggestions":"998"},{"ruleId":"880","severity":1,"message":"988","line":547,"column":9,"nodeType":"882","endLine":547,"endColumn":26,"suggestions":"999"},{"ruleId":"880","severity":1,"message":"990","line":561,"column":9,"nodeType":"882","endLine":561,"endColumn":26,"suggestions":"1000"},{"ruleId":"772","severity":1,"message":"914","line":1,"column":17,"nodeType":"774","messageId":"775","endLine":1,"endColumn":25},{"ruleId":"772","severity":1,"message":"888","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"915","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":40},{"ruleId":"772","severity":1,"message":"916","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":16},{"ruleId":"772","severity":1,"message":"971","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":25},{"ruleId":"772","severity":1,"message":"817","line":15,"column":5,"nodeType":"774","messageId":"775","endLine":15,"endColumn":18},{"ruleId":"772","severity":1,"message":"860","line":21,"column":5,"nodeType":"774","messageId":"775","endLine":21,"endColumn":16},{"ruleId":"772","severity":1,"message":"861","line":22,"column":5,"nodeType":"774","messageId":"775","endLine":22,"endColumn":13},{"ruleId":"772","severity":1,"message":"862","line":23,"column":5,"nodeType":"774","messageId":"775","endLine":23,"endColumn":11},{"ruleId":"772","severity":1,"message":"863","line":24,"column":5,"nodeType":"774","messageId":"775","endLine":24,"endColumn":20},{"ruleId":"772","severity":1,"message":"792","line":25,"column":5,"nodeType":"774","messageId":"775","endLine":25,"endColumn":14},{"ruleId":"772","severity":1,"message":"864","line":26,"column":5,"nodeType":"774","messageId":"775","endLine":26,"endColumn":33},{"ruleId":"772","severity":1,"message":"972","line":33,"column":5,"nodeType":"774","messageId":"775","endLine":33,"endColumn":19},{"ruleId":"772","severity":1,"message":"973","line":36,"column":10,"nodeType":"774","messageId":"775","endLine":36,"endColumn":33},{"ruleId":"772","severity":1,"message":"779","line":36,"column":35,"nodeType":"774","messageId":"775","endLine":36,"endColumn":38},{"ruleId":"772","severity":1,"message":"781","line":36,"column":53,"nodeType":"774","messageId":"775","endLine":36,"endColumn":61},{"ruleId":"772","severity":1,"message":"847","line":37,"column":45,"nodeType":"774","messageId":"775","endLine":37,"endColumn":58},{"ruleId":"772","severity":1,"message":"918","line":45,"column":7,"nodeType":"774","messageId":"775","endLine":45,"endColumn":32},{"ruleId":"772","severity":1,"message":"975","line":103,"column":15,"nodeType":"774","messageId":"775","endLine":103,"endColumn":20},{"ruleId":"772","severity":1,"message":"906","line":151,"column":28,"nodeType":"774","messageId":"775","endLine":151,"endColumn":32},{"ruleId":"772","severity":1,"message":"820","line":226,"column":11,"nodeType":"774","messageId":"775","endLine":226,"endColumn":53},{"ruleId":"772","severity":1,"message":"976","line":232,"column":11,"nodeType":"774","messageId":"775","endLine":232,"endColumn":64},{"ruleId":"772","severity":1,"message":"977","line":233,"column":11,"nodeType":"774","messageId":"775","endLine":233,"endColumn":56},{"ruleId":"772","severity":1,"message":"919","line":236,"column":11,"nodeType":"774","messageId":"775","endLine":236,"endColumn":57},{"ruleId":"772","severity":1,"message":"978","line":237,"column":11,"nodeType":"774","messageId":"775","endLine":237,"endColumn":59},{"ruleId":"772","severity":1,"message":"979","line":238,"column":11,"nodeType":"774","messageId":"775","endLine":238,"endColumn":51},{"ruleId":"880","severity":1,"message":"980","line":467,"column":9,"nodeType":"882","endLine":467,"endColumn":22,"suggestions":"1001"},{"ruleId":"880","severity":1,"message":"982","line":482,"column":9,"nodeType":"882","endLine":482,"endColumn":22,"suggestions":"1002"},{"ruleId":"880","severity":1,"message":"984","line":489,"column":9,"nodeType":"882","endLine":489,"endColumn":22,"suggestions":"1003"},{"ruleId":"880","severity":1,"message":"986","line":503,"column":9,"nodeType":"882","endLine":503,"endColumn":22,"suggestions":"1004"},{"ruleId":"880","severity":1,"message":"988","line":510,"column":9,"nodeType":"882","endLine":510,"endColumn":22,"suggestions":"1005"},{"ruleId":"880","severity":1,"message":"990","line":524,"column":9,"nodeType":"882","endLine":524,"endColumn":22,"suggestions":"1006"},{"ruleId":"772","severity":1,"message":"816","line":7,"column":3,"nodeType":"774","messageId":"775","endLine":7,"endColumn":17},{"ruleId":"772","severity":1,"message":"836","line":8,"column":3,"nodeType":"774","messageId":"775","endLine":8,"endColumn":9},{"ruleId":"772","severity":1,"message":"817","line":9,"column":3,"nodeType":"774","messageId":"775","endLine":9,"endColumn":16},{"ruleId":"772","severity":1,"message":"858","line":11,"column":3,"nodeType":"774","messageId":"775","endLine":11,"endColumn":15},{"ruleId":"772","severity":1,"message":"992","line":14,"column":3,"nodeType":"774","messageId":"775","endLine":14,"endColumn":14},{"ruleId":"772","severity":1,"message":"847","line":18,"column":10,"nodeType":"774","messageId":"775","endLine":18,"endColumn":23},{"ruleId":"772","severity":1,"message":"927","line":19,"column":10,"nodeType":"774","messageId":"775","endLine":19,"endColumn":15},{"ruleId":"772","severity":1,"message":"838","line":19,"column":17,"nodeType":"774","messageId":"775","endLine":19,"endColumn":32},{"ruleId":"772","severity":1,"message":"779","line":20,"column":10,"nodeType":"774","messageId":"775","endLine":20,"endColumn":13},{"ruleId":"772","severity":1,"message":"781","line":20,"column":15,"nodeType":"774","messageId":"775","endLine":20,"endColumn":23},{"ruleId":"772","severity":1,"message":"994","line":24,"column":6,"nodeType":"774","messageId":"775","endLine":24,"endColumn":11},{"ruleId":"772","severity":1,"message":"1007","line":34,"column":10,"nodeType":"774","messageId":"775","endLine":34,"endColumn":21},{"ruleId":"772","severity":1,"message":"1008","line":34,"column":34,"nodeType":"774","messageId":"775","endLine":34,"endColumn":43},{"ruleId":"772","severity":1,"message":"1009","line":59,"column":7,"nodeType":"774","messageId":"775","endLine":59,"endColumn":30},{"ruleId":"772","severity":1,"message":"840","line":133,"column":7,"nodeType":"774","messageId":"775","endLine":133,"endColumn":19},{"ruleId":"772","severity":1,"message":"823","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":15},{"ruleId":"772","severity":1,"message":"824","line":2,"column":17,"nodeType":"774","messageId":"775","endLine":2,"endColumn":25},{"ruleId":"772","severity":1,"message":"825","line":3,"column":10,"nodeType":"774","messageId":"775","endLine":3,"endColumn":14},{"ruleId":"772","severity":1,"message":"826","line":4,"column":10,"nodeType":"774","messageId":"775","endLine":4,"endColumn":18},{"ruleId":"772","severity":1,"message":"827","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":34},{"ruleId":"772","severity":1,"message":"927","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":15},{"ruleId":"772","severity":1,"message":"781","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":18},{"ruleId":"772","severity":1,"message":"829","line":7,"column":10,"nodeType":"774","messageId":"775","endLine":7,"endColumn":30},{"ruleId":"772","severity":1,"message":"1010","line":67,"column":11,"nodeType":"774","messageId":"775","endLine":67,"endColumn":44},{"ruleId":"772","severity":1,"message":"1011","line":1,"column":27,"nodeType":"774","messageId":"775","endLine":1,"endColumn":36},{"ruleId":"772","severity":1,"message":"915","line":4,"column":20,"nodeType":"774","messageId":"775","endLine":4,"endColumn":40},{"ruleId":"772","severity":1,"message":"791","line":6,"column":5,"nodeType":"774","messageId":"775","endLine":6,"endColumn":16},{"ruleId":"772","severity":1,"message":"781","line":13,"column":23,"nodeType":"774","messageId":"775","endLine":13,"endColumn":31},{"ruleId":"772","severity":1,"message":"906","line":27,"column":30,"nodeType":"774","messageId":"775","endLine":27,"endColumn":34},{"ruleId":"772","severity":1,"message":"846","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":33},{"ruleId":"772","severity":1,"message":"847","line":8,"column":35,"nodeType":"774","messageId":"775","endLine":8,"endColumn":48},{"ruleId":"772","severity":1,"message":"848","line":8,"column":50,"nodeType":"774","messageId":"775","endLine":8,"endColumn":70},{"ruleId":"772","severity":1,"message":"849","line":8,"column":72,"nodeType":"774","messageId":"775","endLine":8,"endColumn":92},{"ruleId":"772","severity":1,"message":"850","line":8,"column":94,"nodeType":"774","messageId":"775","endLine":8,"endColumn":107},{"ruleId":"772","severity":1,"message":"889","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":21},{"ruleId":"772","severity":1,"message":"781","line":9,"column":23,"nodeType":"774","messageId":"775","endLine":9,"endColumn":31},{"ruleId":"772","severity":1,"message":"890","line":10,"column":10,"nodeType":"774","messageId":"775","endLine":10,"endColumn":18},{"ruleId":"772","severity":1,"message":"891","line":10,"column":20,"nodeType":"774","messageId":"775","endLine":10,"endColumn":46},{"ruleId":"772","severity":1,"message":"927","line":10,"column":48,"nodeType":"774","messageId":"775","endLine":10,"endColumn":53},{"ruleId":"772","severity":1,"message":"838","line":10,"column":55,"nodeType":"774","messageId":"775","endLine":10,"endColumn":70},{"ruleId":"772","severity":1,"message":"852","line":10,"column":72,"nodeType":"774","messageId":"775","endLine":10,"endColumn":80},{"ruleId":"772","severity":1,"message":"828","line":10,"column":104,"nodeType":"774","messageId":"775","endLine":10,"endColumn":112},{"ruleId":"772","severity":1,"message":"1012","line":11,"column":29,"nodeType":"774","messageId":"775","endLine":11,"endColumn":47},{"ruleId":"772","severity":1,"message":"892","line":11,"column":73,"nodeType":"774","messageId":"775","endLine":11,"endColumn":96},{"ruleId":"772","severity":1,"message":"846","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":33},{"ruleId":"772","severity":1,"message":"847","line":8,"column":35,"nodeType":"774","messageId":"775","endLine":8,"endColumn":48},{"ruleId":"772","severity":1,"message":"848","line":8,"column":50,"nodeType":"774","messageId":"775","endLine":8,"endColumn":70},{"ruleId":"772","severity":1,"message":"849","line":8,"column":72,"nodeType":"774","messageId":"775","endLine":8,"endColumn":92},{"ruleId":"772","severity":1,"message":"850","line":8,"column":94,"nodeType":"774","messageId":"775","endLine":8,"endColumn":107},{"ruleId":"772","severity":1,"message":"889","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":21},{"ruleId":"772","severity":1,"message":"781","line":9,"column":23,"nodeType":"774","messageId":"775","endLine":9,"endColumn":31},{"ruleId":"772","severity":1,"message":"890","line":10,"column":10,"nodeType":"774","messageId":"775","endLine":10,"endColumn":18},{"ruleId":"772","severity":1,"message":"891","line":10,"column":20,"nodeType":"774","messageId":"775","endLine":10,"endColumn":46},{"ruleId":"772","severity":1,"message":"927","line":10,"column":48,"nodeType":"774","messageId":"775","endLine":10,"endColumn":53},{"ruleId":"772","severity":1,"message":"838","line":10,"column":55,"nodeType":"774","messageId":"775","endLine":10,"endColumn":70},{"ruleId":"772","severity":1,"message":"828","line":10,"column":104,"nodeType":"774","messageId":"775","endLine":10,"endColumn":112},{"ruleId":"772","severity":1,"message":"1012","line":11,"column":29,"nodeType":"774","messageId":"775","endLine":11,"endColumn":47},{"ruleId":"772","severity":1,"message":"892","line":11,"column":73,"nodeType":"774","messageId":"775","endLine":11,"endColumn":96},{"ruleId":"772","severity":1,"message":"1013","line":7,"column":17,"nodeType":"774","messageId":"775","endLine":7,"endColumn":22},{"ruleId":"772","severity":1,"message":"1014","line":7,"column":24,"nodeType":"774","messageId":"775","endLine":7,"endColumn":38},{"ruleId":"772","severity":1,"message":"1015","line":7,"column":40,"nodeType":"774","messageId":"775","endLine":7,"endColumn":57},{"ruleId":"772","severity":1,"message":"847","line":9,"column":46,"nodeType":"774","messageId":"775","endLine":9,"endColumn":59},{"ruleId":"772","severity":1,"message":"974","line":68,"column":18,"nodeType":"774","messageId":"775","endLine":68,"endColumn":33},{"ruleId":"772","severity":1,"message":"896","line":69,"column":16,"nodeType":"774","messageId":"775","endLine":69,"endColumn":29},{"ruleId":"772","severity":1,"message":"906","line":88,"column":30,"nodeType":"774","messageId":"775","endLine":88,"endColumn":34},{"ruleId":"1016","severity":1,"message":"1017","line":164,"column":17,"nodeType":"774","messageId":"1018","endLine":164,"endColumn":21},{"ruleId":"1016","severity":1,"message":"1019","line":173,"column":17,"nodeType":"774","messageId":"1018","endLine":173,"endColumn":22},{"ruleId":"1016","severity":1,"message":"1017","line":175,"column":17,"nodeType":"774","messageId":"1018","endLine":175,"endColumn":21},{"ruleId":"1020","severity":1,"message":"1021","line":297,"column":7,"nodeType":"1022","messageId":"1023","endLine":297,"endColumn":13},{"ruleId":"1020","severity":1,"message":"1021","line":300,"column":7,"nodeType":"1022","messageId":"1023","endLine":300,"endColumn":13},{"ruleId":"772","severity":1,"message":"813","line":3,"column":10,"nodeType":"774","messageId":"775","endLine":3,"endColumn":19},{"ruleId":"772","severity":1,"message":"823","line":4,"column":10,"nodeType":"774","messageId":"775","endLine":4,"endColumn":15},{"ruleId":"772","severity":1,"message":"824","line":4,"column":17,"nodeType":"774","messageId":"775","endLine":4,"endColumn":25},{"ruleId":"772","severity":1,"message":"825","line":5,"column":10,"nodeType":"774","messageId":"775","endLine":5,"endColumn":14},{"ruleId":"772","severity":1,"message":"826","line":6,"column":10,"nodeType":"774","messageId":"775","endLine":6,"endColumn":18},{"ruleId":"772","severity":1,"message":"827","line":6,"column":20,"nodeType":"774","messageId":"775","endLine":6,"endColumn":34},{"ruleId":"772","severity":1,"message":"846","line":8,"column":10,"nodeType":"774","messageId":"775","endLine":8,"endColumn":33},{"ruleId":"772","severity":1,"message":"1024","line":8,"column":35,"nodeType":"774","messageId":"775","endLine":8,"endColumn":47},{"ruleId":"772","severity":1,"message":"779","line":9,"column":10,"nodeType":"774","messageId":"775","endLine":9,"endColumn":13},{"ruleId":"772","severity":1,"message":"781","line":9,"column":28,"nodeType":"774","messageId":"775","endLine":9,"endColumn":36},{"ruleId":"772","severity":1,"message":"829","line":10,"column":10,"nodeType":"774","messageId":"775","endLine":10,"endColumn":30},{"ruleId":"772","severity":1,"message":"957","line":11,"column":23,"nodeType":"774","messageId":"775","endLine":11,"endColumn":36},{"ruleId":"772","severity":1,"message":"845","line":12,"column":10,"nodeType":"774","messageId":"775","endLine":12,"endColumn":26},{"ruleId":"772","severity":1,"message":"866","line":12,"column":100,"nodeType":"774","messageId":"775","endLine":12,"endColumn":112},{"ruleId":"772","severity":1,"message":"933","line":12,"column":114,"nodeType":"774","messageId":"775","endLine":12,"endColumn":129},{"ruleId":"772","severity":1,"message":"958","line":14,"column":10,"nodeType":"774","messageId":"775","endLine":14,"endColumn":24},{"ruleId":"772","severity":1,"message":"959","line":14,"column":26,"nodeType":"774","messageId":"775","endLine":14,"endColumn":36},{"ruleId":"772","severity":1,"message":"960","line":14,"column":38,"nodeType":"774","messageId":"775","endLine":14,"endColumn":48},{"ruleId":"772","severity":1,"message":"961","line":14,"column":50,"nodeType":"774","messageId":"775","endLine":14,"endColumn":62},{"ruleId":"772","severity":1,"message":"962","line":15,"column":10,"nodeType":"774","messageId":"775","endLine":15,"endColumn":18},{"ruleId":"772","severity":1,"message":"1025","line":68,"column":36,"nodeType":"774","messageId":"775","endLine":68,"endColumn":54},{"ruleId":"830","severity":1,"message":"831","line":86,"column":64,"nodeType":"832","messageId":"833","endLine":86,"endColumn":66},{"ruleId":"772","severity":1,"message":"939","line":185,"column":11,"nodeType":"774","messageId":"775","endLine":185,"endColumn":21},{"ruleId":"772","severity":1,"message":"967","line":191,"column":11,"nodeType":"774","messageId":"775","endLine":191,"endColumn":23},{"ruleId":"772","severity":1,"message":"968","line":206,"column":11,"nodeType":"774","messageId":"775","endLine":206,"endColumn":20},{"ruleId":"772","severity":1,"message":"969","line":221,"column":11,"nodeType":"774","messageId":"775","endLine":221,"endColumn":25},{"ruleId":"772","severity":1,"message":"875","line":237,"column":11,"nodeType":"774","messageId":"775","endLine":237,"endColumn":20},{"ruleId":"772","severity":1,"message":"970","line":238,"column":11,"nodeType":"774","messageId":"775","endLine":238,"endColumn":32},"@typescript-eslint/no-unused-vars","'Customizer' is defined but never used.","Identifier","unusedVar","'AUTH_TOKEN' is defined but never used.","'resolvers' is defined but never used.","'InMemoryCache' is defined but never used.","'gql' is defined but never used.","'ApolloLink' is defined but never used.","'useQuery' is defined but never used.","no-native-reassign",["1026"],"no-negated-in-lhs",["1027"],"'ResolverMap' is defined but never used.","'AppResolvers' is defined but never used.","'logo' is defined but never used.","'Text' is defined but never used.","'Link' is defined but never used.","'FontWeights' is defined but never used.","'IComboBox' is defined but never used.","'SelectedPropertyList' is defined but never used.","'useApolloClient' is defined but never used.","'PDFViewer' is defined but never used.","'PDFDownloadLink' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'cl' is assigned a value but never used.","'suburbLoading' is assigned a value but never used.","'suburbError' is assigned a value but never used.","'regionLoading' is assigned a value but never used.","'regionError' is assigned a value but never used.","'navigationError' is assigned a value but never used.","'pdfLoading' is assigned a value but never used.","'pdfError' is assigned a value but never used.","'propertyListLoading' is assigned a value but never used.","'propertyListError' is assigned a value but never used.","'landlordLoading' is assigned a value but never used.","'landlordError' is assigned a value but never used.","'propertyListsLoading' is assigned a value but never used.","'propertyListsError' is assigned a value but never used.","'TextField' is defined but never used.","'getTheme' is defined but never used.","'mergeStyleSets' is defined but never used.","'ContextualMenu' is defined but never used.","'DefaultButton' is defined but never used.","'PrimaryButton' is defined but never used.","'IconButton' is defined but never used.","'textFieldStyles' is assigned a value but never used.","'primaryButtonStyles' is assigned a value but never used.","'signInIcon' is assigned a value but never used.","'Image' is defined but never used.","'ImageFit' is defined but never used.","'Icon' is defined but never used.","'Checkbox' is defined but never used.","'ICheckboxProps' is defined but never used.","'Property' is defined but never used.","'selectedPropertyList' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Pivot' is defined but never used.","'IContextualMenuProps' is defined but never used.","'Toggle' is defined but never used.","'isLoggedInVar' is defined but never used.","'NavigationState' is defined but never used.","'pivotStyles' is assigned a value but never used.","'toggleStyles' is assigned a value but never used.","'signoutIcon' is assigned a value but never used.","'getTabId' is assigned a value but never used.","'handleLinkClick' is assigned a value but never used.","'onChangeSelectedPropertyListToggle' is assigned a value but never used.","'CommandBarButton' is defined but never used.","'GET_SELECTED_PROPERTIES' is defined but never used.","'GET_NAV_STATE' is defined but never used.","'GET_DISTINCT_SUBURBS' is defined but never used.","'GET_DISTINCT_REGIONS' is defined but never used.","'UPDATE_IMAGES' is defined but never used.","'QueryMultiPropertyArgs' is defined but never used.","'Premises' is defined but never used.","'Agent' is defined but never used.","'PropertyList' is defined but never used.","'BlobProvider' is defined but never used.","'PreviewPDFPanel' is defined but never used.","'Modal' is defined but never used.","'IDragOptions' is defined but never used.","'IModalStyles' is defined but never used.","'mergeStyles' is defined but never used.","'ComboBox' is defined but never used.","'Fabric' is defined but never used.","'IComboBoxOption' is defined but never used.","'SelectableOptionMenuItemType' is defined but never used.","'IComboBoxStyles' is defined but never used.","'IStackStyles' is defined but never used.","'SelectedPropertyListPDF' is defined but never used.","'propertyListDataLoading' is assigned a value but never used.","'propertyListDataError' is assigned a value but never used.","'postPropertyListData' is assigned a value but never used.","'handlePDFDDownload' is assigned a value but never used.","'addIcon' is assigned a value but never used.","'editIcon' is assigned a value but never used.","'commandBarStyles' is assigned a value but never used.","'boldStyle' is assigned a value but never used.","'propertyDetailsStyles' is assigned a value but never used.","'boldStyle2' is assigned a value but never used.","'propertyDetailsHeadingStyles' is assigned a value but never used.","'propertyNotesStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'cancelIcon' and 'cancelIconStyles'. Either include them or remove the dependency array.","ArrayExpression",["1028"],"React Hook React.useCallback has missing dependencies: 'agentOptions', 'buttonStyles', 'dropdownStyles', 'handlePreviewPDF', 'menuPropsPDF', 'onChangeEnquiryName', 'postPropertyListButton', 'saveListButtonStyles', 'selectedAgent', 'textFieldStyles', and 'toggleIsOutputOptionsCalloutVisible'. Either include them or remove the dependency array.",["1029"],"'Dropdown' is defined but never used.","'IDropdownOption' is defined but never used.","'useBoolean' is defined but never used.","'useMutation' is defined but never used.","'Mutation' is defined but never used.","'MutationUpdatePropertyArgs' is defined but never used.","'selectedPropertyListVar' is defined but never used.","'IToggleStyles' is defined but never used.","'deleteIcon' is assigned a value but never used.",["1030"],"'propertyError' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'openPanel' is assigned a value but never used.","'dismissPanel' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook React.useCallback has missing dependencies: 'cancelIcon', 'deleteIconStyles', 'editIcon', and 'editIconStyles'. Either include them or remove the dependency array.",["1031"],"'getLatitude' is assigned a value but never used.","'getLongitude' is assigned a value but never used.","'data' is assigned a value but never used.","'GET_SINGLE_PROPERTY' is defined but never used.","React Hook React.useCallback has an unnecessary dependency: 'addLandlordName'. Either exclude it or remove the dependency array.",["1032"],"'photoCollectionIcon' is assigned a value but never used.","'propertyDetailsLandlordStyles' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'addIcon', 'addIconStyles', 'cancelIcon', 'deleteIconStyles', and 'toggleIsAddCalloutVisible'. Either include them or remove the dependency array.",["1033"],"'useState' is defined but never used.","'DropdownMenuItemType' is defined but never used.","'Slider' is defined but never used.","'GET_LANDLORDS' is defined but never used.","'dragOptions' is assigned a value but never used.","'dropdownSectorStyles' is assigned a value but never used.","React Hook React.useCallback has an unnecessary dependency: 'selectedLandlord'. Either exclude it or remove the dependency array.",["1034"],["1035"],"'FocusTrapCallout' is defined but never used.","'FocusZone' is defined but never used.","'NEW_LANDLORD' is defined but never used.","'MutationPostLandlordArgs' is defined but never used.","'Query' is defined but never used.","'Landlord' is defined but never used.","'addIconStyles' is assigned a value but never used.","'styles' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'cancelIcon' and 'deleteIconStyles'. Either include them or remove the dependency array.",["1036"],"'initializeIcons' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'property'. Either include it or remove the dependency array.",["1037"],"'deletePropertyData' is assigned a value but never used.","'imageClass' is assigned a value but never used.","'GET_PROPERTIES' is defined but never used.","'NEW_PROPERTY' is defined but never used.",["1038"],["1039"],"'deleteLandlordData' is assigned a value but never used.","'updateLandlordData' is assigned a value but never used.","React Hook React.useCallback has an unnecessary dependency: 'editLandlordName'. Either exclude it or remove the dependency array.",["1040"],"'MutationPostPropertyListArgs' is defined but never used.","'NEW_PROPERTY_LIST' is defined but never used.","'ContactListItem' is defined but never used.","'deletePropertyListData' is assigned a value but never used.","'updatePropertyListData' is assigned a value but never used.","'textFieldContactStyles' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'editPropertyList'. Either include it or remove the dependency array. You can also do a functional update 'setEditPropertyList(e => ...)' if you only need 'editPropertyList' in the 'setEditPropertyList' call.",["1041"],"'DELETE_PROPERTY' is defined but never used.","'registerIcons' is defined but never used.","'IndustrialIcon' is defined but never used.","'RetailIcon' is defined but never used.","'OfficeIcon' is defined but never used.","'MixedUseIcon' is defined but never used.","'FontIcon' is defined but never used.","'navigationState' is defined but never used.","'motion' is defined but never used.","'AnimatePresence' is defined but never used.","'deleteLandlordContactData' is assigned a value but never used.","'chevronClass' is assigned a value but never used.","'iconClass' is assigned a value but never used.","'chevronIconDiv' is assigned a value but never used.","'propertyHeadingStyles' is assigned a value but never used.","'IRenderFunction' is defined but never used.","'ICalendarProps' is defined but never used.","'defaultDataIdFromObject' is defined but never used.","'propertyLoading' is assigned a value but never used.","'today' is assigned a value but never used.","'textFieldCoordinatesStyles' is assigned a value but never used.","'textFieldErfStyles' is assigned a value but never used.","'dropdownProvinceStyles' is assigned a value but never used.","'comboBoxStyles' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'getOpenRatio'. Either include it or remove the dependency array.",["1042"],"React Hook React.useCallback has a missing dependency: 'getOpenBays'. Either include it or remove the dependency array.",["1043"],"React Hook React.useCallback has a missing dependency: 'getCoveredRatio'. Either include it or remove the dependency array.",["1044"],"React Hook React.useCallback has a missing dependency: 'getCoveredBays'. Either include it or remove the dependency array.",["1045"],"React Hook React.useCallback has a missing dependency: 'getShadedRatio'. Either include it or remove the dependency array.",["1046"],"React Hook React.useCallback has a missing dependency: 'getShadedBays'. Either include it or remove the dependency array.",["1047"],"'ILayerProps' is defined but never used.","'IModalProps' is defined but never used.","'Maybe' is defined but never used.",["1048"],["1049"],["1050"],["1051"],["1052"],["1053"],["1054"],["1055"],["1056"],["1057"],["1058"],["1059"],"'isModalOpen' is assigned a value but never used.","'showModal' is assigned a value but never used.","'modalProps' is assigned a value but never used.","'tableCellBelowStyles' is assigned a value but never used.","'useEffect' is defined but never used.","'navigationStateVar' is defined but never used.","'Video' is defined but never used.","'Transformation' is defined but never used.","'CloudinaryContext' is defined but never used.","@typescript-eslint/no-redeclare","'rest' is already defined.","redeclared","'final' is already defined.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'GET_PREMISES' is defined but never used.","'deletePremisesData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1060","fix":"1064"},{"desc":"1065","fix":"1066"},{"desc":"1067","fix":"1068"},{"desc":"1069","fix":"1070"},{"desc":"1067","fix":"1071"},{"desc":"1067","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1067","fix":"1077"},{"desc":"1067","fix":"1078"},{"desc":"1067","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1082","fix":"1083"},{"desc":"1084","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1094","fix":"1095"},{"desc":"1096","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1100","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},"Update the dependencies array to be: [cancelIcon, cancelIconStyles]",{"range":"1118","text":"1119"},"Update the dependencies array to be: [agentOptions, buttonStyles, dropdownStyles, enquiryName, handlePreviewPDF, menuPropsPDF, onChangeEnquiryName, postPropertyListButton, saveListButtonStyles, selectedAgent, textFieldStyles, toggleIsOutputOptionsCalloutVisible]",{"range":"1120","text":"1121"},{"range":"1122","text":"1119"},"Update the dependencies array to be: [cancelIcon, deleteIconStyles, editIcon, editIconStyles]",{"range":"1123","text":"1124"},"Update the dependencies array to be: []",{"range":"1125","text":"1126"},"Update the dependencies array to be: [addIcon, addIconStyles, cancelIcon, deleteIconStyles, toggleIsAddCalloutVisible]",{"range":"1127","text":"1128"},{"range":"1129","text":"1126"},{"range":"1130","text":"1126"},"Update the dependencies array to be: [cancelIcon, deleteIconStyles]",{"range":"1131","text":"1132"},"Update the dependencies array to be: [property, selectedProperties]",{"range":"1133","text":"1134"},{"range":"1135","text":"1126"},{"range":"1136","text":"1126"},{"range":"1137","text":"1126"},"Update the dependencies array to be: [editPropertyList]",{"range":"1138","text":"1139"},"Update the dependencies array to be: [duplicatedPremises, getOpenRatio]",{"range":"1140","text":"1141"},"Update the dependencies array to be: [duplicatedPremises, getOpenBays]",{"range":"1142","text":"1143"},"Update the dependencies array to be: [duplicatedPremises, getCoveredRatio]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [duplicatedPremises, getCoveredBays]",{"range":"1146","text":"1147"},"Update the dependencies array to be: [duplicatedPremises, getShadedRatio]",{"range":"1148","text":"1149"},"Update the dependencies array to be: [duplicatedPremises, getShadedBays]",{"range":"1150","text":"1151"},"Update the dependencies array to be: [getOpenRatio, updatedPremises]",{"range":"1152","text":"1153"},"Update the dependencies array to be: [getOpenBays, updatedPremises]",{"range":"1154","text":"1155"},"Update the dependencies array to be: [getCoveredRatio, updatedPremises]",{"range":"1156","text":"1157"},"Update the dependencies array to be: [getCoveredBays, updatedPremises]",{"range":"1158","text":"1159"},"Update the dependencies array to be: [getShadedRatio, updatedPremises]",{"range":"1160","text":"1161"},"Update the dependencies array to be: [getShadedBays, updatedPremises]",{"range":"1162","text":"1163"},"Update the dependencies array to be: [getOpenRatio, newPremises]",{"range":"1164","text":"1165"},"Update the dependencies array to be: [getOpenBays, newPremises]",{"range":"1166","text":"1167"},"Update the dependencies array to be: [getCoveredRatio, newPremises]",{"range":"1168","text":"1169"},"Update the dependencies array to be: [getCoveredBays, newPremises]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [getShadedRatio, newPremises]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [getShadedBays, newPremises]",{"range":"1174","text":"1175"},[15853,15855],"[cancelIcon, cancelIconStyles]",[19414,19427],"[agentOptions, buttonStyles, dropdownStyles, enquiryName, handlePreviewPDF, menuPropsPDF, onChangeEnquiryName, postPropertyListButton, saveListButtonStyles, selectedAgent, textFieldStyles, toggleIsOutputOptionsCalloutVisible]",[5778,5780],[9166,9168],"[cancelIcon, deleteIconStyles, editIcon, editIconStyles]",[3267,3284],"[]",[7888,7890],"[addIcon, addIconStyles, cancelIcon, deleteIconStyles, toggleIsAddCalloutVisible]",[11769,11787],[12578,12596],[6143,6145],"[cancelIcon, deleteIconStyles]",[2389,2409],"[property, selectedProperties]",[12785,12803],[13605,13623],[9314,9332],[10468,10489],"[editPropertyList]",[18222,18242],"[duplicatedPremises, getOpenRatio]",[18874,18894],"[duplicatedPremises, getOpenBays]",[19235,19255],"[duplicatedPremises, getCoveredRatio]",[19903,19923],"[duplicatedPremises, getCoveredBays]",[20260,20280],"[duplicatedPremises, getShadedRatio]",[20922,20942],"[duplicatedPremises, getShadedBays]",[18433,18450],"[getOpenRatio, updatedPremises]",[19067,19084],"[getOpenBays, updatedPremises]",[19419,19436],"[getCoveredRatio, updatedPremises]",[20069,20086],"[getCoveredBays, updatedPremises]",[20417,20434],"[getShadedRatio, updatedPremises]",[21061,21078],"[getShadedBays, updatedPremises]",[16657,16670],"[getOpenRatio, newPremises]",[17270,17283],"[getOpenBays, newPremises]",[17611,17624],"[getCoveredRatio, newPremises]",[18237,18250],"[getCoveredBays, newPremises]",[18574,18587],"[getShadedRatio, newPremises]",[19194,19207],"[getShadedBays, newPremises]"]
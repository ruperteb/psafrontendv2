[{"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\index.tsx":"1","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\reportWebVitals.ts":"2","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\App.tsx":"3","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\resolvers.tsx":"4","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\cache\\cache.tsx":"5","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PropertyList.tsx":"6","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\Navigation.tsx":"7","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\Loading.tsx":"8","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\gql\\gql.tsx":"9","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\SelectedPropertyPanel.tsx":"10","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\NewPropertyModal.tsx":"11","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\reactivevariables\\reactivevariables.tsx":"12","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PreviewPDFPanel.tsx":"13","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\SelectedPropertyListPanel.tsx":"14","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\DuplicatePremisesModal.tsx":"15","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\UpdatePremisesModal.tsx":"16","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\UpdatePropertyModal.tsx":"17","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PDFOutput\\PropertyListLargeImagesPDF.tsx":"18","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\NewPremisesModal.tsx":"19","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PremisesNotesModal.tsx":"20","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PremisesList.tsx":"21","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\ImageGalleryModal.tsx":"22","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\Map.tsx":"23","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PropertyListItem.tsx":"24","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\assets\\svgIcons.js":"25","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\assets\\pin.js":"26","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PremisesListItem.tsx":"27","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\ImageSlider.tsx":"28"},{"size":1453,"mtime":1608641103063,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":9438,"mtime":1611771910493,"results":"32","hashOfConfig":"30"},{"size":466,"mtime":1608629691275,"results":"33","hashOfConfig":"30"},{"size":1402,"mtime":1610474111467,"results":"34","hashOfConfig":"30"},{"size":1927,"mtime":1610117154345,"results":"35","hashOfConfig":"30"},{"size":6038,"mtime":1610178901820,"results":"36","hashOfConfig":"30"},{"size":2514,"mtime":1608636235276,"results":"37","hashOfConfig":"30"},{"size":12297,"mtime":1611778724529,"results":"38","hashOfConfig":"30"},{"size":34348,"mtime":1611779569192,"results":"39","hashOfConfig":"30"},{"size":25870,"mtime":1611778163845,"results":"40","hashOfConfig":"30"},{"size":1251,"mtime":1610473934845,"results":"41","hashOfConfig":"30"},{"size":6784,"mtime":1611482420888,"results":"42","hashOfConfig":"30"},{"size":13358,"mtime":1611481342922,"results":"43","hashOfConfig":"30"},{"size":42028,"mtime":1610092491737,"results":"44","hashOfConfig":"30"},{"size":41860,"mtime":1609945221278,"results":"45","hashOfConfig":"30"},{"size":19771,"mtime":1611765162842,"results":"46","hashOfConfig":"30"},{"size":39729,"mtime":1611519198444,"results":"47","hashOfConfig":"30"},{"size":38826,"mtime":1611764130040,"results":"48","hashOfConfig":"30"},{"size":5877,"mtime":1609945367913,"results":"49","hashOfConfig":"30"},{"size":13017,"mtime":1610117234889,"results":"50","hashOfConfig":"30"},{"size":3813,"mtime":1609501155635,"results":"51","hashOfConfig":"30"},{"size":6468,"mtime":1609445266194,"results":"52","hashOfConfig":"30"},{"size":10426,"mtime":1610120689590,"results":"53","hashOfConfig":"30"},{"size":18904,"mtime":1609075640674,"results":"54","hashOfConfig":"30"},{"size":657,"mtime":1609328772225,"results":"55","hashOfConfig":"30"},{"size":17764,"mtime":1610117210827,"results":"56","hashOfConfig":"30"},{"size":16758,"mtime":1611521484862,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"12t0a0m",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"61"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"61"},"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\index.tsx",["133","134","135","136","137","138","139"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\n\nimport { AUTH_TOKEN } from './constants'\nimport { resolvers, typeDefs } from './resolvers';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  gql,\n  NormalizedCacheObject,\n  ApolloProvider,\n  ApolloLink,\n  HttpLink, useQuery\n} from '@apollo/client';\n\n\nimport { cache } from './cache/cache';\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link: new HttpLink({\n    uri: \"https://psabackendv2.herokuapp.com/\",\n    credentials: 'include',\n    headers: {\n      authorization: localStorage.getItem('token'),\n    },\n   /*  fetchOptions: {\n      mode: 'no-cors',\n    }, */\n  }),\n \n  typeDefs,\n  resolvers: {},\n\n\n  \n});\n\n\n\n// Inject some global styles\nmergeStyles({\n  selectors: {\n    ':global(body), :global(html), :global(#root)': {\n      margin: 0,\n      padding: 0,\n      height: '100vh'\n    }\n  }\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["140","141"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\reportWebVitals.ts",[],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\App.tsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\resolvers.tsx",["166","167"],"import { gql, ApolloCache, Resolvers } from '@apollo/client';\r\n\r\n\r\nexport const typeDefs = gql`\r\n  extend type Query {\r\n    isLoggedIn: Boolean!\r\n    \r\n  }\r\n`;\r\n\r\ntype ResolverFn = (\r\n  parent: any,\r\n  args: any,\r\n  { cache } : { cache: ApolloCache<any> }\r\n) => any;\r\n\r\ninterface ResolverMap {\r\n  [field: string]: ResolverFn;\r\n}\r\n\r\ninterface AppResolvers extends Resolvers {\r\n  // We will update this with our app's resolvers later\r\n}\r\n\r\nexport const resolvers = {};","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\cache\\cache.tsx",[],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PropertyList.tsx",["168","169","170","171","172","173","174","175","176","177","178","179"],"import * as React from 'react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport {Query, Property} from \"../schematypes/schematypes\"\r\nimport {useQuery  } from '@apollo/client';\r\nimport {selectedPropertyList} from \"../reactivevariables/reactivevariables\"\r\nimport PropertyListItem from \"./PropertyListItem\"\r\n\r\n\r\n\r\n\r\n\r\n  \r\n    \r\n\r\ninterface Props {\r\npropertyData: Query | undefined\r\n}\r\n\r\nexport const PropertyList: React.FunctionComponent<Props> = ({  propertyData }) => {\r\n\r\n   \r\n\r\n\r\n\r\n  var originalPropertyData = propertyData\r\n  var originalProperties = originalPropertyData!.properties!\r\n\r\n  var nameSortedProperties = originalProperties.slice().sort((a, b) => {\r\n    var nameA = a.propertyName!.toUpperCase();\r\n    var nameB = b.propertyName!.toUpperCase();\r\n    if (nameA < nameB) {\r\n        return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n});\r\n\r\n  var selectedMap = originalProperties.map(property => {\r\nreturn ({...property, isSelected: false})\r\n  })\r\n\r\n  var selectedMap2 = selectedMap\r\n  /* if(propertyData!.properties! !== null && propertyData!.properties !== undefined) {\r\n    originalProperties = propertyData!.properties!\r\n  } */\r\n  const [properties, setProperties] = React.useState(originalProperties!);\r\n\r\n\r\n\r\n  /* const onFilterChanged = (_: any, text: string): void => {\r\n    setItems(originalItems.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0));\r\n  }; */\r\n\r\n  return (\r\n      <div>\r\n{nameSortedProperties.map(property => {\r\n\r\n    return (  \r\n        <PropertyListItem key={property?.propertyId} property={property!}> </PropertyListItem>\r\n    )\r\n\r\n})}\r\n\r\n      </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default PropertyList","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\Navigation.tsx",["180","181","182","183","184","185","186","187","188","189"],"import React from 'react';\r\n\r\nimport { Pivot, PivotItem, IPivotStyles } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { SearchBox, ISearchBoxStyles, } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { Image, IImageProps, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\n\r\nimport { CommandBarButton, IContextualMenuProps, IIconProps, Stack, IStackStyles, initializeIcons, Toggle, IToggleStyles, DefaultButton, IButtonStyles } from 'office-ui-fabric-react';\r\n\r\nimport { isLoggedInVar } from \"../cache/cache\";\r\nimport HeaderImage from \"../assets/EBLogoHeader.png\"\r\n\r\nimport {navigationState} from \"../reactivevariables/reactivevariables\"\r\nimport {NavigationState} from \"../schematypes/schematypes\"\r\n\r\nconst addIcon: IIconProps = { iconName: 'Add' };\r\n\r\nconst filterIcon: IIconProps = { iconName: 'Filter' };\r\n\r\nconst pivotStyles: Partial<IPivotStyles> = {\r\n  root: { /* width: \"100vw\", backgroundColor: \"#20314b\", marginBottom: \"10px\" */ },\r\n   link: {\r\n    selectors: {\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(52, 90, 214, 0.14);',\r\n      }\r\n    }\r\n  }, \r\n  linkIsSelected: {\r\n    selectors: {\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(52, 90, 214, 0.14);',\r\n      }\r\n    }\r\n  }\r\n};\r\nconst headerStackStyles: Partial<IStackStyles> = { root: { width: \"100vw\", backgroundColor: \"#20314b\", marginBottom: \"10px\" } };\r\nconst headerImageStyles: Partial<IStackStyles> = { root: { marginLeft: \"37.5%\", marginRight: \"auto\" } };\r\nconst stackStyles: Partial<IStackStyles> = { root: { height: 44 } };\r\nconst searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 300, height: 44 } };\r\nconst toggleStyles: Partial<IToggleStyles> = { container: { marginTop: 5 }, label: { marginLeft: 4 } };\r\nconst commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\" } };\r\nconst signoutIcon: IIconProps = { iconName: 'SignOut' };\r\n\r\nconst getTabId = (itemKey: string | undefined) => {\r\n  return `NavigationPivot_${itemKey}`;\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n  \r\n  selectedPropertyType: string | undefined,\r\n  setSearch: React.Dispatch<React.SetStateAction<string | undefined>>,\r\n  showSelectedPropertyListPanel: boolean,\r\n\r\n}\r\n\r\nexport const Navigation: React.FC<Props> = ({  selectedPropertyType,  setSearch,  showSelectedPropertyListPanel }) => {\r\n  initializeIcons();\r\n\r\n\r\n\r\n  const handleLinkClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n    if (item === undefined) {\r\n      navigationState (\r\n        {\r\n         ...navigationState(),\r\n        selectedPropertyType: \"\",\r\n       \r\n        }\r\n      )\r\n    } else {\r\n      \r\n      navigationState ( {...navigationState(), selectedPropertyType: item.props.itemKey!})\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeSelectedPropertyListToggle = (ev: React.MouseEvent<HTMLElement>, checked: boolean | undefined) => {\r\n    if (showSelectedPropertyListPanel === false) {\r\n      navigationState ( {...navigationState(), showSelectedPropertyListPanel: true})\r\n     \r\n    } else {\r\n      navigationState ( {...navigationState(), showSelectedPropertyListPanel: false})\r\n    }\r\n\r\n  }\r\n\r\n  const imageProps: IImageProps = {\r\n    src: HeaderImage,\r\n    imageFit: ImageFit.contain,\r\n  };\r\n\r\n  const primaryButtonStyles: Partial<IButtonStyles> = { root: { width: 100, marginTop: 30, marginRight: 30 } };\r\n\r\n  return (\r\n    <div>\r\n      <Stack styles={headerStackStyles} horizontal>\r\n        <Image\r\n          {...imageProps}\r\n          alt='Header Image'\r\n          width={400}\r\n          height={100}\r\n          styles={headerImageStyles}\r\n        />\r\n\r\n        {/* <DefaultButton styles={primaryButtonStyles} iconProps={signoutIcon} text=\"Logout\" onClick={() => {\r\n          localStorage.clear();\r\n          isLoggedInVar(false);\r\n          setLoginCallback(true)\r\n\r\n        }}></DefaultButton> */}\r\n\r\n      </Stack>\r\n\r\n\r\n      <Stack horizontalAlign={\"center\"} horizontal gap={15} styles={stackStyles} >\r\n        <CommandBarButton\r\n          iconProps={addIcon}\r\n          text=\"New Property\"\r\n          onClick={() =>navigationState ( {...navigationState(), showNewPropertyModal: true})}\r\n          styles={commandBarStyles}\r\n        // Set split=true to render a SplitButton instead of a regular button with a menu\r\n        // split={true}\r\n\r\n        />\r\n\r\n        <CommandBarButton\r\n          iconProps={filterIcon}\r\n          text=\"Filter\"\r\n          onClick={() => navigationState ( {...navigationState(), showFilterModal: true})}\r\n          styles={commandBarStyles}\r\n        // Set split=true to render a SplitButton instead of a regular button with a menu\r\n        // split={true}\r\n\r\n        />\r\n\r\n        <SearchBox\r\n          styles={searchBoxStyles}\r\n          placeholder=\"Search\"\r\n          onEscape={ev => {\r\n            console.log('Custom onEscape Called');\r\n          }}\r\n          onClear={ev => {\r\n            console.log('Custom onClear Called');\r\n          }}\r\n          onChange={(newValue: any) => setSearch(newValue)}\r\n          onSearch={newValue => console.log('SearchBox onSearch fired: ' + newValue)}\r\n        />\r\n\r\n        <Toggle inlineLabel styles={toggleStyles} label=\"Selected Properties\" checked={showSelectedPropertyListPanel} onChange={onChangeSelectedPropertyListToggle} />\r\n\r\n\r\n\r\n      </Stack >\r\n\r\n\r\n      {/* <Pivot\r\n        aria-label=\"Navigation Pivot\"\r\n        selectedKey={selectedPropertyType}\r\n        // eslint-disable-next-line react/jsx-no-bind\r\n        onLinkClick={handleLinkClick}\r\n        headersOnly={true}\r\n        getTabId={getTabId}\r\n        style={{ marginTop: \"10px\" }}\r\n        styles={pivotStyles}\r\n      >\r\n        <PivotItem headerText=\"All Investors\" itemKey=\"all\" />\r\n        <PivotItem headerText=\"Listed Funds\" itemKey=\"listed\" />\r\n        <PivotItem headerText=\"Unlisted Funds\" itemKey=\"unlisted\" />\r\n        <PivotItem headerText=\"Private Investors\" itemKey=\"private\" />\r\n        <PivotItem headerText=\"BEE Funds\" itemKey=\"bee\" />\r\n        <PivotItem headerText=\"Filtered List\" itemKey=\"multifilter\" />\r\n      </Pivot> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\Loading.tsx",["190","191","192","193","194","195","196","197","198","199","200","201"],"import React, { memo } from 'react';\r\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, IImageProps, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport HeaderImage from \"../assets/EBLogoHeader.png\"\r\nimport { IStackStyles, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport {\r\n  getTheme,\r\n  mergeStyleSets,\r\n  FontWeights,\r\n  ContextualMenu,\r\n  Text,\r\n  DefaultButton,\r\n  IButtonStyles,\r\n  PrimaryButton,\r\n  IconButton,\r\n  IIconProps,\r\n\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\nconst headerStackStyles: Partial<IStackStyles> = { root: { width: \"100vw\", backgroundColor: \"#20314b\", marginBottom: \"10px\" } };\r\nconst headerImageStyles: Partial<IStackStyles> = { root: { marginLeft: \"auto\", marginRight: \"auto\" } };\r\nconst textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 250 } };\r\nconst primaryButtonStyles: Partial<IButtonStyles> = { root: { /* width: 150, */ marginTop: \"20px !important\" } };\r\nconst signInIcon: IIconProps = { iconName: 'SignIn' };\r\n\r\nconst imageProps: IImageProps = {\r\n  src: HeaderImage,\r\n  imageFit: ImageFit.contain,\r\n};\r\n\r\nexport const Loading: React.FC = memo(() => {\r\n\r\n\r\n  return (\r\n    <Stack\r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"start\"\r\n      verticalFill\r\n      styles={{\r\n        root: {\r\n          /*  width: '960px', */\r\n          margin: '0 auto',\r\n          textAlign: 'center',\r\n          color: '#605e5c',\r\n         /*  backgroundColor: \"rgba(177, 140, 72, 0.1);\" */\r\n\r\n        }\r\n      }}\r\n      gap={15}>\r\n\r\n      <Stack styles={headerStackStyles} horizontal>\r\n        <Image\r\n          {...imageProps}\r\n          alt='Header Image'\r\n          width={400}\r\n          height={100}\r\n          styles={headerImageStyles}\r\n        />\r\n\r\n\r\n      </Stack>\r\n\r\n      <Stack \r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"start\"\r\n      \r\n      styles={{\r\n        root: {\r\n          /*  width: '960px', */\r\n          margin: '0 auto',\r\n          textAlign: 'center',\r\n         /*  color: 'white',\r\n          backgroundColor:\"white\",\r\n          border: \"1px solid rgb(138, 136, 134)\",\r\n          boxShadow: \"2px 3px 11px 7px #00000026\", */\r\n          padding: \"30px\",\r\n          marginTop: \"75px !important\",\r\n\r\n        }\r\n      }}>\r\n\r\n\r\n       \r\n<Spinner styles={{circle: {width: 80, height: 80}}} size={SpinnerSize.large} />\r\n\r\n\r\n      </Stack>\r\n\r\n    </Stack>\r\n\r\n  )\r\n\r\n\r\n\r\n})\r\n\r\nexport default Loading","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\gql\\gql.tsx",[],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\SelectedPropertyPanel.tsx",["202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\NewPropertyModal.tsx",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\reactivevariables\\reactivevariables.tsx",[],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PreviewPDFPanel.tsx",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles, ILayerStyleProps, ILayerStyles, ILayerProps } from 'office-ui-fabric-react';\r\nimport { Panel, PanelType, IPanelProps, IPanelStyles, IPanelStyleProps, } from 'office-ui-fabric-react/lib/Panel';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES , GET_MULTI_PROPERTY} from \"../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationUpdatePropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent } from \"../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar } from \"../reactivevariables/reactivevariables\"\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\n\r\nimport SelectedPropertyListPDF from \"./PDFOutput/SelectedPropertyListPDF\"\r\nimport PropertyListLargeImagesPDF from \"./PDFOutput/PropertyListLargeImagesPDF\"\r\nimport { PDFViewer, PDFDownloadLink, Document, Page } from '@react-pdf/renderer';\r\n\r\n\r\n\r\n\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    Stack,\r\n    Text,\r\n    IStackStyles\r\n\r\n} from 'office-ui-fabric-react';\r\n\r\n\r\n\r\ninterface Props {\r\n    showPreviewPDFPanel: boolean\r\n    enquiryName: string,\r\n    agent: Agent\r\n    propertyIdList: number[]\r\n}\r\n\r\nconst PreviewPDFPanel: React.FunctionComponent<Props> = ({ showPreviewPDFPanel, enquiryName , agent,  propertyIdList=[]}) => {\r\n\r\n/* \r\n    const {\r\n        data: propertyListData,\r\n        loading: propertyLoading,\r\n        error: propertyError\r\n    } = useQuery<Query>(GET_SELECTED_PROPERTIES);\r\n */\r\n    const {\r\n        data: propertyListData,\r\n        loading: propertyListDataLoading,\r\n        error: propertyListDataError\r\n    } = useQuery<Query>(GET_MULTI_PROPERTY, {\r\n        variables: { propertyIdList: propertyIdList  }, fetchPolicy: \"network-only\"\r\n    });\r\n\r\n\r\n\r\n    const handlePanelDismiss = () => {\r\n        navigationStateVar({ ...navigationStateVar(), showPreviewPDFPanel: false })\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    const theme = getTheme();\r\n    const cancelIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            /*   marginLeft: \"10px !important\",\r\n              marginTop: '4px',\r\n              marginRight: '2px', */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n    const addIcon: IIconProps = { iconName: 'Add' };\r\n    const editIcon: IIconProps = { iconName: 'Edit' };\r\n    const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n    const commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\", padding: 10 } };\r\n    const panelStyles: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles> = {\r\n        /*   root: {}, */\r\n        navigation: {\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 24,\r\n            paddingRight: 24,\r\n            paddingTop: 20\r\n        },\r\n        header: {},\r\n        headerText: { fontSize: 24, marginLeft: 5 },\r\n\r\n    }\r\n\r\n    const layerStyles: IStyleFunctionOrObject<ILayerStyleProps, ILayerStyles> = {\r\n        root: { zIndex: 50000 },\r\n    }\r\n\r\n    const layerProps: ILayerProps = {\r\n        styles: layerStyles\r\n    }\r\n\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n\r\n    const boldStyle2 = { root: { fontWeight: FontWeights.bold } };\r\n    const propertyDetailsHeadingStyles = { /* alignSelf: \"start\", */ fontSize: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10, marginBottom: 10 }\r\n    const propertyNotesStyles = { alignSelf: \"start\", fontSize: \"16px\", paddingLeft: \"15px\", marginTop: 0 }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onRenderNavigationContent: IRenderFunction<IPanelProps> = React.useCallback(\r\n        (props, defaultRender) => (\r\n            <>\r\n                <IconButton\r\n                    styles={cancelIconStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close panel\"\r\n                    onClick={handlePanelDismiss}\r\n                />\r\n                {/* <IconButton\r\n                    styles={editIconStyles}\r\n                    iconProps={editIcon}\r\n                    ariaLabel=\"Edit Property Details\"\r\n                    onClick={handleEditProperty}\r\n                /> */}\r\n\r\n\r\n\r\n            </>\r\n        ),\r\n        [],\r\n    );\r\n\r\n\r\n    var selectedPropertyList: SelectedPropertyList = propertyListData?.multiProperty!\r\n\r\n    console.log(selectedPropertyList)\r\n\r\n\r\n    if (propertyListDataLoading) return <div>Loading</div>;\r\n\r\n    return (\r\n        <div>\r\n            <Panel\r\n                isOpen={showPreviewPDFPanel}\r\n                onDismiss={handlePanelDismiss}\r\n                type={PanelType.extraLarge}\r\n                onRenderNavigationContent={onRenderNavigationContent}\r\n                /* customWidth={panelType === PanelType.custom || panelType === PanelType.customNear ? '888px' : undefined} */\r\n                closeButtonAriaLabel=\"Close\"\r\n                headerText=\"Preview PDF\"\r\n                styles={panelStyles}\r\n                layerProps={layerProps}\r\n                isBlocking={false}\r\n            >\r\n\r\n                <Stack verticalFill styles={{\r\n                    root: {\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        paddingTop: 10\r\n                        /* maxWidth: \"fit-content\" */\r\n                        /*  marginTop: \"0 !important\" */\r\n                    }\r\n                }}>\r\n\r\n                    \r\n\r\n\r\n{ <div style={{height: '85vh'}}> \r\n      <PDFViewer width=\"100%\" height=\"100%\">\r\n    <PropertyListLargeImagesPDF enquiryName={enquiryName} agent={agent} selectedPropertyList={selectedPropertyList} />\r\n  </PDFViewer>\r\n\r\n      </div>}\r\n\r\n\r\n                </Stack>\r\n\r\n\r\n\r\n\r\n\r\n            </Panel>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PreviewPDFPanel\r\n\r\n","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\SelectedPropertyListPanel.tsx",["301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles, ILayerStyleProps, ILayerStyles, ILayerProps } from 'office-ui-fabric-react';\r\nimport { Panel, PanelType, IPanelProps, IPanelStyles, IPanelStyleProps, } from 'office-ui-fabric-react/lib/Panel';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES, GET_PDF_VARIABLES, GET_MULTI_PROPERTY } from \"../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, QueryMultiPropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent } from \"../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar, pdfVariables as pdfVariablesVar } from \"../reactivevariables/reactivevariables\"\r\nimport { PDFDownloadLink, BlobProvider } from '@react-pdf/renderer';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport PreviewPDFPanel from \"./PreviewPDFPanel\"\r\n\r\n\r\n\r\n\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    PrimaryButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    Stack,\r\n    Text,\r\n    IStackStyles,\r\n    TextField,\r\n    ITextFieldStyles,\r\n    IDropdownStyles\r\n\r\n} from 'office-ui-fabric-react';\r\nimport SelectedPropertyListPDF from './PDFOutput/SelectedPropertyListPDF';\r\n\r\n\r\ninterface Props {\r\n    showSelectedPropertyListPanel: boolean\r\n    propertyIdList: number[]\r\n\r\n}\r\n\r\nconst SelectedPropertyListPanel: React.FunctionComponent<Props> = ({ showSelectedPropertyListPanel, propertyIdList=[] }) => {\r\n\r\n\r\n    /* const {\r\n        data: propertyIdListData,\r\n        loading: propertyIdListLoading,\r\n        error: propertyIdListError\r\n    } = useQuery<Query>(GET_SELECTED_PROPERTIES);\r\n\r\n    var propertyIdList = propertyIdListData?.selectedPropertyList?.map((property) => {\r\n        return property.propertyId\r\n    })\r\n\r\n    console.log(propertyIdList) */\r\n\r\n    const {\r\n        data: pdfVariables,\r\n        loading: pdfLoading,\r\n        error: pdfError\r\n    } = useQuery<Query>(GET_PDF_VARIABLES);\r\n\r\n    const {\r\n        data: propertyListData,\r\n        loading: propertyListDataLoading,\r\n        error: propertyListDataError\r\n    } = useQuery<Query>(GET_MULTI_PROPERTY, {\r\n        variables: { propertyIdList: propertyIdList  },\r\n    });\r\n\r\nconsole.log(propertyListData)\r\n\r\n    const [enquiryName, setEnquiryName] = React.useState('');\r\n\r\n    const onChangeEnquiryName = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setEnquiryName(newValue || '');\r\n            /* pdfVariablesVar({ ...pdfVariablesVar(), enquiryName: (newValue || '') }) */\r\n        },\r\n        [],\r\n    );\r\n\r\n    const [selectedAgent, setSelectedAgent] = React.useState<IDropdownOption>();\r\n    /* const [selectedAgentDetails, setSelectedAgentDetails] = React.useState<Agent>(); */\r\n\r\n    const agentOptions = [\r\n\r\n        { key: 'Sean Ellis Brown', text: 'Sean Ellis Brown' },\r\n        { key: 'Mark Ellis Brown', text: 'Mark Ellis Brown' },\r\n\r\n    ]\r\n\r\n\r\n    const onChangeAgent = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined && item.key === 'Sean Ellis Brown') {\r\n            setSelectedAgent(item)\r\n            /*  setSelectedAgentDetails({name: \"Sean Ellis Brown\", mobile: \"082 4555 183\", email: \"sean@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), agent: { name: \"Sean Ellis Brown\", mobile: \"082 4555 183\", email: \"sean@ellisbrown.co.za\" } })\r\n        }\r\n        if (item !== undefined && item.key === 'Mark Ellis Brown') {\r\n            setSelectedAgent(item)\r\n            /*  setSelectedAgentDetails({name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" });  */\r\n            pdfVariablesVar({ ...pdfVariablesVar(), agent: { name: \"Mark Ellis Brown\", mobile: \"082 4555 183\", email: \"mark@ellisbrown.co.za\" } })\r\n        }\r\n    };\r\n\r\n\r\n    const handlePanelDismiss = () => {\r\n        navigationStateVar({ ...navigationStateVar(), showSelectedPropertyListPanel: false })\r\n\r\n    }\r\n\r\n    const handleRemoveProperty = (propertyId: number) => {\r\n        var updatedPropertyList = propertyListData!.multiProperty!.filter(property => {\r\n            return property.propertyId !== propertyId\r\n        })\r\n        selectedPropertyListVar(updatedPropertyList)\r\n\r\n    }\r\n\r\n    const handlePreviewPDF = () => {\r\n        pdfVariablesVar({ ...pdfVariablesVar(), enquiryName: (enquiryName || '') })\r\n        navigationStateVar({ ...navigationStateVar(), showPreviewPDFPanel: true })\r\n\r\n    }\r\n\r\n    const handlePDFDDownload = () => {\r\n        pdfVariablesVar({ ...pdfVariablesVar(), enquiryName: (enquiryName || '') })\r\n        navigationStateVar({ ...navigationStateVar(), showSelectedPropertyListPanel: false })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const theme = getTheme();\r\n    const cancelIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            /*   marginLeft: \"10px !important\",\r\n              marginTop: '4px',\r\n              marginRight: '2px', */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n\r\n        }\r\n    };\r\n\r\n    const deleteIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            marginLeft: \"auto\",\r\n            marginRight: 30\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"14px\",\r\n\r\n        }\r\n    };\r\n\r\n    const cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n    const addIcon: IIconProps = { iconName: 'Add' };\r\n    const editIcon: IIconProps = { iconName: 'Edit' };\r\n    const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n    const commandBarStyles: Partial<IButtonStyles> = { root: { border: \"1px solid rgb(161, 159, 157);\", padding: 10 } };\r\n    const panelStyles: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles> = {\r\n        /*   root: {}, */\r\n        navigation: {\r\n            justifyContent: \"flex-start\",\r\n            paddingLeft: 24,\r\n            paddingRight: 24,\r\n            paddingTop: 20\r\n        },\r\n        header: {},\r\n        headerText: { fontSize: 24, marginLeft: 5 },\r\n\r\n    }\r\n\r\n    const layerStyles: IStyleFunctionOrObject<ILayerStyleProps, ILayerStyles> = {\r\n        root: { zIndex: 50000 },\r\n    }\r\n\r\n    const layerProps: ILayerProps = {\r\n        styles: layerStyles\r\n    }\r\n\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n\r\n    const boldStyle2 = { root: { fontWeight: FontWeights.bold } };\r\n    const propertyDetailsHeadingStyles = { /* alignSelf: \"start\", */ fontSize: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 10, marginBottom: 10 }\r\n    const propertyNotesStyles = { alignSelf: \"start\", fontSize: \"16px\", paddingLeft: \"15px\", marginTop: 0 }\r\n\r\n    const buttonStyles = { root: {width: 100 ,marginRight: 8, marginBottom: 0, marginTop: \"auto !important\", marginLeft: 10 } };\r\n\r\n    const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: {  marginRight: 20, marginBottom: 10, }, root: {width: \"100%\",} };\r\n\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 150, marginRight: 10 } };\r\n\r\n    const onRenderNavigationContent: IRenderFunction<IPanelProps> = React.useCallback(\r\n        (props, defaultRender) => (\r\n            <>\r\n                <IconButton\r\n                    styles={cancelIconStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close panel\"\r\n                    onClick={handlePanelDismiss}\r\n                />\r\n                {/* <IconButton\r\n                    styles={editIconStyles}\r\n                    iconProps={editIcon}\r\n                    ariaLabel=\"Edit Property Details\"\r\n                    onClick={handleEditProperty}\r\n                /> */}\r\n\r\n\r\n\r\n            </>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const onRenderFooterContent = React.useCallback(\r\n        () => (\r\n            <Stack   styles={{\r\n                root:{\r\nflexFlow: \"row wrap\",\r\nmarginBottom: 20\r\n                }\r\n            }\r\n            }>\r\n                <TextField\r\n                    label=\"Enquiry Name\"\r\n                    value={enquiryName}\r\n                    onChange={onChangeEnquiryName}\r\n\r\n                    styles={textFieldStyles}\r\n                />\r\n                <Dropdown\r\n                    label=\"Agent\"\r\n                    selectedKey={selectedAgent ? selectedAgent.key : undefined}\r\n                    // eslint-disable-next-line react/jsx-no-bind\r\n                    onChange={onChangeAgent}\r\n                    placeholder=\"Select type\"\r\n                    options={agentOptions}\r\n                    styles={dropdownStyles}\r\n                />\r\n                <PrimaryButton onClick={handlePreviewPDF} styles={buttonStyles}>\r\n                    Preview PDF\r\n            </PrimaryButton>\r\n               {/*  {<PDFDownloadLink document={<SelectedPropertyListPDF enquiryName={enquiryName} agent={pdfVariables?.pdfVariables?.agent!} selectedPropertyList={selectedPropertyList} />} fileName={`Schedule of Accomodation:${enquiryName}.pdf`}>\r\n                    {({ blob, url, loading, error }) => (loading ? 'Loading document...' : <PrimaryButton onClick={handlePDFDDownload} styles={buttonStyles}>\r\n                        PDF\r\n        </PrimaryButton>)}\r\n                </PDFDownloadLink>} */}\r\n                \r\n\r\n\r\n\r\n                {/*  <DefaultButton onClick={handlePanelDismiss}>Save</DefaultButton> */}\r\n            </Stack>\r\n        ),\r\n        [enquiryName],\r\n    );\r\n\r\n\r\n    var selectedPropertyList: SelectedPropertyList = propertyListData?.multiProperty!\r\n\r\n    \r\n\r\n    console.log(selectedPropertyList)\r\n\r\n    /* const propertyList = () =>  {\r\n\r\n       \r\n\r\n           var list=  selectedPropertyList.map(property => {\r\n                return (\r\n                    <Stack styles={{ root: { marginLeft: 10, marginTop: \"10px !important\", alignItems: \"center\" } }} horizontal>\r\n                        {property.propertyName}\r\n                        <IconButton\r\n                            styles={deleteIconStyles}\r\n                            iconProps={deleteIcon}\r\n                            ariaLabel=\"Remove Property\"\r\n                            onClick={() => handleRemoveProperty(property.propertyId)}\r\n                        />\r\n        \r\n                    </Stack>\r\n                )\r\n            })\r\n            \r\n       return list\r\n    } */\r\n\r\n   \r\n\r\n    const propertyList =  selectedPropertyList?.map(property => {\r\n             return (\r\n                 <Stack styles={{ root: { marginLeft: 10, marginTop: \"10px !important\", alignItems: \"center\" } }} horizontal>\r\n                     {property.propertyName}\r\n                     <IconButton\r\n                         styles={deleteIconStyles}\r\n                         iconProps={deleteIcon}\r\n                         ariaLabel=\"Remove Property\"\r\n                         onClick={() => handleRemoveProperty(property.propertyId)}\r\n                     />\r\n     \r\n                 </Stack>\r\n             )\r\n         })\r\n         \r\n   \r\n         /* if (propertyListDataLoading) return <div>Loading</div>; */\r\n        \r\n        \r\n      \r\n    \r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Panel\r\n                isOpen={showSelectedPropertyListPanel}\r\n                onDismiss={handlePanelDismiss}\r\n                type={PanelType.smallFixedFar}\r\n                onRenderNavigationContent={onRenderNavigationContent}\r\n                /* customWidth={panelType === PanelType.custom || panelType === PanelType.customNear ? '888px' : undefined} */\r\n                closeButtonAriaLabel=\"Close\"\r\n                headerText=\"Selected Property List\"\r\n                styles={panelStyles}\r\n                layerProps={layerProps}\r\n                isBlocking={false}\r\n                onRenderFooterContent={onRenderFooterContent}\r\n                isFooterAtBottom={true}\r\n            >\r\n\r\n                <Stack verticalFill styles={{\r\n                    root: {\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        paddingTop: 10\r\n                        /* maxWidth: \"fit-content\" */\r\n                        /*  marginTop: \"0 !important\" */\r\n                    }\r\n                }}>\r\n\r\n\r\n                    {selectedPropertyList !== undefined? propertyList : <div>loading</div>}\r\n\r\n\r\n                </Stack>\r\n\r\n\r\n\r\n\r\n\r\n            </Panel>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectedPropertyListPanel\r\n\r\n","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\DuplicatePremisesModal.tsx",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"import React, { useState } from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { IStackStyles, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    DatePicker,\r\n    DayOfWeek,\r\n    IDatePickerStrings,\r\n    IDatePickerStyleProps,\r\n    IDatePickerStyles,\r\n    ICalendarProps\r\n} from 'office-ui-fabric-react';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { defaultDataIdFromObject, gql, useMutation, useQuery } from '@apollo/client';\r\nimport { GET_SINGLE_PROPERTY, NEW_PREMISES, GET_NAV_STATE } from \"../gql/gql\"\r\nimport { Mutation, MutationPostPremisesArgs, Query, Property, Premises } from \"../schematypes/schematypes\"\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nimport \"./NewPremisesModal.css\"\r\n\r\n\r\n\r\n\r\nconst dragOptions: IDragOptions = {\r\n    moveMenuItemText: 'Move',\r\n    closeMenuItemText: 'Close',\r\n    menu: ContextualMenu,\r\n};\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\nconst saveIcon: IIconProps = { iconName: 'Save' };\r\n\r\ninterface Props {\r\n    propertyId: number;\r\n    premisesId: number\r\n    showDuplicatePremisesModal: boolean;\r\n}\r\n\r\nexport const DuplicatePremisesModal: React.FC<Props> = ({ showDuplicatePremisesModal, propertyId, premisesId }) => {\r\n\r\n    \r\n\r\n    const {\r\n        data: propertyData,\r\n        loading: propertyLoading,\r\n        error: propertyError\r\n    } = useQuery<Query>(GET_SINGLE_PROPERTY, {\r\n        variables: { propertyId: propertyId },\r\n    });\r\n\r\n    console.log(propertyId)\r\n    console.log(premisesId)\r\n\r\n\r\n    const getPremises = propertyData?.singleProperty?.premisesList!.find(premises => premises?.premisesId === premisesId);\r\n    const handlePremisesData = React.useCallback(() => {\r\n        if (getPremises !== undefined && getPremises !== null) {\r\n            return getPremises\r\n        } else {\r\n            return {\r\n                floor: \"\",\r\n                area: 0,\r\n                vacant: \"true\",\r\n                type: \"\",\r\n                premisesIndex: 0,\r\n                occupation: getNextMonth(),\r\n                premisesNotes: \"\",\r\n                netRental: 0,\r\n                opCosts: 0,\r\n                other: 0,\r\n                grossRental: 0,\r\n                esc: 0,\r\n                openBays: 0,\r\n                openRate: 0,\r\n                coveredBays: 0,\r\n                coveredRate: 0,\r\n                shadedBays: 0,\r\n                shadedRate: 0,\r\n                parkingRatio: 0,\r\n                tenantName: \"-\",\r\n                leaseExpiry: getNextMonth(),\r\n                tenantNotes: \"\",\r\n                yard: 0,\r\n                height: 0,\r\n                doors: 0,\r\n                loading: \"\",\r\n                sprinklered: \"\",\r\n                canopies: \"\",\r\n                power: \"\",\r\n\r\n            }\r\n        }\r\n    }, [getPremises])\r\n\r\n\r\n    React.useEffect(()=> {\r\nsetDuplicatedPremises(handlePremisesData)\r\nsetSelectedPremisesType({ key: handlePremisesData().type!, text: handlePremisesData().type! })\r\nsetSelectedPremisesIndex(({ key: handlePremisesData().premisesIndex!, text: String(handlePremisesData().premisesIndex!) }))\r\n\r\n    },[handlePremisesData])\r\n\r\n    \r\n   \r\n\r\n    const hideDuplicatePremisesModal = () => {\r\n        \r\n        navigationState({ ...navigationState(), showDuplicatePremisesModal: false })\r\n        \r\n    }\r\n\r\n    const getNextMonth = () => {\r\n        const date = new Date();\r\n        const today = date.getDate();\r\n        const currentMonth = date.getMonth() + 1;\r\n        const currentYear = date.getFullYear();\r\n        var newDate = new Date(currentYear, currentMonth, 1);\r\n        return newDate.toISOString()\r\n\r\n    }\r\n\r\n\r\n    const [duplicatedPremises, setDuplicatedPremises] = React.useState<Premises>(\r\n        {\r\n            floor: \"\",\r\n            area: 0,\r\n            vacant: \"true\",\r\n            type: \"\",\r\n            premisesIndex: 0,\r\n            occupation: getNextMonth(),\r\n            premisesNotes: \"\",\r\n            netRental: 0,\r\n            opCosts: 0,\r\n            other: 0,\r\n            grossRental: 0,\r\n            esc: 0,\r\n            openBays: 0,\r\n            openRate: 0,\r\n            coveredBays: 0,\r\n            coveredRate: 0,\r\n            shadedBays: 0,\r\n            shadedRate: 0,\r\n            parkingRatio: 0,\r\n            tenantName: \"-\",\r\n            leaseExpiry: getNextMonth(),\r\n            tenantNotes: \"\",\r\n            yard: 0,\r\n            height: 0,\r\n            doors: 0,\r\n            loading: \"\",\r\n            sprinklered: \"\",\r\n            canopies: \"\",\r\n            power: \"\",\r\n\r\n        });\r\n\r\n    console.log(duplicatedPremises)\r\n    \r\n\r\n    const [postPremises, { data }] = useMutation<Mutation, MutationPostPremisesArgs>(NEW_PREMISES);\r\n\r\n    const saveDuplicatedPremises = () => {\r\n\r\n        postPremises({\r\n            variables: {\r\n                propertyId: propertyId,\r\n                floor: duplicatedPremises.floor,\r\n                area: duplicatedPremises.area,\r\n                vacant: duplicatedPremises.vacant,\r\n                type: duplicatedPremises.type,\r\n                premisesIndex: duplicatedPremises.premisesIndex,\r\n                occupation: duplicatedPremises.occupation,\r\n                premisesNotes: duplicatedPremises.premisesNotes,\r\n                netRental: duplicatedPremises.netRental,\r\n                opCosts: duplicatedPremises.opCosts,\r\n                other: duplicatedPremises.other,\r\n                grossRental: duplicatedPremises.grossRental,\r\n                esc: duplicatedPremises.esc,\r\n                openBays: duplicatedPremises.openBays,\r\n                openRate: duplicatedPremises.openRate,\r\n                coveredBays: duplicatedPremises.coveredBays,\r\n                coveredRate: duplicatedPremises.coveredRate,\r\n                shadedBays: duplicatedPremises.shadedBays,\r\n                shadedRate: duplicatedPremises.shadedRate,\r\n                parkingRatio: duplicatedPremises.parkingRatio,\r\n                tenantName: duplicatedPremises.tenantName,\r\n                leaseExpiry: duplicatedPremises.leaseExpiry,\r\n                tenantNotes: duplicatedPremises.tenantNotes,\r\n                yard: duplicatedPremises.yard,\r\n                height: duplicatedPremises.height,\r\n                doors: duplicatedPremises.doors,\r\n                loading: duplicatedPremises.loading,\r\n                sprinklered: duplicatedPremises.sprinklered,\r\n                canopies: duplicatedPremises.canopies,\r\n                power: duplicatedPremises.power,\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n                const existingProperty: Property = getExistingProperty ? getExistingProperty.singleProperty! : { propertyId: 1, propertyName: \"\" };\r\n\r\n                const existingPremises = getExistingProperty ? getExistingProperty.singleProperty?.premisesList : [];\r\n                const newPremises = [...existingPremises!, data.postPremises]\r\n\r\n                const newProperty = { ...existingProperty, premisesList: newPremises }\r\n                if (existingPremises)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId },\r\n                        data: { singleProperty: newProperty }\r\n                    });\r\n            }\r\n\r\n\r\n        })\r\n        hideDuplicatePremisesModal()\r\n       \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /* const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false); */\r\n\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n\r\n\r\n    const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldFloorStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldAreaStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldEscStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldCoordinatesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldErfStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldNotesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 470 } };\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 125, marginRight: 20 } };\r\n    const dropdownSectorStyles: Partial<IDropdownStyles> = { dropdown: { width: 420, marginRight: 20 } };\r\n    const dropdownProvinceStyles: Partial<IDropdownStyles> = { dropdown: { width: 140, marginRight: 20 } };\r\n    const comboBoxStyles: Partial<IComboBoxStyles> = { root: { width: 140, marginRight: 20 } }\r\n\r\n    const toggleStyles: Partial<IToggleStyles> = { container: { marginTop: 5 }, label: { marginLeft: 4 } };\r\n    const modalStyles: Partial<IModalStyles> = { main: { position: \"absolute\", top: 150 }, };\r\n\r\n    const datePickerStyles: IStyleFunctionOrObject<IDatePickerStyleProps, IDatePickerStyles> = { root: { width: 160, marginRight: 20 }, callout: {} }\r\n\r\n    /* const calendarProps: ICalendarProps ={styles  } */\r\n\r\n\r\n\r\n    const headerIconStackStyles: Partial<IStackStyles> = { root: { marginRight: 0, marginLeft: \"auto\", } }\r\n\r\n    const DayPickerStrings: IDatePickerStrings = {\r\n        months: [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ],\r\n\r\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\r\n        shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n\r\n        goToToday: 'Go to today',\r\n        prevMonthAriaLabel: 'Go to previous month',\r\n        nextMonthAriaLabel: 'Go to next month',\r\n        prevYearAriaLabel: 'Go to previous year',\r\n        nextYearAriaLabel: 'Go to next year',\r\n        closeButtonAriaLabel: 'Close date picker',\r\n        monthPickerHeaderAriaLabel: '{0}, select to change the year',\r\n        yearPickerHeaderAriaLabel: '{0}, select to change the month',\r\n    };\r\n\r\n    const controlClass = mergeStyleSets({\r\n        control: {\r\n            margin: '0 0 15px 0',\r\n            maxWidth: '300px',\r\n        },\r\n\r\n    });\r\n\r\n    const premisesTypeOptions = [\r\n\r\n        { key: 'Office', text: 'Office' },\r\n        { key: 'Warehouse', text: 'Warehouse' },\r\n        { key: 'Retail', text: 'Retail' },\r\n        { key: 'Stores', text: 'Stores' },\r\n        { key: 'Balcony', text: 'Balcony' },\r\n    ];\r\n\r\n    const premisesIndexOptions = [\r\n\r\n        { key: 1, text: \"1\" },\r\n        { key: 2, text: \"2\" },\r\n        { key: 3, text: \"3\" },\r\n        { key: 4, text: \"4\" },\r\n        { key: 5, text: \"5\" },\r\n        { key: 6, text: \"6\" },\r\n    ];\r\n\r\n\r\n\r\n    const [selectedPremisesType, setSelectedPremisesType] = React.useState<IDropdownOption>();\r\n    const [selectedPremisesIndex, setSelectedPremisesIndex] = React.useState<IDropdownOption>();\r\n\r\nconsole.log(selectedPremisesType)\r\nconsole.log(selectedPremisesIndex)\r\n\r\n    const onChangePremisesType = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedPremisesType(item);\r\n            setDuplicatedPremises({ ...duplicatedPremises, type: item.text });\r\n        }\r\n    };\r\n\r\n    const onChangePremisesIndex = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedPremisesIndex(item);\r\n            setDuplicatedPremises({ ...duplicatedPremises, premisesIndex: parseInt(item.text) });\r\n        }\r\n    };\r\n\r\n\r\n    const stackTokens = { childrenGap: 15 };\r\n\r\n\r\n\r\n    const onChangeFloor = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, floor: newValue || '' });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeArea = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            console.log(newValue)\r\n            setDuplicatedPremises({ ...duplicatedPremises, area: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n\r\n    const handleChecked = () => {\r\n        if (duplicatedPremises.vacant === \"false\") {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    const onChangeVacantToggle = React.useCallback(\r\n        (ev: React.MouseEvent<HTMLElement>, checked: boolean | undefined) => {\r\n            if (duplicatedPremises.vacant === \"false\") {\r\n                setDuplicatedPremises({ ...duplicatedPremises, vacant: \"true\" });\r\n\r\n            } else {\r\n                setDuplicatedPremises({ ...duplicatedPremises, vacant: \"false\" });\r\n            }\r\n        },\r\n        [duplicatedPremises])\r\n\r\n    const onSelectOccupationDate = React.useCallback(\r\n        (date: Date | null | undefined) => {\r\n            if (date !== undefined && date !== null)\r\n            setDuplicatedPremises({ ...duplicatedPremises, occupation: date.toISOString() });\r\n        },\r\n        [duplicatedPremises])\r\n\r\n    const onFormatDate = (date?: Date): string => {\r\n        return !date ? '' : date.toLocaleDateString(\r\n            'en-gb',\r\n            {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric'\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n\r\n    const onChangePremisesNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, premisesNotes: newValue || '' });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeNetRental = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, netRental: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeOpCosts = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, opCosts: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeOther = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, other: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeGrossRental = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, grossRental: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeEsc = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, esc: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeOpenBays = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, openBays: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeOpenRate = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, openRate: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeCoveredBays = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, coveredBays: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeCoveredRate = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, coveredRate: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeShadedBays = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, shadedBays: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeShadedRate = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, shadedRate: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeParkingRatio = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, parkingRatio: parseFloat(newValue!) || 0 });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onChangeTenantName = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, tenantName: newValue || '' });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n    const onSelectLeaseExpiry = React.useCallback(\r\n        (date: Date | null | undefined) => {\r\n            if (date !== undefined && date !== null)\r\n            setDuplicatedPremises({ ...duplicatedPremises, leaseExpiry: date.toISOString() });\r\n        },\r\n        [duplicatedPremises])\r\n\r\n    const onChangeTenantNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setDuplicatedPremises({ ...duplicatedPremises, tenantNotes: newValue || '' });\r\n        },\r\n        [duplicatedPremises],\r\n    );\r\n\r\n\r\n\r\n\r\n    /* const onChangeCoordinates = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, coordinates: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeErfExtent = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, erfExtent: parseInt(newValue!) || 0 });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeTotalGLA = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, totalGLA: parseInt(newValue!) || 0 });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, notes: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    ); */\r\n\r\n    const [selectedKey, setSelectedKey] = React.useState('Premises Details');\r\n\r\n    const handleLinkClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n\r\n        setSelectedKey(item!.props.itemKey!);\r\n    };\r\n\r\n    const getTabId = (itemKey: string | undefined) => {\r\n        return `NewPremisesPivot_${itemKey}`;\r\n    };\r\n\r\n    const titleId = useId('title');\r\n\r\n\r\n\r\n    const DuplicatePremisesTab = () => {\r\n\r\n        switch (selectedKey) {\r\n            case \"Premises Details\":\r\n                return (\r\n                    <>\r\n                        <Stack horizontal /* style={{marginLeft: 50}} */\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"0px\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Floor/Unit\"\r\n                                value={duplicatedPremises.floor}\r\n                                onChange={onChangeFloor}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                            />\r\n                            <TextField\r\n                                label=\"Area\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.area === 0 ? \"\" : String(duplicatedPremises.area)}\r\n                                onChange={onChangeArea}\r\n                                styles={textFieldAreaStyles}\r\n                                suffix=\"m²\"\r\n                            />\r\n\r\n                            <Toggle styles={toggleStyles} label=\"Vacant?\" checked={handleChecked()} onChange={onChangeVacantToggle} />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal styles={{\r\n                            root: {\r\n                                /* width: '400px', */\r\n                                /*  margin: '10px', */\r\n\r\n                                color: '#605e5c',\r\n\r\n                                marginLeft: \"0px\",\r\n                                marginRight: \"auto\",\r\n                                /* display: \"block\" */\r\n\r\n                            }\r\n\r\n                        }}>\r\n\r\n                            <Dropdown\r\n                                label=\"Premises Type\"\r\n                                selectedKey={selectedPremisesType ? selectedPremisesType.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangePremisesType}\r\n                                placeholder=\"Select type\"\r\n                                options={premisesTypeOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                label=\"Premises Index\"\r\n                                selectedKey={selectedPremisesIndex ? selectedPremisesIndex.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangePremisesIndex}\r\n                                placeholder=\"Select index\"\r\n                                options={premisesIndexOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n\r\n                            <DatePicker\r\n                                label=\"Occupation Date\"\r\n                                className={controlClass.control}\r\n                                firstDayOfWeek={DayOfWeek.Monday}\r\n                                strings={DayPickerStrings}\r\n                                placeholder=\"Select a date...\"\r\n                                ariaLabel=\"Select a date\"\r\n                                value={new Date(duplicatedPremises.occupation)}\r\n                                onSelectDate={onSelectOccupationDate}\r\n                                formatDate={onFormatDate}\r\n                                styles={datePickerStyles}\r\n\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Premises Notes\"\r\n                                value={duplicatedPremises.premisesNotes}\r\n                                onChange={onChangePremisesNotes}\r\n                                styles={textFieldNotesStyles}\r\n                                multiline\r\n                                autoAdjustHeight\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n            case \"Rental Details\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Net Rental\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.netRental === 0 ? \"\" : String(duplicatedPremises.netRental)}\r\n                                onChange={onChangeNetRental}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Op Costs\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.opCosts === 0 ? \"\" : String(duplicatedPremises.opCosts)}\r\n                                onChange={onChangeOpCosts}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Other\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.other === 0 ? \"\" : String(duplicatedPremises.other)}\r\n                                onChange={onChangeOther}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Gross Rental\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.grossRental === 0 ? \"\" : String(duplicatedPremises.grossRental)}\r\n                                onChange={onChangeGrossRental}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Esc\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.esc === 0 ? \"\" : String(duplicatedPremises.esc)}\r\n                                onChange={onChangeEsc}\r\n                                styles={textFieldEscStyles}\r\n                                suffix=\"% per annum\"\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n            case \"Parking Details\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Open Bays\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.openBays === 0 ? \"\" : String(duplicatedPremises.openBays)}\r\n                                onChange={onChangeOpenBays}\r\n                                styles={textFieldFloorStyles}\r\n                                suffix=\"bays\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Open Rate\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.openRate === 0 ? \"\" : String(duplicatedPremises.openRate)}\r\n                                onChange={onChangeOpenRate}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/bay/month\"\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Covered Bays\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.coveredBays === 0 ? \"\" : String(duplicatedPremises.coveredBays)}\r\n                                onChange={onChangeCoveredBays}\r\n                                styles={textFieldFloorStyles}\r\n                                suffix=\"bays\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Covered Rate\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.coveredRate === 0 ? \"\" : String(duplicatedPremises.coveredRate)}\r\n                                onChange={onChangeCoveredRate}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/bay/month\"\r\n                            />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Shaded Bays\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.shadedBays === 0 ? \"\" : String(duplicatedPremises.shadedBays)}\r\n                                onChange={onChangeShadedBays}\r\n                                styles={textFieldFloorStyles}\r\n                                suffix=\"bays\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Shaded Rate\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.shadedRate === 0 ? \"\" : String(duplicatedPremises.shadedRate)}\r\n                                onChange={onChangeShadedRate}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/bay/month\"\r\n                            />\r\n\r\n                        </Stack>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Parking Ratio\"\r\n                                type=\"number\"\r\n                                value={duplicatedPremises.parkingRatio === 0 ? \"\" : String(duplicatedPremises.parkingRatio)}\r\n                                onChange={onChangeParkingRatio}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                                suffix=\"bays/100m²\"\r\n                            />\r\n\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n\r\n            case \"Tenant Details\":\r\n\r\n                return (\r\n                    <>\r\n\r\n\r\n                        <Stack horizontal styles={{\r\n                            root: {\r\n                                /* width: '400px', */\r\n                                /*  margin: '10px', */\r\n\r\n                                color: '#605e5c',\r\n\r\n                                marginLeft: \"0px\",\r\n                                marginRight: \"auto\",\r\n                                /* display: \"block\" */\r\n\r\n                            }\r\n\r\n                        }}>\r\n\r\n                            <TextField\r\n                                label=\"Tenant Name\"\r\n                                value={duplicatedPremises.tenantName === \"-\" ? \"\" : duplicatedPremises.tenantName}\r\n                                onChange={onChangeTenantName}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                            />\r\n\r\n                            <DatePicker\r\n                                label=\"Lease Expiry Date\"\r\n                                className={controlClass.control}\r\n                                firstDayOfWeek={DayOfWeek.Monday}\r\n                                strings={DayPickerStrings}\r\n                                placeholder=\"Select a date...\"\r\n                                ariaLabel=\"Select a date\"\r\n                                value={new Date(duplicatedPremises.leaseExpiry)}\r\n                                onSelectDate={onSelectLeaseExpiry}\r\n                                formatDate={onFormatDate}\r\n                                styles={datePickerStyles}\r\n\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Tenant Notes\"\r\n                                value={duplicatedPremises.tenantNotes}\r\n                                onChange={onChangeTenantNotes}\r\n                                styles={textFieldNotesStyles}\r\n                                multiline\r\n                                autoAdjustHeight\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n\r\n            default:\r\n            // code block\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Modal\r\n                styles={modalStyles}\r\n\r\n                titleAriaId={titleId}\r\n                isOpen={showDuplicatePremisesModal}\r\n               /*  onDismiss={hideDuplicatePremisesModal} */\r\n                isBlocking={false}\r\n                containerClassName={contentStyles.container}\r\n            /* dragOptions={dragOptions} */\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>New Premises</span>\r\n                    <Stack horizontal\r\n                        styles={headerIconStackStyles}\r\n                    >\r\n\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={saveIcon}\r\n                            ariaLabel=\"Save Premises\"\r\n                            onClick={saveDuplicatedPremises}\r\n                        />\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={cancelIcon}\r\n                            ariaLabel=\"Close popup modal\"\r\n                            onClick={hideDuplicatePremisesModal}\r\n                        />\r\n\r\n                    </Stack>\r\n\r\n                </div>\r\n                <div className={contentStyles.body} >\r\n\r\n                    <Stack tokens={stackTokens}>\r\n\r\n                        <Pivot\r\n                            aria-label=\"Separately Rendered Content Pivot Example\"\r\n                            selectedKey={selectedKey}\r\n                            // eslint-disable-next-line react/jsx-no-bind\r\n                            onLinkClick={handleLinkClick}\r\n                            headersOnly={true}\r\n                            getTabId={getTabId}\r\n                        >\r\n                            <PivotItem headerText=\"Premises Details\" itemKey=\"Premises Details\" />\r\n                            <PivotItem headerText=\"Rental Details\" itemKey=\"Rental Details\" />\r\n                            <PivotItem headerText=\"Parking Details\" itemKey=\"Parking Details\" />\r\n                            <PivotItem headerText=\"Tenant Details\" itemKey=\"Tenant Details\" />\r\n                        </Pivot>\r\n\r\n                        {DuplicatePremisesTab()}\r\n\r\n\r\n\r\n\r\n\r\n                    </Stack>\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        /*  width: 525, */\r\n\r\n    },\r\n\r\n    header: [\r\n\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: \"10px !important\",\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n        fontSize: \"24px\",\r\n\r\n    }\r\n};\r\n\r\nexport default DuplicatePremisesModal\r\n","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\UpdatePremisesModal.tsx",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"import React, { useState } from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport { TextField, ITextFieldStyles } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { IStackStyles, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { IRenderFunction, IStyleFunctionOrObject } from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    IToggleStyles,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    IModalStyles,\r\n    mergeStyles,\r\n    ComboBox,\r\n    Fabric,\r\n    IComboBoxOption,\r\n    IComboBox,\r\n    SelectableOptionMenuItemType,\r\n    IComboBoxStyles,\r\n    DatePicker,\r\n    DayOfWeek,\r\n    IDatePickerStrings,\r\n    IDatePickerStyleProps,\r\n    IDatePickerStyles,\r\n    ICalendarProps\r\n} from 'office-ui-fabric-react';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { defaultDataIdFromObject, gql, useMutation, useQuery } from '@apollo/client';\r\nimport { GET_SINGLE_PROPERTY, UPDATE_PREMISES, GET_NAV_STATE } from \"../gql/gql\"\r\nimport { Mutation, MutationUpdatePremisesArgs, Query, Property, Premises } from \"../schematypes/schematypes\"\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nimport \"./NewPremisesModal.css\"\r\n\r\n\r\n\r\n\r\nconst dragOptions: IDragOptions = {\r\n    moveMenuItemText: 'Move',\r\n    closeMenuItemText: 'Close',\r\n    menu: ContextualMenu,\r\n};\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\nconst saveIcon: IIconProps = { iconName: 'Save' };\r\n\r\ninterface Props {\r\n    propertyId: number;\r\n    premisesId: number\r\n    showUpdatePremisesModal: boolean;\r\n}\r\n\r\nexport const UpdatePremisesModal: React.FC<Props> = ({ showUpdatePremisesModal, propertyId, premisesId }) => {\r\n\r\n    \r\n\r\n    const {\r\n        data: propertyData,\r\n        loading: propertyLoading,\r\n        error: propertyError\r\n    } = useQuery<Query>(GET_SINGLE_PROPERTY, {\r\n        variables: { propertyId: propertyId },\r\n    });\r\n\r\n    console.log(propertyId)\r\n    console.log(premisesId)\r\n\r\n\r\n    const getPremises = propertyData?.singleProperty?.premisesList!.find(premises => premises?.premisesId === premisesId);\r\n    const handlePremisesData = React.useCallback(() => {\r\n        if (getPremises !== undefined && getPremises !== null) {\r\n            return getPremises\r\n        } else {\r\n            return {\r\n                floor: \"\",\r\n                area: 0,\r\n                vacant: \"true\",\r\n                type: \"\",\r\n                premisesIndex: 0,\r\n                occupation: getNextMonth(),\r\n                premisesNotes: \"\",\r\n                netRental: 0,\r\n                opCosts: 0,\r\n                other: 0,\r\n                grossRental: 0,\r\n                esc: 0,\r\n                openBays: 0,\r\n                openRate: 0,\r\n                coveredBays: 0,\r\n                coveredRate: 0,\r\n                shadedBays: 0,\r\n                shadedRate: 0,\r\n                parkingRatio: 0,\r\n                tenantName: \"-\",\r\n                leaseExpiry: getNextMonth(),\r\n                tenantNotes: \"\",\r\n                yard: 0,\r\n                height: 0,\r\n                doors: 0,\r\n                loading: \"\",\r\n                sprinklered: \"\",\r\n                canopies: \"\",\r\n                power: \"\",\r\n\r\n            }\r\n        }\r\n    }, [getPremises])\r\n\r\n\r\n    React.useEffect(()=> {\r\nsetUpdatedPremises(handlePremisesData)\r\nsetSelectedPremisesType({ key: handlePremisesData().type!, text: handlePremisesData().type! })\r\nsetSelectedPremisesIndex(({ key: handlePremisesData().premisesIndex!, text: String(handlePremisesData().premisesIndex!) }))\r\n\r\n    },[handlePremisesData])\r\n\r\n    \r\n   \r\n\r\n    const hideUpdatePremisesModal = () => {\r\n        \r\n        navigationState({ ...navigationState(), showUpdatePremisesModal: false })\r\n        \r\n    }\r\n\r\n    const getNextMonth = () => {\r\n        const date = new Date();\r\n        const today = date.getDate();\r\n        const currentMonth = date.getMonth() + 1;\r\n        const currentYear = date.getFullYear();\r\n        var newDate = new Date(currentYear, currentMonth, 1);\r\n        return newDate.toISOString()\r\n\r\n    }\r\n\r\n\r\n    const [updatedPremises, setUpdatedPremises] = React.useState<Premises>(\r\n        {\r\n            floor: \"\",\r\n            area: 0,\r\n            vacant: \"true\",\r\n            type: \"\",\r\n            premisesIndex: 0,\r\n            occupation: getNextMonth(),\r\n            premisesNotes: \"\",\r\n            netRental: 0,\r\n            opCosts: 0,\r\n            other: 0,\r\n            grossRental: 0,\r\n            esc: 0,\r\n            openBays: 0,\r\n            openRate: 0,\r\n            coveredBays: 0,\r\n            coveredRate: 0,\r\n            shadedBays: 0,\r\n            shadedRate: 0,\r\n            parkingRatio: 0,\r\n            tenantName: \"-\",\r\n            leaseExpiry: getNextMonth(),\r\n            tenantNotes: \"\",\r\n            yard: 0,\r\n            height: 0,\r\n            doors: 0,\r\n            loading: \"\",\r\n            sprinklered: \"\",\r\n            canopies: \"\",\r\n            power: \"\",\r\n\r\n        });\r\n\r\n    console.log(updatedPremises)\r\n    \r\n\r\n    const [updatePremises, { data }] = useMutation<Mutation, MutationUpdatePremisesArgs>(UPDATE_PREMISES);\r\n\r\n    const saveUpdatedPremises = () => {\r\n\r\n        updatePremises({\r\n            variables: {\r\n                premisesId: premisesId,\r\n                floor: updatedPremises.floor,\r\n                area: updatedPremises.area,\r\n                vacant: updatedPremises.vacant,\r\n                type: updatedPremises.type,\r\n                premisesIndex: updatedPremises.premisesIndex,\r\n                occupation: updatedPremises.occupation,\r\n                premisesNotes: updatedPremises.premisesNotes,\r\n                netRental: updatedPremises.netRental,\r\n                opCosts: updatedPremises.opCosts,\r\n                other: updatedPremises.other,\r\n                grossRental: updatedPremises.grossRental,\r\n                esc: updatedPremises.esc,\r\n                openBays: updatedPremises.openBays,\r\n                openRate: updatedPremises.openRate,\r\n                coveredBays: updatedPremises.coveredBays,\r\n                coveredRate: updatedPremises.coveredRate,\r\n                shadedBays: updatedPremises.shadedBays,\r\n                shadedRate: updatedPremises.shadedRate,\r\n                parkingRatio: updatedPremises.parkingRatio,\r\n                tenantName: updatedPremises.tenantName,\r\n                leaseExpiry: updatedPremises.leaseExpiry,\r\n                tenantNotes: updatedPremises.tenantNotes,\r\n                yard: updatedPremises.yard,\r\n                height: updatedPremises.height,\r\n                doors: updatedPremises.doors,\r\n                loading: updatedPremises.loading,\r\n                sprinklered: updatedPremises.sprinklered,\r\n                canopies: updatedPremises.canopies,\r\n                power: updatedPremises.power,\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n                const existingProperty: Property = getExistingProperty ? getExistingProperty.singleProperty! : { propertyId: 1, propertyName: \"\" };\r\n\r\n                const existingPremises = getExistingProperty ? getExistingProperty.singleProperty?.premisesList : [];\r\n                const filteredPremises = existingPremises?.filter(premises => {\r\n                    return premises.premisesId !== premisesId\r\n                })\r\n\r\n                const updatedPremises = data.updatePremises\r\n                \r\n                const newPremisesList = [...filteredPremises!, updatedPremises]\r\n\r\n                const newProperty = { ...existingProperty, premisesList: newPremisesList }\r\n                if (existingPremises)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId },\r\n                        data: { singleProperty: newProperty }\r\n                    });\r\n            }\r\n\r\n\r\n        })\r\n        hideUpdatePremisesModal()\r\n       \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /* const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [isDraggable, { toggle: toggleIsDraggable }] = useBoolean(false); */\r\n\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n\r\n\r\n    const textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldFloorStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldAreaStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldEscStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldCoordinatesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 150, marginRight: 20 } };\r\n    const textFieldErfStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, marginRight: 20 } };\r\n    const textFieldNotesStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 470 } };\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 125, marginRight: 20 } };\r\n    const dropdownSectorStyles: Partial<IDropdownStyles> = { dropdown: { width: 420, marginRight: 20 } };\r\n    const dropdownProvinceStyles: Partial<IDropdownStyles> = { dropdown: { width: 140, marginRight: 20 } };\r\n    const comboBoxStyles: Partial<IComboBoxStyles> = { root: { width: 140, marginRight: 20 } }\r\n\r\n    const toggleStyles: Partial<IToggleStyles> = { container: { marginTop: 5 }, label: { marginLeft: 4 } };\r\n    const modalStyles: Partial<IModalStyles> = { main: { position: \"absolute\", top: 150 }, };\r\n\r\n    const datePickerStyles: IStyleFunctionOrObject<IDatePickerStyleProps, IDatePickerStyles> = { root: { width: 160, marginRight: 20 }, callout: {} }\r\n\r\n    /* const calendarProps: ICalendarProps ={styles  } */\r\n\r\n\r\n\r\n    const headerIconStackStyles: Partial<IStackStyles> = { root: { marginRight: 0, marginLeft: \"auto\", } }\r\n\r\n    const DayPickerStrings: IDatePickerStrings = {\r\n        months: [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ],\r\n\r\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\r\n        shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n\r\n        goToToday: 'Go to today',\r\n        prevMonthAriaLabel: 'Go to previous month',\r\n        nextMonthAriaLabel: 'Go to next month',\r\n        prevYearAriaLabel: 'Go to previous year',\r\n        nextYearAriaLabel: 'Go to next year',\r\n        closeButtonAriaLabel: 'Close date picker',\r\n        monthPickerHeaderAriaLabel: '{0}, select to change the year',\r\n        yearPickerHeaderAriaLabel: '{0}, select to change the month',\r\n    };\r\n\r\n    const controlClass = mergeStyleSets({\r\n        control: {\r\n            margin: '0 0 15px 0',\r\n            maxWidth: '300px',\r\n        },\r\n\r\n    });\r\n\r\n    const premisesTypeOptions = [\r\n\r\n        { key: 'Office', text: 'Office' },\r\n        { key: 'Warehouse', text: 'Warehouse' },\r\n        { key: 'Retail', text: 'Retail' },\r\n        { key: 'Stores', text: 'Stores' },\r\n        { key: 'Balcony', text: 'Balcony' },\r\n    ];\r\n\r\n    const premisesIndexOptions = [\r\n\r\n        { key: 1, text: \"1\" },\r\n        { key: 2, text: \"2\" },\r\n        { key: 3, text: \"3\" },\r\n        { key: 4, text: \"4\" },\r\n        { key: 5, text: \"5\" },\r\n        { key: 6, text: \"6\" },\r\n    ];\r\n\r\n\r\n\r\n    const [selectedPremisesType, setSelectedPremisesType] = React.useState<IDropdownOption>();\r\n    const [selectedPremisesIndex, setSelectedPremisesIndex] = React.useState<IDropdownOption>();\r\n\r\nconsole.log(selectedPremisesType)\r\nconsole.log(selectedPremisesIndex)\r\n\r\n    const onChangePremisesType = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedPremisesType(item);\r\n            setUpdatedPremises({ ...updatedPremises, type: item.text });\r\n        }\r\n    };\r\n\r\n    const onChangePremisesIndex = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedPremisesIndex(item);\r\n            setUpdatedPremises({ ...updatedPremises, premisesIndex: parseInt(item.text) });\r\n        }\r\n    };\r\n\r\n\r\n    const stackTokens = { childrenGap: 15 };\r\n\r\n\r\n\r\n    const onChangeFloor = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, floor: newValue || '' });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeArea = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            console.log(newValue)\r\n            setUpdatedPremises({ ...updatedPremises, area: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n\r\n    const handleChecked = () => {\r\n        if (updatedPremises.vacant === \"false\") {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    const onChangeVacantToggle = React.useCallback(\r\n        (ev: React.MouseEvent<HTMLElement>, checked: boolean | undefined) => {\r\n            if (updatedPremises.vacant === \"false\") {\r\n                setUpdatedPremises({ ...updatedPremises, vacant: \"true\" });\r\n\r\n            } else {\r\n                setUpdatedPremises({ ...updatedPremises, vacant: \"false\" });\r\n            }\r\n        },\r\n        [updatedPremises])\r\n\r\n    const onSelectOccupationDate = React.useCallback(\r\n        (date: Date | null | undefined) => {\r\n            if (date !== undefined && date !== null)\r\n                setUpdatedPremises({ ...updatedPremises, occupation: date.toISOString() });\r\n        },\r\n        [updatedPremises])\r\n\r\n    const onFormatDate = (date?: Date): string => {\r\n        return !date ? '' : date.toLocaleDateString(\r\n            'en-gb',\r\n            {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric'\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n\r\n    const onChangePremisesNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, premisesNotes: newValue || '' });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeNetRental = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, netRental: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeOpCosts = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, opCosts: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeOther = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, other: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeGrossRental = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, grossRental: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeEsc = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, esc: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeOpenBays = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, openBays: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeOpenRate = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, openRate: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeCoveredBays = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, coveredBays: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeCoveredRate = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, coveredRate: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeShadedBays = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, shadedBays: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeShadedRate = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, shadedRate: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeParkingRatio = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, parkingRatio: parseFloat(newValue!) || 0 });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onChangeTenantName = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, tenantName: newValue || '' });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n    const onSelectLeaseExpiry = React.useCallback(\r\n        (date: Date | null | undefined) => {\r\n            if (date !== undefined && date !== null)\r\n                setUpdatedPremises({ ...updatedPremises, leaseExpiry: date.toISOString() });\r\n        },\r\n        [updatedPremises])\r\n\r\n    const onChangeTenantNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setUpdatedPremises({ ...updatedPremises, tenantNotes: newValue || '' });\r\n        },\r\n        [updatedPremises],\r\n    );\r\n\r\n\r\n\r\n\r\n    /* const onChangeCoordinates = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, coordinates: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeErfExtent = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, erfExtent: parseInt(newValue!) || 0 });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeTotalGLA = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, totalGLA: parseInt(newValue!) || 0 });\r\n        },\r\n        [newProperty],\r\n    );\r\n    const onChangeNotes = React.useCallback(\r\n        (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue?: string) => {\r\n            setNewProperty({ ...newProperty, notes: newValue || '' });\r\n        },\r\n        [newProperty],\r\n    ); */\r\n\r\n    const [selectedKey, setSelectedKey] = React.useState('Premises Details');\r\n\r\n    const handleLinkClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n\r\n        setSelectedKey(item!.props.itemKey!);\r\n    };\r\n\r\n    const getTabId = (itemKey: string | undefined) => {\r\n        return `NewPremisesPivot_${itemKey}`;\r\n    };\r\n\r\n    const titleId = useId('title');\r\n\r\n\r\n\r\n    const updatePremisesTab = () => {\r\n\r\n        switch (selectedKey) {\r\n            case \"Premises Details\":\r\n                return (\r\n                    <>\r\n                        <Stack horizontal /* style={{marginLeft: 50}} */\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"0px\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Floor/Unit\"\r\n                                value={updatedPremises.floor}\r\n                                onChange={onChangeFloor}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                            />\r\n                            <TextField\r\n                                label=\"Area\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.area === 0 ? \"\" : String(updatedPremises.area)}\r\n                                onChange={onChangeArea}\r\n                                styles={textFieldAreaStyles}\r\n                                suffix=\"m²\"\r\n                            />\r\n\r\n                            <Toggle styles={toggleStyles} label=\"Vacant?\" checked={handleChecked()} onChange={onChangeVacantToggle} />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal styles={{\r\n                            root: {\r\n                                /* width: '400px', */\r\n                                /*  margin: '10px', */\r\n\r\n                                color: '#605e5c',\r\n\r\n                                marginLeft: \"0px\",\r\n                                marginRight: \"auto\",\r\n                                /* display: \"block\" */\r\n\r\n                            }\r\n\r\n                        }}>\r\n\r\n                            <Dropdown\r\n                                label=\"Premises Type\"\r\n                                selectedKey={selectedPremisesType ? selectedPremisesType.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangePremisesType}\r\n                                placeholder=\"Select type\"\r\n                                options={premisesTypeOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                label=\"Premises Index\"\r\n                                selectedKey={selectedPremisesIndex ? selectedPremisesIndex.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangePremisesIndex}\r\n                                placeholder=\"Select index\"\r\n                                options={premisesIndexOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n\r\n                            <DatePicker\r\n                                label=\"Occupation Date\"\r\n                                className={controlClass.control}\r\n                                firstDayOfWeek={DayOfWeek.Monday}\r\n                                strings={DayPickerStrings}\r\n                                placeholder=\"Select a date...\"\r\n                                ariaLabel=\"Select a date\"\r\n                                value={new Date(updatedPremises.occupation)}\r\n                                onSelectDate={onSelectOccupationDate}\r\n                                formatDate={onFormatDate}\r\n                                styles={datePickerStyles}\r\n\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Premises Notes\"\r\n                                value={updatedPremises.premisesNotes}\r\n                                onChange={onChangePremisesNotes}\r\n                                styles={textFieldNotesStyles}\r\n                                multiline\r\n                                autoAdjustHeight\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n            case \"Rental Details\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Net Rental\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.netRental === 0 ? \"\" : String(updatedPremises.netRental)}\r\n                                onChange={onChangeNetRental}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Op Costs\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.opCosts === 0 ? \"\" : String(updatedPremises.opCosts)}\r\n                                onChange={onChangeOpCosts}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Other\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.other === 0 ? \"\" : String(updatedPremises.other)}\r\n                                onChange={onChangeOther}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Gross Rental\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.grossRental === 0 ? \"\" : String(updatedPremises.grossRental)}\r\n                                onChange={onChangeGrossRental}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/m²/month\"\r\n                            />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Esc\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.esc === 0 ? \"\" : String(updatedPremises.esc)}\r\n                                onChange={onChangeEsc}\r\n                                styles={textFieldEscStyles}\r\n                                suffix=\"% per annum\"\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n            case \"Parking Details\":\r\n\r\n                return (\r\n                    <>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Open Bays\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.openBays === 0 ? \"\" : String(updatedPremises.openBays)}\r\n                                onChange={onChangeOpenBays}\r\n                                styles={textFieldFloorStyles}\r\n                                suffix=\"bays\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Open Rate\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.openRate === 0 ? \"\" : String(updatedPremises.openRate)}\r\n                                onChange={onChangeOpenRate}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/bay/month\"\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n                            <TextField\r\n                                label=\"Covered Bays\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.coveredBays === 0 ? \"\" : String(updatedPremises.coveredBays)}\r\n                                onChange={onChangeCoveredBays}\r\n                                styles={textFieldFloorStyles}\r\n                                suffix=\"bays\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Covered Rate\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.coveredRate === 0 ? \"\" : String(updatedPremises.coveredRate)}\r\n                                onChange={onChangeCoveredRate}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/bay/month\"\r\n                            />\r\n\r\n\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Shaded Bays\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.shadedBays === 0 ? \"\" : String(updatedPremises.shadedBays)}\r\n                                onChange={onChangeShadedBays}\r\n                                styles={textFieldFloorStyles}\r\n                                suffix=\"bays\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Shaded Rate\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.shadedRate === 0 ? \"\" : String(updatedPremises.shadedRate)}\r\n                                onChange={onChangeShadedRate}\r\n                                styles={textFieldFloorStyles}\r\n                                prefix=\"R\"\r\n                                suffix=\"/bay/month\"\r\n                            />\r\n\r\n                        </Stack>\r\n                        <Stack horizontal\r\n                            styles={{\r\n                                root: {\r\n                                    /* width: '400px', */\r\n                                    /*  margin: '10px', */\r\n\r\n                                    color: '#605e5c',\r\n\r\n                                    marginLeft: \"auto\",\r\n                                    marginRight: \"auto\",\r\n                                    /* display: \"block\" */\r\n\r\n                                }\r\n                            }}>\r\n\r\n\r\n                            <TextField\r\n                                label=\"Parking Ratio\"\r\n                                type=\"number\"\r\n                                value={updatedPremises.parkingRatio === 0 ? \"\" : String(updatedPremises.parkingRatio)}\r\n                                onChange={onChangeParkingRatio}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                                suffix=\"bays/100m²\"\r\n                            />\r\n\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n\r\n            case \"Tenant Details\":\r\n\r\n                return (\r\n                    <>\r\n\r\n\r\n                        <Stack horizontal styles={{\r\n                            root: {\r\n                                /* width: '400px', */\r\n                                /*  margin: '10px', */\r\n\r\n                                color: '#605e5c',\r\n\r\n                                marginLeft: \"0px\",\r\n                                marginRight: \"auto\",\r\n                                /* display: \"block\" */\r\n\r\n                            }\r\n\r\n                        }}>\r\n\r\n                            <TextField\r\n                                label=\"Tenant Name\"\r\n                                value={updatedPremises.tenantName === \"-\" ? \"\" : updatedPremises.tenantName}\r\n                                onChange={onChangeTenantName}\r\n                                styles={textFieldFloorStyles}\r\n\r\n                            />\r\n\r\n                            <DatePicker\r\n                                label=\"Lease Expiry Date\"\r\n                                className={controlClass.control}\r\n                                firstDayOfWeek={DayOfWeek.Monday}\r\n                                strings={DayPickerStrings}\r\n                                placeholder=\"Select a date...\"\r\n                                ariaLabel=\"Select a date\"\r\n                                value={new Date(updatedPremises.leaseExpiry)}\r\n                                onSelectDate={onSelectLeaseExpiry}\r\n                                formatDate={onFormatDate}\r\n                                styles={datePickerStyles}\r\n\r\n                            />\r\n\r\n                        </Stack>\r\n\r\n                        <Stack horizontal>\r\n\r\n                            <TextField\r\n                                label=\"Tenant Notes\"\r\n                                value={updatedPremises.tenantNotes}\r\n                                onChange={onChangeTenantNotes}\r\n                                styles={textFieldNotesStyles}\r\n                                multiline\r\n                                autoAdjustHeight\r\n                            />\r\n\r\n                        </Stack>\r\n                    </>\r\n                )\r\n\r\n\r\n            default:\r\n            // code block\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Modal\r\n                styles={modalStyles}\r\n\r\n                titleAriaId={titleId}\r\n                isOpen={showUpdatePremisesModal}\r\n               /*  onDismiss={hideUpdatePremisesModal} */\r\n                isBlocking={false}\r\n                containerClassName={contentStyles.container}\r\n            /* dragOptions={dragOptions} */\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>Update Premises</span>\r\n                    <Stack horizontal\r\n                        styles={headerIconStackStyles}\r\n                    >\r\n\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={saveIcon}\r\n                            ariaLabel=\"Save Premises\"\r\n                            onClick={saveUpdatedPremises}\r\n                        />\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={cancelIcon}\r\n                            ariaLabel=\"Close popup modal\"\r\n                            onClick={hideUpdatePremisesModal}\r\n                        />\r\n\r\n                    </Stack>\r\n\r\n                </div>\r\n                <div className={contentStyles.body} >\r\n\r\n                    <Stack tokens={stackTokens}>\r\n\r\n                        <Pivot\r\n                            aria-label=\"Separately Rendered Content Pivot Example\"\r\n                            selectedKey={selectedKey}\r\n                            // eslint-disable-next-line react/jsx-no-bind\r\n                            onLinkClick={handleLinkClick}\r\n                            headersOnly={true}\r\n                            getTabId={getTabId}\r\n                        >\r\n                            <PivotItem headerText=\"Premises Details\" itemKey=\"Premises Details\" />\r\n                            <PivotItem headerText=\"Rental Details\" itemKey=\"Rental Details\" />\r\n                            <PivotItem headerText=\"Parking Details\" itemKey=\"Parking Details\" />\r\n                            <PivotItem headerText=\"Tenant Details\" itemKey=\"Tenant Details\" />\r\n                        </Pivot>\r\n\r\n                        {updatePremisesTab()}\r\n\r\n\r\n\r\n\r\n\r\n                    </Stack>\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        /*  width: 525, */\r\n\r\n    },\r\n\r\n    header: [\r\n\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: \"10px !important\",\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n    icon: {\r\n        fontSize: \"24px\",\r\n\r\n    }\r\n};\r\n\r\nexport default UpdatePremisesModal\r\n","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\UpdatePropertyModal.tsx",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PDFOutput\\PropertyListLargeImagesPDF.tsx",["427","428","429","430","431","432","433","434","435","436","437","438","439","440"],"import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\n\r\nimport { Font } from '@react-pdf/renderer'\r\nimport SegoeUI from \"../../assets/fonts/SegoeUI.ttf\"\r\nimport SegoeUIBold from \"../../assets/fonts/SegoeUIBold.ttf\"\r\n\r\nimport { GET_SELECTED_PROPERTIES, GET_NAV_STATE, GET_DISTINCT_SUBURBS, GET_DISTINCT_REGIONS, UPDATE_IMAGES } from \"../../gql/gql\"\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { Mutation, MutationUpdatePropertyArgs, Query, NavigationState, Premises, SelectedPropertyList, Property, Agent } from \"../../schematypes/schematypes\"\r\nimport { navigationState as navigationStateVar, selectedPropertyList as selectedPropertyListVar } from \"../../reactivevariables/reactivevariables\"\r\nimport { Cloudinary } from \"cloudinary-core\"\r\n\r\n\r\n\r\nvar cl = new Cloudinary({ cloud_name: \"drlfedqyz\", secure: true });\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    frontPage: {\r\n        flexDirection: 'column',\r\n        backgroundColor: '#20314b',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    contactPage: {\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 2, */\r\n        /* margin: \"10px\" */\r\n\r\n    },\r\n    overallContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n\r\n    },\r\n\r\n    initialPageContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  margin: 5, */\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    primaryImageContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: 0,\r\n        marginLeft: 20,\r\n        marginTop: 0,\r\n        marginBottom: \"auto\",\r\n    },\r\n    primaryImage: {\r\n        width: 600,\r\n        height: 400,\r\n        marginTop: 30,\r\n        marginBottom: \"auto\"\r\n    },\r\n    premisesDetailsContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: 30,\r\n        marginBottom: \"auto\",\r\n        marginLeft: 20\r\n        /*  height: 500 */\r\n        /* width: 120 */\r\n    },\r\n    propertyNumberColumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n\r\n        /*  marginTop: 0,\r\n         marginBottom: \"auto\", */\r\n        /*  marginLeft: 10,\r\n         paddingTop: 4, */\r\n        /* width: \"10%\", */\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    secondaryPageContainer: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n    secondaryImageContainers: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    },\r\n    secondaryImage: {\r\n        width: 660,\r\n        height: 440,\r\n        marginTop: 13,\r\n        marginBottom: \"auto\"\r\n    },\r\n    /*  detailsSection: {\r\n         fontFamily: 'SegoeUI',\r\n         display: \"flex\",\r\n         flexDirection: \"row\",\r\n         margin: 5,\r\n         marginLeft: \"auto\",\r\n         marginRight: \"auto\",\r\n \r\n \r\n         width: \"100%\",\r\n         \r\n     }, */\r\n    premisesInfo: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginTop: 10,\r\n        marginLeft: 5,\r\n        marginRight: 0,\r\n        alignItems: \"flex-start\",\r\n        width: 175\r\n    },\r\n    premisesInfoHeadings: {\r\n\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n\r\n    },\r\n    premisesInfoText: {\r\n        marginLeft: 5,\r\n        fontSize: 10,\r\n        fontFamily: \"SegoeUI\",\r\n        color: \"black\",\r\n        paddingTop: 2\r\n\r\n    },\r\n    imagesSection: {\r\n        fontFamily: 'SegoeUI',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: 5,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        paddingLeft: 80,\r\n\r\n        width: \"100%\",\r\n\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    footerSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginTop: \"auto\",\r\n        marginBottom: 0\r\n\r\n    },\r\n    headerText: {\r\n        margin: \"auto\",\r\n        fontSize: 20,\r\n        fontFamily: \"SegoeUI\",\r\n\r\n        color: \"white\",\r\n\r\n    },\r\n    footerImageSection: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \"backgroundColor\": '#1f304a',\r\n        width: \"100vw\",\r\n        height: \"65px\",\r\n\r\n\r\n    },\r\n    frontPageSection: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        \"backgroundColor\": '#20314b',\r\n        /* width: \"100vw\",\r\n        height: \"auto\", */\r\n    },\r\n    frontPageBackground: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        /*  \"backgroundColor\": '#20314b', */\r\n\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: 'auto',\r\n\r\n        /*  marginTop: \"auto\",\r\n         marginBottom: \"auto\", */\r\n        /* \"backgroundColor\": '#20314b', */\r\n\r\n\r\n    },\r\n    contactPageBackground: {\r\n        /*  display: \"flex\",\r\n         flexDirection: \"row\", */\r\n        /*  \"backgroundColor\": '#20314b', */\r\n\r\n        position: \"absolute\",\r\n        top: 88,\r\n        left: 0,\r\n        width: 245.7,\r\n        height: 441,\r\n\r\n        /*  marginTop: \"auto\",\r\n         marginBottom: \"auto\", */\r\n        /* \"backgroundColor\": '#20314b', */\r\n\r\n\r\n    },\r\n    frontPageText1: {\r\n        fontSize: 30,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: \"20%\",\r\n    },\r\n    frontPageText2: {\r\n        fontSize: 30,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"white\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10\r\n    },\r\n    contactPageText1: {\r\n        fontSize: 18,\r\n        fontFamily: \"SegoeUI\",\r\n        /* fontWeight: \"bold\", */\r\n        color: \"black\",\r\n\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: \"15%\",\r\n        marginBottom: 10\r\n    },\r\n    contactPageText2: {\r\n        fontSize: 24,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"auto\",\r\n        marginTop: 10\r\n    },\r\n    contactPageText3: {\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        /* fontWeight: \"bold\", */\r\n        color: \"black\",\r\n        marginLeft: \"30%\",\r\n        marginRight: \"10%\",\r\n        marginBottom: 10,\r\n        marginTop: 100\r\n    },\r\n    headerSection: {\r\n        /* position: 'absolute',\r\n        bottom: 0,\r\n        left: 0, */\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \"backgroundColor\": '#20314b',\r\n        width: \"100vw\",\r\n        height: \"65px\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n    },\r\n    footerImageStyles: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n\r\n    },\r\n    pageNumbers: {\r\n        position: \"absolute\",\r\n        top: 10,\r\n        right: 30,\r\n        fontSize: 10,\r\n        color: \"white\",\r\n\r\n    },\r\n    enquiryHeading: {\r\n        fontFamily: 'SegoeUI',\r\n        margin: 10,\r\n        marginLeft: 40,\r\n        padding: 10,\r\n    },\r\n    propertyHeading: {\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        /*  width: 125, */\r\n        /*  height: \"20px\", */\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 1.5,\r\n        /* marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center', */\r\n    },\r\n    propertyText: {\r\n        fontSize: 10,\r\n        color: \"black\",\r\n        width: \"100%\",\r\n        /*  height: \"30px\", */\r\n        paddingLeft: 10,\r\n        /* paddingTop: 1.5, */\r\n    },\r\n    propertyNumber: {\r\n\r\n        fontSize: 12,\r\n        borderStyle: \"solid\",\r\n        height: 20,\r\n        width: 20,\r\n        borderWidth: 1,\r\n        borderRadius: 20,\r\n        paddingLeft: 7,\r\n        paddingTop: 1.5,\r\n        \"backgroundColor\": '#20314b',\r\n        color: \"white\",\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n    propertyDetails: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        width: 125,\r\n        marginBottom: 10,\r\n        marginTop: 5,\r\n        /* borderStyle: \"solid\",\r\n        borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n\r\n    premisesDetailsHeading: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    },\r\n    parkingDetailsHeading: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        fontSize: 12,\r\n        fontFamily: \"SegoeUI\",\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    },\r\n\r\n\r\n\r\n    premisesHeadings: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        /*  width: \"25%\", */\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        /*    flexGrow: 1, */\r\n        \"backgroundColor\": '#20314b',\r\n    },\r\n    premisesDetails: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        /*  width: \"25%\", */\r\n        /*  borderStyle: \"solid\",\r\n         borderWidth: 1, */\r\n        /*    flexGrow: 1, */\r\n    },\r\n    premisesContainer: {\r\n        /* width: \"20%\", */\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        /* borderBottomWidth: 1,\r\n        borderBottomStyle: \"solid\", */\r\n        /*  height: 35, */\r\n        /*  height: \"30px\", */\r\n    },\r\n    premisesHeadingText: {\r\n        fontSize: 10,\r\n        /*  height: 15, */\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        color: \"white\",\r\n    },\r\n    premisesText: {\r\n        fontSize: 8,\r\n        /*  height: 15, */\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    premisesHeadingSubText: {\r\n        fontSize: 6,\r\n        marginLeft: \"auto\",\r\n        marginRight: 'auto',\r\n        textAlign: 'center',\r\n        height: 10,\r\n        color: \"white\",\r\n    },\r\n    imagesContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        /*  marginLeft: 20, */\r\n        marginRight: 40,\r\n\r\n\r\n    },\r\n    /*  image: {\r\n         width: 200,\r\n \r\n \r\n     }, */\r\n\r\n\r\n});\r\n\r\nFont.registerHyphenationCallback(word => [word]);\r\n\r\n\r\nFont.register({\r\n    family: 'SegoeUI', fonts: [\r\n        { src: SegoeUI }, { src: SegoeUIBold, fontStyle: 'normal', fontWeight: \"bold\" },\r\n        /*  { src: source2, fontStyle: 'italic' },\r\n         { src: source3, fontStyle: 'italic', fontWeight: 700 }, */\r\n    ]\r\n});\r\n\r\n\r\nconst getEarliestOccDate = (premises: Premises[]) => {\r\n\r\n\r\n    var premisesByOccDates: Premises[] = []\r\n    var date: Date = new Date()\r\n    if (premises !== undefined) {\r\n        premisesByOccDates = premises.slice().sort((a, b) => {\r\n            return Date.parse(a.occupation) - Date.parse(b.occupation)\r\n        });\r\n    }\r\n\r\n    if (premisesByOccDates[0] !== undefined) {\r\n        date = new Date(premisesByOccDates[0].occupation)\r\n    }\r\n    return date.toLocaleDateString(\r\n        'en-gb',\r\n        {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n        }\r\n    );\r\n}\r\n\r\nconst getLowestHighestEsc = (premises: Premises[]) => {\r\n\r\n\r\n    var premisesByEsc: Premises[] = []\r\n    var escPair: number[] = []\r\n    if (premises !== undefined) {\r\n        premisesByEsc = premises.slice().sort((a, b) => {\r\n            return a.esc! - b.esc!\r\n        });\r\n    }\r\n\r\n    if (premisesByEsc[0] !== undefined) {\r\n        escPair = [premisesByEsc[0].esc!, premisesByEsc[premisesByEsc.length - 1].esc!]\r\n    }\r\n    return escPair\r\n}\r\n\r\ninterface Props {\r\n\r\n    selectedPropertyList: SelectedPropertyList,\r\n    enquiryName: string,\r\n    agent: Agent,\r\n\r\n    /* enquiryName: string */\r\n\r\n}\r\n\r\n\r\n\r\nconst PropertyListLargeImagesPDF: React.FC<Props> = ({ selectedPropertyList, enquiryName, agent }) => (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Document >\r\n\r\n        <Page orientation=\"landscape\" size=\"A4\" style={styles.frontPage}>\r\n\r\n            <Image style={styles.frontPageBackground} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610358103/background_2_duzy8o.jpg\"></Image>\r\n\r\n            <Text style={styles.frontPageText1} >Schedule of Accomodation:</Text>\r\n            <Text style={styles.frontPageText2} >{enquiryName}</Text>\r\n\r\n\r\n\r\n        </Page>\r\n        <Page wrap orientation=\"landscape\" size=\"A4\" style={styles.page}>\r\n            <View fixed style={styles.headerSection}>\r\n\r\n                <Text style={styles.headerText}>Property Details</Text>\r\n\r\n\r\n\r\n\r\n                <Text style={styles.pageNumbers} render={({ pageNumber, totalPages }) => (\r\n                    `${pageNumber - 1} / ${totalPages - 2}`\r\n                )} fixed />\r\n\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {selectedPropertyList.map((property, index) => (\r\n\r\n\r\n                <View /* minPresenceAhead={50} */ /* wrap={false} */ key={property.propertyId} style={styles.overallContainer}>\r\n\r\n                    <View style={styles.initialPageContainer}>\r\n\r\n                        <View style={styles.primaryImageContainer} >\r\n                            {selectedPropertyList[index].images!.length !== 0 ? <Image style={styles.primaryImage} src={cl.url(`${property.images![0]}`)}></Image> : <Image style={styles.primaryImage} src={cl.url(\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610357447/background_eocbnx.jpg\")}></Image>}\r\n                        </View>\r\n\r\n                        <View wrap={false} style={styles.premisesDetailsContainer}>\r\n\r\n\r\n                            <View style={styles.propertyNumberColumn}>\r\n                                <Text style={styles.propertyNumber}>{index + 1}</Text>\r\n                                <Text style={styles.propertyHeading}>{property.propertyName}</Text>\r\n                            </View>\r\n\r\n\r\n\r\n                            <Text style={[styles.propertyText, { marginLeft: 20 }]}>{`${property.address}, ${property.suburb} `}</Text>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <Text style={styles.premisesDetailsHeading} >Premises Details</Text>\r\n\r\n\r\n                            <View style={styles.premisesHeadings}>\r\n                                <View style={[styles.premisesContainer, { width: 80 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 80, textAlign: \"left\", marginLeft: 5 }]} >Floor/ Unit</Text>\r\n                                    <Text style={styles.premisesHeadingSubText} ></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={styles.premisesHeadingText} >Area</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}>m²</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={styles.premisesHeadingText} >Gross Rental</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 50 }]}>R/m²/month</Text>\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n\r\n                            {selectedPropertyList[index].premisesList!.map((premises, index) => (\r\n                                <View style={index % 2 !== 0 ? styles.premisesDetails : [styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]}>\r\n                                    <View style={[styles.premisesContainer, { width: 80 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 80, textAlign: \"left\", marginLeft: 5 }]} >{premises.floor}</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{premises.area}</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{premises.grossRental}</Text>\r\n                                    </View>\r\n\r\n\r\n                                </View>\r\n\r\n\r\n                            ))}\r\n\r\n                            <View style={(selectedPropertyList[index].premisesList!.length) % 2 !== 0 ? styles.premisesDetails : [styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]}>\r\n                                <View style={[styles.premisesContainer, { width: 80 }]}>\r\n                                    {/*  <Text style={styles.premisesText} >{premises.floor}</Text> */}\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} > {selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.area!\r\n                                        }, 0) : 0\r\n                                    } </Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    {/*  <Text style={[styles.premisesText, { width: 50 }]} >{premises.grossRental}</Text> */}\r\n                                </View>\r\n\r\n\r\n                            </View>\r\n\r\n                            <Text style={styles.parkingDetailsHeading} >Parking Details</Text>\r\n\r\n                            <View style={styles.premisesHeadings}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40, textAlign: \"left\", marginLeft: 5 }]} >Type</Text>\r\n                                    {<Text style={[styles.premisesHeadingSubText, { width: 40 }]} ></Text>}\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Bays</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}></Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 40 }]} >Ratio</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 40 }]}>bays/100m²</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesHeadingText, { width: 50 }]} >Avg Rate</Text>\r\n                                    <Text style={[styles.premisesHeadingSubText, { width: 50 }]}>R/bay/month</Text>\r\n                                </View>\r\n\r\n                            </View>\r\n\r\n                            {selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                return acc + premises.coveredRate!\r\n                            }, 0) > 0 ?\r\n                            <View style={[styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Covered</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0  && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.coveredBays!\r\n                                            }, 0)> 0?\r\n                                        selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.coveredBays!\r\n                                        }, 0) : \"-\"\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0  && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.coveredBays!\r\n                                            }, 0)> 0?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.coveredBays!\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.area!\r\n                                        }, 0) * 100).toFixed(1) : \"-\"\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.coveredBays! === 0) {\r\n                                                return acc + premises.coveredRate!\r\n                                            } else {\r\n                                                return acc + (premises.coveredRate! * premises.coveredBays!)\r\n                                            }\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.coveredBays! === 0) {\r\n                                                return acc + 1\r\n                                            } else {\r\n                                                return acc + premises.coveredBays!\r\n                                            }\r\n                                        }, 0)).toFixed(2) : 0\r\n                                    }</Text>\r\n                                </View>\r\n                            </View>: <Text></Text>}\r\n\r\n                            {selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                return acc + premises.shadedRate!\r\n                            }, 0) > 0 ?\r\n                            <View style={[styles.premisesDetails]}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Shaded</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0  && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.shadedBays!\r\n                                            }, 0)> 0?\r\n                                        selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.shadedBays!\r\n                                        }, 0) : \"-\"\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0  && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.shadedBays!\r\n                                            }, 0)> 0?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.shadedBays!\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.area!\r\n                                        }, 0) * 100).toFixed(1) : \"-\"\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.shadedBays! === 0) {\r\n                                                return acc + premises.shadedRate!\r\n                                            } else {\r\n                                                return acc + (premises.shadedRate! * premises.shadedBays!)\r\n                                            }\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.shadedBays! === 0) {\r\n                                                return acc + 1\r\n                                            } else {\r\n                                                return acc + premises.shadedBays!\r\n                                            }\r\n                                        }, 0)).toFixed(2) : 0\r\n                                    }</Text>\r\n                                </View>\r\n                            </View>: <Text></Text>}\r\n\r\n                            {selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                return acc + premises.openRate!\r\n                            }, 0) > 0 ?\r\n                                <View style={[styles.premisesDetails, { backgroundColor: \"#ede6e6\" }]}>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Open</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >\r\n                                            {selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.openBays!\r\n                                            }, 0)> 0?\r\n                                            selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.openBays!\r\n                                            }, 0) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.openBays!\r\n                                            }, 0)> 0?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.openBays!\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                return acc + premises.area!\r\n                                            }, 0) * 100).toFixed(1) : \"-\"\r\n                                        }</Text>\r\n                                    </View>\r\n                                    <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                        <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                            (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.openBays! === 0) {\r\n                                                    return acc + premises.openRate!\r\n                                                } else {\r\n                                                    return acc + (premises.openRate! * premises.openBays!)\r\n                                                }\r\n                                            }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                                if (premises.openBays! === 0) {\r\n                                                    return acc + 1\r\n                                                } else {\r\n                                                    return acc + premises.openBays!\r\n                                                }\r\n                                            }, 0)).toFixed(2) : 0\r\n                                        }</Text>\r\n                                    </View>\r\n                                </View> : <Text></Text>}\r\n\r\n                            <View style={[styles.premisesDetails]}>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { textAlign: \"left\" }]} >Overall</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.openBays! === 0 && premises.shadedBays! === 0 && premises.coveredBays! === 0) {\r\n                                                return acc + premises.parkingRatio! * (premises.area! / 100)\r\n                                            } else {\r\n                                                return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                            }\r\n                                        }, 0) : 0\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 40 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 40 }]} >{selectedPropertyList[index].premisesList!.length !== 0 ?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            if (premises.openBays! === 0 && premises.shadedBays! === 0 && premises.coveredBays! === 0) {\r\n                                                return acc + premises.parkingRatio! * (premises.area! / 100)\r\n                                            } else {\r\n                                                return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                            }\r\n\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.area!\r\n                                        }, 0) * 100).toFixed(1) : 0\r\n                                    }</Text>\r\n                                </View>\r\n                                <View style={[styles.premisesContainer, { width: 50 }]}>\r\n                                    <Text style={[styles.premisesText, { width: 50 }]} >{selectedPropertyList[index].premisesList!.length !== 0 && selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                        }, 0) > 0 ?\r\n                                        (selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n\r\n                                            return acc + (premises.openRate! * premises.openBays!) + (premises.shadedRate! * premises.shadedBays!) + (premises.coveredRate! * premises.coveredBays!)\r\n                                        }, 0) / selectedPropertyList[index].premisesList!.reduce((acc, premises) => {\r\n                                            return acc + premises.openBays! + premises.shadedBays! + premises.coveredBays!\r\n                                        }, 0)).toFixed(2) : \"-\"\r\n                                    }</Text>\r\n                                </View>\r\n                            </View>\r\n\r\n\r\n\r\n\r\n\r\n                            <View>\r\n\r\n                                <View style={[styles.premisesInfo, { marginTop: 20 }]}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75 }]}>Occupation:</Text>\r\n                                    <Text style={styles.premisesInfoText}>{`${getEarliestOccDate(selectedPropertyList[index].premisesList!)} +`}\r\n                                    </Text>\r\n\r\n                                </View>\r\n\r\n                                <View style={styles.premisesInfo}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75 }]}>Escalation:</Text>\r\n                                    {getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0] !== undefined ? \r\n                                    <Text style={styles.premisesInfoText}>{getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0] !== getLowestHighestEsc(selectedPropertyList[index].premisesList!)[1] ?\r\n                                     `${getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0]}% to ${getLowestHighestEsc(selectedPropertyList[index].premisesList!)[1]}% `\r\n                                     : `${getLowestHighestEsc(selectedPropertyList[index].premisesList!)[0]}`}\r\n                                    </Text> : <Text></Text>}\r\n\r\n                                </View>\r\n\r\n                                {property.notes !== \"\" ? <View  style={[styles.premisesInfo, {flexDirection:\"column\"}]}>\r\n                                    <Text style={[styles.premisesInfoHeadings, { width: 75, marginLeft: 0 }]}>Notes:</Text>\r\n                                   \r\n                                    <Text style={[styles.premisesInfoText, {marginLeft: 0, fontSize: 8}]}>{property.notes}</Text> \r\n                                    \r\n\r\n                                </View>: <Text></Text>}\r\n\r\n                            </View>\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    {property.images?.slice(1).map((image) => (\r\n\r\n                        <View style={styles.secondaryImageContainers} >\r\n                            {selectedPropertyList[index].images!.length !== 0 ? <Image style={styles.secondaryImage} src={cl.url(`${image}`, /* { width: 600, crop: \"fit\" } */)}></Image> : <Text></Text>}\r\n                        </View>\r\n\r\n                    ))}\r\n\r\n                </View>\r\n\r\n\r\n            ))}\r\n\r\n            <View fixed style={styles.footerSection}>\r\n                <View style={styles.footerImageSection}>\r\n                    <Image style={styles.footerImageStyles} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610187102/EBLogoHeader_ypjyj5.jpg\"></Image>\r\n                </View>\r\n            </View>\r\n\r\n\r\n        </Page>\r\n        <Page orientation=\"landscape\" size=\"A4\" style={styles.contactPage}>\r\n            <View fixed style={styles.headerSection}>\r\n\r\n                <Text style={styles.headerText}>Contact</Text>\r\n\r\n\r\n            </View>\r\n            <Image style={styles.contactPageBackground} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610357459/lion_light_dptptx.jpg\"></Image>\r\n\r\n            <Text style={styles.contactPageText1} >For further information, please contact:</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined ? agent.name : \"\"}</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined ? agent.mobile : \"\"}</Text>\r\n            <Text style={styles.contactPageText2} >{agent !== undefined ? agent.email : \"\"}</Text>\r\n\r\n            <Text style={styles.contactPageText3} >Whilst every effort has been made to ensure accuracy, no liability will be accepted for any errors or omissions and the prospective tenant/ purchaser is required to verify details prior to contract</Text>\r\n\r\n            <View fixed style={styles.footerSection}>\r\n                <View style={styles.footerImageSection}>\r\n                    <Image style={styles.footerImageStyles} src=\"https://res.cloudinary.com/drlfedqyz/image/upload/v1610187102/EBLogoHeader_ypjyj5.jpg\"></Image>\r\n                </View>\r\n            </View>\r\n\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nexport default PropertyListLargeImagesPDF","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\NewPremisesModal.tsx",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PremisesNotesModal.tsx",["467","468","469","470","471","472","473","474","475","476","477","478","479"],"import * as React from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    Toggle,\r\n    DefaultButton,\r\n    Modal,\r\n    IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n    ILayerProps,\r\n    IModalProps,\r\n    Stack,\r\n    Text,\r\n    IStackStyles\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { GET_SINGLE_PROPERTY, } from \"../gql/gql\"\r\nimport { Query, NavigationState } from \"../schematypes/schematypes\"\r\nimport { useQuery, } from '@apollo/client';\r\nimport { navigationState as navigationStateVar } from \"../reactivevariables/reactivevariables\"\r\n\r\n\r\n\r\n\r\n\r\ntype Maybe<T> = T | null;\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\ninterface Props {\r\n    propertyId: number\r\n    premisesId: number\r\n    showPremisesNotesModal: boolean;\r\n    /* imagesArray: Maybe<string>[] */\r\n}\r\n\r\nconst PremisesNotesModal: React.FC<Props> = ({ showPremisesNotesModal, propertyId, premisesId  }) => {\r\n\r\n    \r\n\r\n    const {\r\n        data: propertyData,\r\n        loading: propertyLoading,\r\n        error: propertyError\r\n    } = useQuery<Query>(GET_SINGLE_PROPERTY, {\r\n        variables: { propertyId: propertyId },\r\n    });\r\n\r\n    const getPremises = propertyData?.singleProperty?.premisesList!.find(premises => premises?.premisesId === premisesId);\r\nconsole.log(propertyData)\r\nconsole.log(getPremises)\r\nconsole.log(premisesId)\r\n\r\n    /* const {\r\n      data: navigationStateData,\r\n      loading: navigationLoading,\r\n      error: navigationError\r\n    } = useQuery<Query>(GET_NAV_STATE);\r\n  \r\n    \r\n  const navStateQuery =() => {\r\n      const {\r\n          data: navigationStateData,\r\n          loading: navigationLoading,\r\n          error: navigationError\r\n        } = useQuery<Query>(GET_NAV_STATE);\r\n  \r\n  } */\r\n\r\n\r\n    /* console.log(navigationStateData?.navigationState) */\r\n\r\n    const hidePremisesNotesModal = () => {\r\n        navigationStateVar({ ...navigationStateVar(), showPremisesNotesModal: false })\r\n    }\r\n\r\n    const modalProps: IModalProps = {\r\n        isBlocking: false,\r\n        styles: { main: { maxWidth: 450 } },\r\n    };\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const propertyDetailsStyles = { alignSelf: \"start\", fontSize: \"18px\", paddingLeft: \"15px\" }\r\n\r\n    /* const onLayerDidMount: ILayerProps ={\r\n        onLayerDidMount: true\r\n    } */\r\n\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n    const titleId = useId('ImageGallery');\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                titleAriaId={titleId}\r\n                isOpen={showPremisesNotesModal}\r\n                /* onDismiss={hideImageGalleryModal} */\r\n                isBlocking={true}\r\n                containerClassName={contentStyles.container}\r\n            /* modalProps={modalProps} */\r\n            /*  layerProps={onLayerDidMount} */\r\n\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>Notes</span>\r\n                    <IconButton\r\n                        styles={iconButtonStyles}\r\n                        iconProps={cancelIcon}\r\n                        ariaLabel=\"Close image gallery\"\r\n                        onClick={hidePremisesNotesModal}\r\n                    />\r\n                </div>\r\n                <div className={contentStyles.body}>\r\n\r\n                    <Stack verticalFill styles={{\r\n                        root: {\r\n                            marginTop: \"0 !important\",\r\n                            marginBottom: 20,\r\n                        },\r\n                    }}\r\n                        gap={15}>\r\n                        <Text styles={boldStyle} style={propertyDetailsStyles}>Premises Notes:</Text>\r\n                        <Text /* styles={boldStyle} */ style={propertyDetailsStyles}>{getPremises?.premisesNotes}</Text>\r\n                        \r\n                        \r\n                    </Stack>\r\n\r\n                    <Stack verticalFill styles={{\r\n                        root: {\r\n                            marginTop: \"0 !important\"\r\n                        },\r\n                    }}\r\n                        gap={15}>\r\n                        <Text styles={boldStyle} style={propertyDetailsStyles}>Tenant Notes:</Text>\r\n                        <Text /* styles={boldStyle} */ style={propertyDetailsStyles}>{getPremises?.tenantNotes}</Text>\r\n                        \r\n                        \r\n                    </Stack>\r\n\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        width: 500\r\n    },\r\n    header: [\r\n\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\nconst toggleStyles = { root: { marginBottom: '20px' } };\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: 'auto',\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n};\r\n\r\nexport default PremisesNotesModal","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PremisesList.tsx",["480","481","482","483","484","485","486","487","488"],"import * as React from 'react';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Property } from \"../schematypes/schematypes\"\r\nimport { useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport PremisesListItem from \"./PremisesListItem\"\r\nimport { Text, Stack, ITextStyles, IStyleFunctionOrObject, IconButton, IIconProps } from 'office-ui-fabric-react';\r\n/* import { DeepPartial  } from 'office-ui-fabric-react/lib/Styling'; */\r\nimport { TooltipHost, ITooltipHostStyles, ITooltipHostStyleProps, } from 'office-ui-fabric-react/lib/Tooltip';\r\nimport { useId } from '@uifabric/react-hooks';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nconst calloutProps = { gapSpace: 0 };\r\n// The TooltipHost root uses display: inline by default.\r\n// If that's causing sizing issues or tooltip positioning issues, try overriding to inline-block.\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    singleProperty: Property | undefined\r\n}\r\n\r\nexport const PremisesList: React.FunctionComponent<Props> = ({ singleProperty }) => {\r\n\r\n   \r\n\r\n    const tooltipNetRentalId = useId('NetRental');\r\n    const tooltipOpCostsId = useId('NetRental');\r\n    const tooltipOtherId = useId('NetRental');\r\n    const tooltipGrossRentalId = useId('NetRental');\r\n    const tooltipOpenRateId = useId('NetRental');\r\n    const tooltipCoveredRateId = useId('NetRental');\r\n    const tooltipShadedRateId = useId('NetRental');\r\n    const tooltipEscId = useId('NetRental');\r\n    const tooltipParkingRatioId = useId('NetRental');\r\n\r\n    const tooltipHostStyles: IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles> = { root: { display: \"flex\" } }\r\n\r\n    var originalPropertyData = singleProperty\r\n    var originalPremises = originalPropertyData!.premisesList!\r\n    var indexSortedPremises = originalPremises.slice().sort((a, b) => {\r\n        return (a.premisesIndex!) - (b.premisesIndex!)\r\n    });\r\n\r\n    var floorSortedPremises = indexSortedPremises.slice().sort((a, b) => {\r\n        var floorA = a.floor!.toUpperCase();\r\n        var floorB = b.floor!.toUpperCase();\r\n        if (floorA < floorB && a.premisesIndex=== b.premisesIndex) {\r\n            return -1;\r\n        }\r\n        if (floorA > floorB && a.premisesIndex=== b.premisesIndex) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n\r\n\r\n    const tableCellStyles: ITextStyles = { root: { alignSelf: \"start\", fontSize: \"14px\", padding: 5, marginTop: \"auto !important\", marginBottom: \"auto\", width: 45, /* fontStyle : \"italic\", */ fontWeight: 600, } }\r\n    const tableHeadingStyles: ITextStyles = { root: { fontSize: \"18px\", paddingTop: 5, fontWeight: 600, } }\r\n    const tableCellBelowStyles: ITextStyles = { root: { alignSelf: \"start\", fontSize: \"10px\", padding: 0, marginTop: \"auto !important\", marginBottom: \"auto\", width: 50, } }\r\n    const theme = getTheme();\r\n    const iconButtonStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            marginLeft: 20,\r\n            marginTop: '0px !important',\r\n            marginRight: 5,\r\n            width: 35,\r\n            height: 35,\r\n            /*  visibility: isChecked() ? \"visible\" : \"hidden\", */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n            backgroundColor: \"rgb(3 122 212 / 16%);\",\r\n            /* borderRadius: 30, */\r\n            \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\"\r\n\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n            marginLeft: 6\r\n\r\n        }\r\n    };\r\n\r\n    const addIcon: IIconProps = { iconName: 'Add' };\r\n\r\n    /* const onFilterChanged = (_: any, text: string): void => {\r\n      setItems(originalItems.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0));\r\n    }; */\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Stack\r\n                horizontalAlign=\"start\"\r\n                verticalAlign=\"start\"\r\n                id=\"card\"\r\n\r\n                styles={{\r\n                    root: {\r\n                        width: \"fit-content\",\r\n                        marginBottom: 10,\r\n                        marginTop: 20,\r\n                        marginLeft: 50,\r\n                        marginRight: \"auto\",\r\n                        /* padding: '10px', */\r\n                        textAlign: 'center',\r\n                        color: '#605e5c',\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexFlow: \"row\",\r\n                        /*  borderTop: \"4px solid #2557a2;\",\r\n                         borderBottom: \"4px solid #2557a2;\", */\r\n                        backgroundColor: \"white\",\r\n                        /*  background: isChecked() ? \"rgb(104 113 140 / 14%)\" : \"white\", */\r\n                        /* boxShadow: \"-1px 1px 7px 2px #d4cece\", */\r\n                        /* selectors: {\r\n                            '&:hover': { background:   \"rgb(104 113 140 / 14%)\" },\r\n                        }, */\r\n\r\n                    }\r\n                }}\r\n            >\r\n\r\n                {/*  <Stack verticalAlign=\"start\" horizontalAlign=\"start\" styles={{\r\n                    root: {\r\n                        textAlign: 'center',\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexFlow: \"row\",\r\n                    }\r\n                }}>\r\n                    <div style={{ width: 50, display: \"flex\" }}></div>\r\n                    <div style={{ width: 350, display: \"flex\" }}>Premises Details</div>\r\n                    <div style={{ width: 250, display: \"flex\" }}>Rental Details</div>\r\n                    <div style={{ width: 390, display: \"flex\" }}>Parking Details</div>\r\n                    <div style={{ width: 275, display: \"flex\" }}>Tenant Details</div>\r\n                    <div style={{ width: 50, display: \"flex\" }}></div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Stack> */}\r\n\r\n                <Stack verticalAlign=\"start\" horizontalAlign=\"start\" styles={{\r\n                    root: {\r\n                        textAlign: 'center',\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexFlow: \"row\",\r\n                    }\r\n                }}>\r\n\r\n                    <div style={{ width: 80, display: \"flex\" }}>\r\n                        <IconButton\r\n                            styles={iconButtonStyles}\r\n                            iconProps={addIcon}\r\n                            ariaLabel=\"Add Premises\"\r\n                            onClick={() => navigationState({ ...navigationState(), showNewPremisesModal: true })}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(210 26 69 / 42%)\",\r\n                        borderRight: \"3px solid rgb(210 26 69 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(210 26 69 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Premises Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <Text styles={tableCellStyles} style={{ width: 100 }}>Floor/ Unit</Text>\r\n                            <Text styles={tableCellStyles}>Area</Text>\r\n                            <Text styles={tableCellStyles}>Vacant</Text>\r\n                            <Text styles={tableCellStyles} style={{ width: 55 }}>Type</Text>\r\n                            <Text styles={tableCellStyles} style={{ width: 100 }}>Occupation Date</Text>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(63 55 189 / 42%)\",\r\n                        borderRight: \"3px solid rgb(63 55 189 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(63 55 189 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Rental Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipNetRentalId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Net Rental</Text> </TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipOpCostsId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Op Costs</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipOtherId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Other Costs</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/m²/month\" id={tooltipGrossRentalId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Gross Rental</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"annual %\" id={tooltipEscId} calloutProps={calloutProps}> <Text styles={tableCellStyles}>Esc</Text></TooltipHost>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(61 177 123 / 42%)\",\r\n                        borderRight: \"3px solid rgb(61 177 123 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(61 177 123 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Parking Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <Text styles={tableCellStyles}>Open Bays</Text>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipOpenRateId} calloutProps={calloutProps}><Text styles={tableCellStyles}>Open Rate</Text></TooltipHost>\r\n                            <Text styles={tableCellStyles} style={{ width: 50 }}>Covered Bays</Text>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipCoveredRateId} calloutProps={calloutProps}> <Text styles={tableCellStyles} style={{ width: 50 }}>Covered Rate</Text></TooltipHost>\r\n                            <Text styles={tableCellStyles} style={{ width: 50 }}>Shaded Bays</Text>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipShadedRateId} calloutProps={calloutProps}><Text styles={tableCellStyles} style={{ width: 50 }}>Shaded Rate</Text></TooltipHost>\r\n                            <TooltipHost styles={tooltipHostStyles} content=\"R/bay/month\" id={tooltipParkingRatioId} calloutProps={calloutProps}><Text styles={tableCellStyles} style={{ width: 50 }}>Parking Ratio</Text></TooltipHost>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        borderTop: \"3px solid rgb(212 236 10 / 42%)\",\r\n                        borderRight: \"3px solid rgb(212 236 10 / 42%)\",\r\n                        borderLeft: \"3px solid rgb(212 236 10 / 42%)\",\r\n                        marginRight: 2,\r\n                        marginLeft: 2,\r\n                    }}>\r\n                        <Text styles={tableHeadingStyles}>Tenant Details</Text>\r\n                        <div style={{ display: \"flex\", flexFlow: \"row\" }}>\r\n                            <Text styles={tableCellStyles} style={{ width: 125 }}>Tenant Name <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></Text>\r\n                            <Text styles={tableCellStyles} style={{ width: 100 }}>Lease Expiry <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> </Text>\r\n                        </div>\r\n                    </div>\r\n                    <Text style={{ width: 60 }} styles={tableCellStyles}>Notes</Text>\r\n                </Stack>\r\n            </Stack>\r\n\r\n\r\n            {floorSortedPremises.map(premises => {\r\n\r\n                return (\r\n                    <PremisesListItem key={premises?.premisesId} premises={premises!} propertyId={singleProperty?.propertyId!}> </PremisesListItem>\r\n                )\r\n\r\n            })}\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PremisesList","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\ImageGalleryModal.tsx",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503"],"import * as React from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport {\r\n  getTheme,\r\n  mergeStyleSets,\r\n  FontWeights,\r\n  ContextualMenu,\r\n  Toggle,\r\n  DefaultButton,\r\n  Modal,\r\n  IDragOptions,\r\n  IconButton,\r\n  IIconProps,\r\n  ILayerProps,\r\n  IModalProps\r\n} from 'office-ui-fabric-react';\r\n\r\nimport { GET_NAV_STATE, } from \"../gql/gql\"\r\nimport { Query, NavigationState } from \"../schematypes/schematypes\"\r\nimport { gql, useQuery, } from '@apollo/client';\r\nimport {navigationState as navigationStateVar} from \"../reactivevariables/reactivevariables\"\r\nimport ImageSlider from \"./ImageSlider\"\r\n\r\ntype Maybe<T> = T | null;\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\ninterface Props {\r\n    propertyId: number;\r\n    showImageGalleryModal: boolean;\r\n    /* imagesArray: Maybe<string>[] */\r\n}\r\n\r\nconst ImageGalleryModal: React.FC<Props> = ({showImageGalleryModal, propertyId}) => {\r\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n  \r\n  /* const {\r\n    data: navigationStateData,\r\n    loading: navigationLoading,\r\n    error: navigationError\r\n  } = useQuery<Query>(GET_NAV_STATE);\r\n\r\n  \r\nconst navStateQuery =() => {\r\n    const {\r\n        data: navigationStateData,\r\n        loading: navigationLoading,\r\n        error: navigationError\r\n      } = useQuery<Query>(GET_NAV_STATE);\r\n\r\n} */\r\n\r\n\r\n  /* console.log(navigationStateData?.navigationState) */\r\n\r\n  const hideImageGalleryModal = () => {\r\n    navigationStateVar({ ...navigationStateVar(), showImageGalleryModal: false })\r\n}\r\n\r\nconst modalProps: IModalProps = {\r\n    isBlocking: false,\r\n    styles: { main: { maxWidth: 450 } },\r\n  };\r\n\r\n/* const onLayerDidMount: ILayerProps ={\r\n    onLayerDidMount: true\r\n} */\r\n\r\n  // Use useId() to ensure that the IDs are unique on the page.\r\n  // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n  const titleId = useId('ImageGallery');\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Modal\r\n        titleAriaId={titleId}\r\n        isOpen={showImageGalleryModal}\r\n        onDismiss={hideModal}\r\n        isBlocking={true}\r\n        containerClassName={contentStyles.container}\r\n        /* modalProps={modalProps} */\r\n       /*  layerProps={onLayerDidMount} */\r\n        \r\n      >\r\n        <div className={contentStyles.header}>\r\n          <span id={titleId}>Image Gallery</span>\r\n          <IconButton\r\n            styles={iconButtonStyles}\r\n            iconProps={cancelIcon}\r\n            ariaLabel=\"Close image gallery\"\r\n            onClick={hideImageGalleryModal}\r\n          />\r\n        </div>\r\n        <div className={contentStyles.body}>\r\n        <ImageSlider propertyId={propertyId} ></ImageSlider>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    alignItems: 'stretch',\r\n  },\r\n  header: [\r\n    \r\n    theme.fonts.xLargePlus,\r\n    {\r\n      flex: '1 1 auto',\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      fontWeight: FontWeights.semibold,\r\n      padding: '12px 12px 14px 24px',\r\n    },\r\n  ],\r\n  body: {\r\n    flex: '4 4 auto',\r\n    padding: '0 24px 24px 24px',\r\n    overflowY: 'hidden',\r\n    selectors: {\r\n      p: { margin: '14px 0' },\r\n      'p:first-child': { marginTop: 0 },\r\n      'p:last-child': { marginBottom: 0 },\r\n    },\r\n  },\r\n});\r\nconst toggleStyles = { root: { marginBottom: '20px' } };\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: 'auto',\r\n    marginTop: '4px',\r\n    marginRight: '2px',\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n\r\nexport default ImageGalleryModal","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\Map.tsx",["504","505","506","507","508"],"import React, { useState, useEffect } from 'react';\r\nimport MapGL, { Marker, NavigationControl } from 'react-map-gl';\r\nimport Pin from \"../assets/pin\";\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport {\r\n    FontWeights,\r\n    Text,\r\n    IconButton,\r\n    getTheme,\r\n    IIconProps\r\n    \r\n} from 'office-ui-fabric-react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { UPDATE_COORDINATES, GET_SINGLE_PROPERTY } from \"../gql/gql\"\r\nimport { Mutation, MutationUpdatePropertyArgs, Query } from \"../schematypes/schematypes\"\r\n\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\r\n\r\ninterface Props {\r\n    coordinatesArray: string[] | undefined,\r\n    propertyId: number\r\n}\r\n\r\nexport const Map: React.FC<Props> = ({ coordinatesArray, propertyId }) => {\r\n\r\n    const [updateProperty, { data }] = useMutation<Mutation, MutationUpdatePropertyArgs>(UPDATE_COORDINATES);\r\n\r\n    const saveUpdatedCoordinates = () => {\r\n\r\n        updateProperty({\r\n            variables: {\r\n                propertyId: propertyId,\r\n                coordinates: `${marker.latitude},${marker.longitude}`\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n\r\n                const updatedProperty = data.updateProperty!;\r\n                console.log(updatedProperty)\r\n                if (getExistingProperty)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId },\r\n                        data: { singleProperty: updatedProperty }\r\n                    });\r\n            }\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n\r\n    var latitude = -33.973564350686324\r\n    var longitude = 18.456012615707248\r\n\r\n    if (coordinatesArray !== undefined && coordinatesArray !== null && isNaN(Number(coordinatesArray[0])) === false && isNaN(Number(coordinatesArray[1])) === false) {\r\n        latitude = Number(coordinatesArray[0])\r\n        longitude = Number(coordinatesArray[1])\r\n    } else {\r\n        latitude = -33.973564350686324\r\n        longitude = 18.456012615707248\r\n\r\n    }\r\n\r\n    const navStyle: any = {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const dropdownStyle: any = {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const coordinatesStyle: any = {\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        left: \"35%\",\r\n        margin: 10,\r\n        paddingLeft: '5px',\r\n        border: \"1px solid\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"white\"\r\n    };\r\n\r\n    const theme = getTheme();\r\n    const saveIconStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n             marginLeft: 5,\r\n             \r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n        },\r\n        icon: {\r\n            fontSize: \"16px\",\r\n\r\n        }\r\n    };\r\n\r\n    const saveIcon: IIconProps = { iconName: 'Save' };\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: 600,\r\n        height: 400,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n        zoom: 15\r\n    });\r\n\r\n\r\n    const [marker, setMarker] = useState({\r\n        latitude: latitude,\r\n        longitude: longitude\r\n    });\r\n\r\n    console.log(marker)\r\n\r\n    const handleDragEnd: any | undefined = (event: any) => {\r\n\r\n        setMarker({\r\n            longitude: event.lngLat[0],\r\n            latitude: event.lngLat[1]\r\n        })\r\n    }\r\n\r\n    const mapTypeOptions = [\r\n\r\n        { key: \"mapbox://styles/mapbox/outdoors-v11\", text: 'Default' },\r\n        { key: \"mapbox://styles/mapbox/satellite-streets-v11\", text: 'Satelite' },\r\n    \r\n    ];\r\n\r\n\r\n\r\n    const [selectedMapType, setSelectedMapType] = React.useState<IDropdownOption>({ key: \"mapbox://styles/mapbox/outdoors-v11\", text: 'Default' });\r\n\r\n\r\n\r\n    const onChangeMapType = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption | undefined): void => {\r\n        if (item !== undefined) {\r\n            setSelectedMapType(item);\r\n           \r\n        }\r\n    };\r\n\r\n    const dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 100, marginRight: 5 } };\r\n\r\n    return (\r\n        <MapGL\r\n            {...viewport}\r\n            /* width=\"100%\"\r\n            height=\"100%\" */\r\n            mapStyle={String(selectedMapType.key)}\r\n            onViewportChange={setViewport}\r\n            mapboxApiAccessToken={MAPBOX_TOKEN}\r\n        >\r\n            <Marker\r\n                longitude={marker.longitude}\r\n                latitude={marker.latitude}\r\n                offsetTop={-20}\r\n                offsetLeft={-10}\r\n                draggable\r\n                /* onDragStart={this._onMarkerDragStart}\r\n                onDrag={this._onMarkerDrag} */\r\n                onDragEnd={handleDragEnd}\r\n            >\r\n                <Pin size={20} />\r\n            </Marker>\r\n\r\n            <div className=\"nav\" style={navStyle}>\r\n                <NavigationControl onViewportChange={setViewport} />\r\n            </div>\r\n\r\n            <div className=\"dropdown\" style={dropdownStyle}>\r\n            <Dropdown\r\n                                \r\n                                selectedKey={selectedMapType ? selectedMapType.key : undefined}\r\n                                // eslint-disable-next-line react/jsx-no-bind\r\n                                onChange={onChangeMapType}\r\n                                placeholder=\"Select type\"\r\n                                options={mapTypeOptions}\r\n                                styles={dropdownStyles}\r\n                            />\r\n            </div>\r\n\r\n            <div className=\"coordinates\" style={coordinatesStyle}>\r\n                \r\n                <Text>{`${marker.latitude.toFixed(4)} ,${marker.longitude.toFixed(4)}`}</Text>\r\n                <IconButton\r\n                    styles={saveIconStyles}\r\n                    iconProps={saveIcon}\r\n                    ariaLabel=\"Close panel\"\r\n                    onClick={saveUpdatedCoordinates}\r\n                />\r\n            </div>\r\n\r\n            \r\n\r\n\r\n        </MapGL>\r\n\r\n    );\r\n}\r\n\r\nexport default Map;","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PropertyListItem.tsx",["509","510","511","512","513","514","515","516","517","518","519","520","521","522","523"],"import * as React from 'react';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Property, Mutation, MutationDeletePropertyArgs } from \"../schematypes/schematypes\"\r\nimport { GET_SELECTED_PROPERTIES, GET_PROPERTIES, DELETE_PROPERTY } from \"../gql/gql\"\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport { mergeStyles, registerIcons } from 'office-ui-fabric-react/lib/Styling';\r\nimport { CommandBarButton, IContextualMenuProps, Stack, Text, FontWeights, IconButton, IIconProps, IStackStyles, initializeIcons, DefaultButton, FocusTrapCallout, FocusZone, PrimaryButton, mergeStyleSets, } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { IndustrialIcon, RetailIcon, OfficeIcon, MixedUseIcon } from \"../assets/svgIcons.js\"\r\nimport { FontIcon } from 'office-ui-fabric-react/lib/Icon';\r\nimport {navigationState} from \"../reactivevariables/reactivevariables\"\r\nimport \"./PropertyListItem.css\"\r\n\r\n\r\ninterface Props {\r\n  property: Property\r\n  key: any\r\n}\r\n\r\nexport const PropertyListItem: React.FunctionComponent<Props> = ({ property }) => {\r\n\r\n  registerIcons({\r\n    icons: {\r\n      'office': <OfficeIcon></OfficeIcon>,\r\n      'industrial': <IndustrialIcon></IndustrialIcon>,\r\n      'retail': <RetailIcon></RetailIcon>,\r\n      'mixeduse': <MixedUseIcon></MixedUseIcon>\r\n    }\r\n  })\r\n\r\n\r\n\r\n  const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n\r\n  const {\r\n    data,\r\n    loading,\r\n    error\r\n  } = useQuery<Query>(GET_SELECTED_PROPERTIES);\r\n\r\n\r\n\r\n\r\n\r\n var selectedProperties = data!.selectedPropertyList!\r\n\r\n   console.log(selectedProperties)\r\n\r\n\r\n  const onCheckProperty = React.useCallback((): void => {\r\n\r\n    const found = !!selectedPropertyList().find((t) => t.propertyId === property.propertyId);\r\n\r\n    console.log(found)\r\n    console.log(selectedPropertyList())\r\n    if (found) {\r\n      selectedPropertyList(\r\n        selectedProperties.filter((t) => t.propertyId !== property.propertyId)\r\n      )\r\n    } else {\r\n      selectedPropertyList(\r\n        selectedProperties.concat(property)\r\n      )\r\n    }\r\n\r\n  }, [selectedProperties]);\r\n\r\n  var isChecked = () => {\r\n    const found = !!selectedProperties.find((t) => t.propertyId === property.propertyId);\r\n    console.log(found)\r\n    if (found) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const [deleteProperty, { data: deletePropertyData }] = useMutation<Mutation, MutationDeletePropertyArgs>(DELETE_PROPERTY);\r\n\r\n  const deletePropertyButton = () => {\r\n\r\n    deleteProperty({\r\n      variables: {\r\n        propertyId: property.propertyId\r\n      },\r\n      update(cache, { data }) {\r\n\r\n        if (!data) {\r\n          return null;\r\n        }\r\n\r\n        const getExistingProperties = cache.readQuery<Query>({ query: GET_PROPERTIES });\r\n        // Add the new todo to the cache\r\n        const existingProperties = getExistingProperties ? getExistingProperties.properties : [];\r\n        const newProperties = existingProperties!.filter(t => {\r\n          if (t)\r\n            return (t.propertyId !== property.propertyId)\r\n        });  /* .returning[0] */;\r\n        if (existingProperties)\r\n          cache.writeQuery<Query>({\r\n            query: GET_PROPERTIES,\r\n            data: { properties: newProperties }\r\n          });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const getPropertyIconType =() => {\r\n    var buildingType= \"\"\r\n    switch(property.buildingType) {\r\n      case \"Office\":\r\n        buildingType = \"office\"\r\n        break;\r\n      case \"Industrial\":\r\n        buildingType = \"industrial\"\r\n        break;\r\n        case \"Retail\":\r\n          buildingType = \"retail\"\r\n          break;\r\n        case \"Mixed Use\":\r\n          buildingType = \"mixeduse\"\r\n          break;\r\n      default:\r\n        buildingType = \"mixeduse\"\r\n    }\r\n    return buildingType\r\n  }\r\n\r\n  const handleSelectedPropertyClick = () => {\r\n    navigationState ( {...navigationState(), selectedPropertyId: property.propertyId})\r\n  }\r\n\r\n\r\n  const styles = mergeStyleSets({\r\n    /*  buttonArea: {\r\n       verticalAlign: 'top',\r\n       display: 'inline-block',\r\n       textAlign: 'center',\r\n       margin: '0 100px',\r\n       minWidth: 130,\r\n       height: 32,\r\n     }, */\r\n    callout: {\r\n      maxWidth: 400,\r\n    },\r\n    header: {\r\n      padding: '18px 24px 12px',\r\n    },\r\n    title: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.bold,\r\n      },\r\n    ],\r\n    inner: {\r\n      height: '100%',\r\n      padding: '0 24px 20px',\r\n    },\r\n    actions: {\r\n      position: 'relative',\r\n      marginTop: 20,\r\n      width: '100%',\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 24px 24px',\r\n    },\r\n    subtext: [\r\n      {\r\n        margin: 0,\r\n        fontWeight: FontWeights.semilight,\r\n      },\r\n    ],\r\n  });\r\n\r\n\r\n  const checkClass = {\r\n    root: {\r\n      marginLeft: 5,\r\n      visibility: isChecked() ? \"visible\" : \"hidden\",\r\n    },\r\n    checkbox: {\r\n      borderRadius: \"50%\"\r\n    }\r\n  }\r\n\r\n  const imageClass = mergeStyles({\r\n    width: 100,\r\n    height: 80\r\n\r\n  });\r\n\r\n  const chevronClass = mergeStyles({\r\n    alignSelf: 'center',\r\n    marginLeft: 2,\r\n   /*  marginRight: 5, */\r\n    marginTop: \"0 !important\",\r\n    /* color: palette.neutralTertiary, */\r\n    fontSize: 20,\r\n    flexShrink: 0,\r\n    cursor: \"pointer\",\r\n    /* selectors: {\r\n      '&:hover': { \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\" },\r\n    }, */\r\n\r\n  });\r\n\r\n  const iconClass = mergeStyles({\r\n    fontSize: 50,\r\n    height: 50,\r\n    width: 50,\r\n    \r\n   \r\n    marginLeft:15,\r\n    marginRight:15,\r\n    marginTop: \"-10px !important\",\r\n    padding: \"5px\",\r\n    \r\n    \r\n\r\n});\r\n\r\nconst chevronIconDiv = mergeStyles({\r\n  /* fontSize: 50, */\r\n  height: 40,\r\n  width: 40,\r\n  lineHeight: 40,\r\n  textAlign: \"center\",\r\n  marginLeft:15,\r\n  marginRight:15,\r\n  marginTop: \"0px !important\",\r\n  /* padding: \"5px\", */\r\n  selectors: {\r\n    '&:hover': { backgroundColor: \"rgb(0 13 255 / 14%)\" , borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n  },\r\n\r\n});\r\n\r\n  const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n  const propertyHeadingStyles = { alignSelf: \"start\", fontSize: \"23px\", padding: 5, paddingLeft: \"25px\" }\r\n  const propertyAddressStyles = { alignSelf: \"start\", fontSize: \"14px\", padding: 5, paddingLeft: \"25px\" }\r\n  const theme = getTheme();\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: \"auto\",\r\n      marginTop: '0px !important',\r\n      marginRight: 5,\r\n      width: 40,\r\n      height: 40,\r\n      visibility: isChecked() ? \"visible\" : \"hidden\",\r\n\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n      backgroundColor: \"rgb(255 0 0 / 14%)\",\r\n      borderRadius: 30,\r\n      \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\"\r\n\r\n    },\r\n    icon: {\r\n      fontSize: \"24px\",\r\n      marginLeft: 6\r\n\r\n    }\r\n  };\r\n\r\n  const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n\r\n  return (\r\n\r\n    <Stack\r\n      horizontalAlign=\"start\"\r\n      verticalAlign=\"start\"\r\n      id=\"card\"\r\n\r\n      styles={{\r\n        root: {\r\n          width: 700,\r\n          marginBottom: 10,\r\n          padding: '10px',\r\n          textAlign: 'center',\r\n          color: '#605e5c',\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexFlow: \"row\",\r\n          /*  borderTop: \"4px solid #2557a2;\",\r\n           borderBottom: \"4px solid #2557a2;\", */\r\n          backgroundColor: \"white\",\r\n          background: isChecked() ? \"rgb(104 113 140 / 14%)\" : \"white\",\r\n          boxShadow: \"-1px 1px 7px 2px #d4cece\",\r\n          selectors: {\r\n            '&:hover': { background: /* palette.neutralLight */  \"rgb(104 113 140 / 14%)\" },\r\n          },\r\n\r\n        }\r\n      }}\r\n      gap={15}>\r\n\r\n\r\n\r\n      <Checkbox styles={checkClass} checked={isChecked()} onChange={onCheckProperty} />\r\n      {/* <div className={imageClass}>Image</div> */}\r\n\r\n      <FontIcon iconName={getPropertyIconType()}  className={iconClass} />\r\n\r\n      <Stack styles={{ root: { paddingTop: 0, marginTop: \"0 !important\", marginBottom: \"auto\" } }} verticalFill>\r\n        <Text styles={boldStyle} style={propertyHeadingStyles}>{property.propertyName}</Text>\r\n        <Text style={propertyAddressStyles}>{property.address}<span style={{ paddingLeft: 20, paddingRight: 20 }}>|</span>{property.suburb}<span style={{ paddingLeft: 20, paddingRight: 20 }}>|</span>{property.province} </Text>\r\n\r\n\r\n      </Stack>\r\n      <IconButton\r\n        styles={iconButtonStyles}\r\n        id={`deleteButton${property.propertyId}`}\r\n        iconProps={deleteIcon}\r\n        ariaLabel=\"Delete Property\"\r\n        onClick={toggleIsDeleteCalloutVisible}\r\n      />\r\n      {isDeleteCalloutVisible ? (\r\n        <div>\r\n          <FocusTrapCallout\r\n            role=\"alertdialog\"\r\n            className={styles.callout}\r\n            gapSpace={0}\r\n            target={`#deleteButton${property.propertyId}`}\r\n            onDismiss={toggleIsDeleteCalloutVisible}\r\n            setInitialFocus\r\n          >\r\n            <div className={styles.header}>\r\n              <Text className={styles.title}>Delete Property</Text>\r\n            </div>\r\n            <div className={styles.inner}>\r\n              <div>\r\n                <Text className={styles.subtext}>\r\n                  Are you sure you want to delete this property?\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <FocusZone>\r\n              <Stack className={styles.buttons} gap={8} horizontal>\r\n                <PrimaryButton onClick={deletePropertyButton}>Confirm</PrimaryButton>\r\n                <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n              </Stack>\r\n            </FocusZone>\r\n          </FocusTrapCallout>\r\n        </div>\r\n      ) : null}\r\n<div className={chevronIconDiv} onClick={handleSelectedPropertyClick}><Icon className={chevronClass} iconName={'ChevronRight'} /></div>\r\n      \r\n\r\n    </Stack>\r\n\r\n  );\r\n};\r\n\r\nexport default PropertyListItem","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\assets\\svgIcons.js",[],["524","525"],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\assets\\pin.js",[],"C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\PremisesListItem.tsx",["526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"import * as React from 'react';\r\nimport { getTheme } from '@fluentui/react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Query, Premises, Mutation, MutationDeletePremisesArgs, Property } from \"../schematypes/schematypes\"\r\nimport { GET_SELECTED_PROPERTIES, GET_PREMISES, DELETE_PREMISES, GET_SINGLE_PROPERTY } from \"../gql/gql\"\r\nimport { gql, useMutation, useQuery } from '@apollo/client';\r\nimport { selectedPropertyList } from \"../reactivevariables/reactivevariables\"\r\nimport { mergeStyles, registerIcons } from 'office-ui-fabric-react/lib/Styling';\r\nimport { CommandBarButton, IContextualMenuProps, Stack, Text, FontWeights, IconButton, IIconProps, IStackStyles, initializeIcons, DefaultButton, FocusTrapCallout, FocusZone, PrimaryButton, mergeStyleSets, ITextStyles, } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { IndustrialIcon, RetailIcon, OfficeIcon, MixedUseIcon } from \"../assets/svgIcons.js\"\r\nimport { FontIcon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { navigationState } from \"../reactivevariables/reactivevariables\"\r\nimport \"./PropertyListItem.css\"\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    premises: Premises\r\n    propertyId: number,\r\n    key: any\r\n}\r\n\r\nexport const PremisesListItem: React.FunctionComponent<Props> = ({ premises, propertyId }) => {\r\n\r\n\r\n\r\n    const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n\r\n    \r\n\r\n\r\n    /* var selectedItems = data!.selectedItemsList!.propertyIds\r\n  \r\n  \r\n    const onChange = React.useCallback((): void => {\r\n  \r\n      const found = !!selectedItemsList().propertyIds.find((t) => t === property.propertyId);\r\n  \r\n      console.log(found)\r\n      console.log(selectedItemsList().propertyIds)\r\n      if (found) {\r\n        selectedItemsList({\r\n          propertyIds: selectedItems.filter((t) => t !== property.propertyId)\r\n        })\r\n      } else {\r\n        selectedItemsList({\r\n          propertyIds: selectedItems.concat(property.propertyId)\r\n        })\r\n      }\r\n  \r\n    }, [selectedItems]);\r\n  \r\n    var isChecked = () => {\r\n      const found = !!selectedItems.find((t) => t === property.propertyId);\r\n      console.log(found)\r\n      if (found) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } */\r\n\r\n    const [deletePremises, { data: deletePremisesData }] = useMutation<Mutation, MutationDeletePremisesArgs>(DELETE_PREMISES);\r\n\r\n    const deletePremisesButton = () => {\r\n\r\n        deletePremises({\r\n            variables: {\r\n                premisesId: premises.premisesId\r\n            },\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n                const existingProperty: Property = getExistingProperty ? getExistingProperty.singleProperty! : {propertyId:1, propertyName:\"\"};\r\n             \r\n                const existingPremises = getExistingProperty ? getExistingProperty.singleProperty?.premisesList : [];\r\n                const newPremises = existingPremises!.filter(t => {\r\n                    if (t)\r\n                        return (t.premisesId !== premises.premisesId)\r\n                });  /* .returning[0] */;\r\n\r\n            const newProperty= {...existingProperty, premisesList: newPremises}\r\n                if (existingPremises)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId},\r\n                        data: { singleProperty: newProperty }\r\n                    });\r\n            }\r\n\r\n        })\r\n        toggleIsDeleteCalloutVisible()\r\n    }\r\n\r\n    /* const getPropertyIconType =() => {\r\n      var buildingType= \"\"\r\n      switch(property.buildingType) {\r\n        case \"Office\":\r\n          buildingType = \"office\"\r\n          break;\r\n        case \"Industrial\":\r\n          buildingType = \"industrial\"\r\n          break;\r\n          case \"Retail\":\r\n            buildingType = \"retail\"\r\n            break;\r\n          case \"Mixed Use\":\r\n            buildingType = \"mixeduse\"\r\n            break;\r\n        default:\r\n          buildingType = \"mixeduse\"\r\n      }\r\n      return buildingType\r\n    } */\r\n\r\n    /*  const handleSelectedPropertyClick = () => {\r\n       navigationState ( {...navigationState(), selectedPropertyId: property.propertyId})\r\n     } */\r\n\r\n\r\n    const styles = mergeStyleSets({\r\n        /*  buttonArea: {\r\n           verticalAlign: 'top',\r\n           display: 'inline-block',\r\n           textAlign: 'center',\r\n           margin: '0 100px',\r\n           minWidth: 130,\r\n           height: 32,\r\n         }, */\r\n        callout: {\r\n            maxWidth: 400,\r\n        },\r\n        header: {\r\n            padding: '18px 24px 12px',\r\n        },\r\n        title: [\r\n            {\r\n                margin: 0,\r\n                fontWeight: FontWeights.bold,\r\n            },\r\n        ],\r\n        inner: {\r\n            height: '100%',\r\n            padding: '0 24px 20px',\r\n        },\r\n        actions: {\r\n            position: 'relative',\r\n            marginTop: 20,\r\n            width: '100%',\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        buttons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            padding: '0 24px 24px',\r\n        },\r\n        subtext: [\r\n            {\r\n                margin: 0,\r\n                fontWeight: FontWeights.semilight,\r\n            },\r\n        ],\r\n    });\r\n\r\n\r\n    /* const checkClass = {\r\n      root: {\r\n        marginLeft: 5,\r\n        visibility: isChecked() ? \"visible\" : \"hidden\",\r\n      },\r\n      checkbox: {\r\n        borderRadius: \"50%\"\r\n      }\r\n    } */\r\n\r\n    const imageClass = mergeStyles({\r\n        width: 100,\r\n        height: 80\r\n\r\n    });\r\n\r\n    const chevronClass = mergeStyles({\r\n        alignSelf: 'center',\r\n        marginLeft: 2,\r\n        /*  marginRight: 5, */\r\n        marginTop: \"0 !important\",\r\n        /* color: palette.neutralTertiary, */\r\n        fontSize: 20,\r\n        flexShrink: 0,\r\n        cursor: \"pointer\",\r\n        /* selectors: {\r\n          '&:hover': { \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\" },\r\n        }, */\r\n\r\n    });\r\n\r\n    const iconClass = mergeStyles({\r\n        fontSize: 50,\r\n        height: 50,\r\n        width: 50,\r\n\r\n\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        marginTop: \"-10px !important\",\r\n        padding: \"5px\",\r\n\r\n\r\n\r\n    });\r\n\r\n    const chevronIconDiv = mergeStyles({\r\n        /* fontSize: 50, */\r\n        height: 40,\r\n        width: 40,\r\n        lineHeight: 40,\r\n        textAlign: \"center\",\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n        marginTop: \"0px !important\",\r\n        /* padding: \"5px\", */\r\n        selectors: {\r\n            '&:hover': { backgroundColor: \"rgb(0 13 255 / 14%)\", borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n        },\r\n\r\n    });\r\n\r\n    const boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n    const propertyHeadingStyles = { alignSelf: \"start\", fontSize: \"23px\", padding: 5, paddingLeft: \"25px\" }\r\n    const tableCellStyles: ITextStyles = { root: { alignSelf: \"start\", fontSize: \"14px\", padding: 5, marginTop: \"auto !important\", marginBottom: \"auto\", width: 45 } }\r\n    const theme = getTheme();\r\n    const iconButtonStyles = {\r\n        root: {\r\n            color: theme.palette.neutralPrimary,\r\n            marginLeft: 5,\r\n            marginTop: '0px !important',\r\n            marginRight: 5,\r\n            width: 35,\r\n            height: 35,\r\n            /*  visibility: isChecked() ? \"visible\" : \"hidden\", */\r\n\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.neutralDark,\r\n            backgroundColor: \"rgb(3 122 212 / 16%);\",\r\n            /* borderRadius: 30, */\r\n            \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.1)\"\r\n\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n            marginLeft: 6\r\n\r\n        }\r\n    };\r\n\r\n    const vacantIconStyles = {\r\n        root: {\r\n           \r\n\r\n        },\r\n        rootHovered: {\r\n            backgroundColor:  \"rgb(104 113 140 / 0%)\",\r\n        },\r\n        rootActive: {\r\n            backgroundColor:    \"rgb(104 113 140 / 0%)\",\r\n        },\r\n        icon: {\r\n            fontSize: \"24px\",\r\n            marginLeft: 6\r\n\r\n        }\r\n    };\r\n\r\n    const menuIcon: IIconProps = { iconName: 'SingleColumnEdit' };\r\n    const checkIcon: IIconProps = { iconName: 'StatusCircleCheckmark' };\r\n    const crossIcon: IIconProps = { iconName: 'StatusCircleErrorX' };\r\n    const notesIcon: IIconProps = { iconName: 'DietPlanNotebook' };\r\n\r\n    const getOccDate = () => {\r\n\r\n        var date = new Date(premises.occupation)\r\n        return date.toLocaleDateString(\r\n            'en-gb',\r\n            {\r\n                year: 'numeric',\r\n                month: 'short',\r\n                day: 'numeric'\r\n            }\r\n        );\r\n    }\r\n\r\n    const getExpDate = () => {\r\n\r\n        var date = new Date(premises.leaseExpiry)\r\n        return date.toLocaleDateString(\r\n            'en-gb',\r\n            {\r\n                year: 'numeric',\r\n                month: 'short',\r\n                day: 'numeric'\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    const handlePremisesNotesClick =() => {\r\n        navigationState({ ...navigationState(), selectedPremisesId: premises.premisesId! })\r\n        navigationState({ ...navigationState(), showPremisesNotesModal: true })\r\n    \r\n    }\r\n\r\n    const handlePremisesEditClick =() => {\r\n        navigationState({ ...navigationState(), selectedPremisesId: premises.premisesId! })\r\n        navigationState({ ...navigationState(), showUpdatePremisesModal: true })\r\n    \r\n    }\r\n\r\n    const handlePremisesDuplicateClick =() => {\r\n        navigationState({ ...navigationState(), selectedPremisesId: premises.premisesId! })\r\n        navigationState({ ...navigationState(), showDuplicatePremisesModal: true })\r\n    \r\n    }\r\n\r\n    const menuProps: IContextualMenuProps = {\r\n        items: [\r\n          {\r\n            key: 'Delete Premises',\r\n            text: 'Delete Premises',\r\n            iconProps: { iconName: 'Delete' },\r\n            onClick: toggleIsDeleteCalloutVisible\r\n          },\r\n          {\r\n            key: 'Edit Premises',\r\n            text: 'Edit Premises',\r\n            iconProps: { iconName: 'Edit' },\r\n            onClick: handlePremisesEditClick\r\n          },\r\n          {\r\n            key: 'Duplicate Premises',\r\n            text: 'Duplicate Premises',\r\n            iconProps: { iconName: 'DuplicateRow' },\r\n            onClick: handlePremisesDuplicateClick\r\n          },\r\n        ],\r\n        directionalHintFixed: false,\r\n      };\r\n\r\n\r\n    return (\r\n\r\n        <Stack\r\n            horizontalAlign=\"start\"\r\n            verticalAlign=\"start\"\r\n            id=\"card\"\r\n\r\n            styles={{\r\n                root: {\r\n                     width: \"fit-content\",\r\n                    marginBottom: 10,\r\n                    marginLeft: 50,\r\n                    marginRight:\"auto\",\r\n                    /* padding: '10px', */\r\n                    textAlign: 'center',\r\n                    color: '#605e5c',\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    flexFlow: \"row\",\r\n                    /*  borderTop: \"4px solid #2557a2;\",\r\n                     borderBottom: \"4px solid #2557a2;\", */\r\n                    backgroundColor: \"white\",\r\n                    /*  background: isChecked() ? \"rgb(104 113 140 / 14%)\" : \"white\", */\r\n                    boxShadow: \"-1px 1px 7px 2px #d4cece\",\r\n                    selectors: {\r\n                        '&:hover': { background: /* palette.neutralLight */  \"rgb(104 113 140 / 14%)\" },\r\n                    },\r\n\r\n                }\r\n            }}\r\n        >\r\n\r\n\r\n\r\n            <Stack horizontalAlign=\"start\" styles={{\r\n                root: {\r\n                   /*  width:60, */\r\n                   marginRight: 10,\r\n                    textAlign: 'center',\r\n                    color: '#605e5c',\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    flexFlow: \"row\",\r\n                }\r\n            }}>\r\n                <IconButton\r\n                    styles={iconButtonStyles}\r\n                    id={`deletePremisesButton${premises.premisesId}`}\r\n                    menuProps={menuProps}\r\n                    iconProps={menuIcon}\r\n                    ariaLabel=\"Delete Premises\"\r\n                   /*  onClick={toggleIsDeleteCalloutVisible} */\r\n                />\r\n                {isDeleteCalloutVisible ? (\r\n                    <div>\r\n                        <FocusTrapCallout\r\n                            role=\"alertdialog\"\r\n                            className={styles.callout}\r\n                            gapSpace={0}\r\n                            target={`#deletePremisesButton${premises.premisesId}`}\r\n                            onDismiss={toggleIsDeleteCalloutVisible}\r\n                            setInitialFocus\r\n                        >\r\n                            <div className={styles.header}>\r\n                                <Text className={styles.title}>Delete Premises</Text>\r\n                            </div>\r\n                            <div className={styles.inner}>\r\n                                <div>\r\n                                    <Text className={styles.subtext}>\r\n                                        Are you sure you want to delete this premises?\r\n                </Text>\r\n                                </div>\r\n                            </div>\r\n                            <FocusZone>\r\n                                <Stack className={styles.buttons} gap={8} horizontal>\r\n                                    <PrimaryButton onClick={deletePremisesButton}>Confirm</PrimaryButton>\r\n                                    <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n                                </Stack>\r\n                            </FocusZone>\r\n                        </FocusTrapCallout>\r\n                    </div>\r\n                ) : null}\r\n                {/* <IconButton\r\n                    styles={iconButtonStyles}\r\n                    id={`deletePremisesButton${premises.premisesId}`}\r\n                    iconProps={deleteIcon}\r\n                    ariaLabel=\"Delete Premises\"\r\n                    onClick={toggleIsDeleteCalloutVisible}\r\n                /> */}\r\n\r\n            </Stack>\r\n\r\n\r\n\r\n            <Text styles={tableCellStyles} style={{ width: 100, borderLeft: \"3px solid rgba(210, 26, 69, 0.42) \"}}>{premises.floor}</Text>\r\n            <Text styles={tableCellStyles}>{premises.area}</Text>\r\n            <Text styles={tableCellStyles}>{premises.vacant === \"true\"?\r\n            <IconButton\r\n                    styles={vacantIconStyles}\r\n                    iconProps={checkIcon}\r\n                    ariaLabel=\"Vacant\"\r\n                />: <IconButton\r\n                styles={vacantIconStyles}\r\n                iconProps={crossIcon}\r\n                ariaLabel=\"Not vacant\"\r\n            /> }</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 55,}}>{premises.type}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 100, borderRight: \"3px solid rgba(210, 26, 69, 0.42) \" , marginRight:2 }}>{getOccDate()}</Text>\r\n           {/*  <Text styles={tableCellStyles} style={{ width: 70 }}>{premises.premisesNotes}</Text> */}\r\n            <Text styles={tableCellStyles} style={{ borderLeft: \"3px solid rgba(63, 55, 189, 0.42) \", marginLeft:2}}>{premises.netRental}</Text>\r\n            <Text styles={tableCellStyles}>{premises.opCosts}</Text>\r\n            <Text styles={tableCellStyles}>{premises.other}</Text>\r\n            <Text styles={tableCellStyles}>{premises.grossRental}</Text>\r\n            <Text styles={tableCellStyles} style={{borderRight: \"3px solid rgba(63, 55, 189, 0.42) \", marginRight:2 }}>{premises.esc}</Text>\r\n            <Text styles={tableCellStyles} style={{ borderLeft: \"3px solid rgba(61, 177, 123, 0.42) \" , marginLeft:2}}>{premises.openBays}</Text>\r\n            <Text styles={tableCellStyles}>{premises.openRate}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 50 }}>{premises.coveredBays}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 50 }}>{premises.coveredRate}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 50 }}>{premises.shadedBays}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 50 }}>{premises.shadedRate}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 50, borderRight: \"3px solid rgba(61, 177, 123, 0.42) \", marginRight:2 }}>{premises.parkingRatio}</Text>\r\n            <Text styles={tableCellStyles}  style={{ width: 125, borderLeft: \"3px solid rgba(212, 236, 10, 0.42) \" , marginLeft:2 }}>{premises.tenantName}</Text>\r\n            <Text styles={tableCellStyles} style={{ width: 100, borderRight: \"3px solid rgba(212, 236, 10, 0.42) \", marginRight:2 }}>{getExpDate()}</Text>\r\n            <div style={{ width: 60, marginLeft: 10, marginRight: \"auto\", display: \"flex\" }}>\r\n                    <IconButton\r\n                    styles={iconButtonStyles}\r\n                    iconProps={notesIcon}\r\n                    ariaLabel=\"Premises Notes\"\r\n                    onClick={handlePremisesNotesClick}\r\n                />\r\n                    </div>\r\n\r\n\r\n\r\n\r\n        </Stack>\r\n\r\n    );\r\n};\r\n\r\nexport default PremisesListItem","C:\\Users\\ruper\\Desktop\\Web\\Own Projects\\Property Stock App V2\\psafrontendv2\\src\\components\\ImageSlider.tsx",["554","555","556","557","558","559","560","561","562","563","564","565","566"],"import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { wrap } from \"popmotion\";\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { Image, Video, Transformation, CloudinaryContext, } from 'cloudinary-react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { UPDATE_IMAGES, GET_SINGLE_PROPERTY, GET_NAV_STATE } from \"../gql/gql\"\r\nimport { Mutation, MutationUpdatePropertyArgs, Query } from \"../schematypes/schematypes\"\r\nimport { ContextualMenu, DefaultButton, IContextualMenuProps, IIconProps, IContextualMenuItem, DirectionalHint, IContextualMenuStyles, IStyleFunctionOrObject, IContextualMenuStyleProps, FocusTrapCallout, FocusZone, Stack, Text, PrimaryButton, FontWeights, mergeStyleSets } from 'office-ui-fabric-react';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nconst variants = {\r\n    enter: (direction: number) => {\r\n        return {\r\n            x: direction > 0 ? 1000 : -1000,\r\n            opacity: 0\r\n        };\r\n    },\r\n    center: {\r\n        zIndex: 1,\r\n        x: 0,\r\n        opacity: 1\r\n    },\r\n    exit: (direction: number) => {\r\n        return {\r\n            zIndex: 0,\r\n            x: direction < 0 ? 1000 : -1000,\r\n            opacity: 0\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\r\n * less distance a user has swiped, the more velocity they need to register as a swipe.\r\n * Should accomodate longer swipes and short flicks without having binary checks on\r\n * just distance thresholds and velocity > 0.\r\n */\r\nconst swipeConfidenceThreshold = 10000;\r\nconst swipePower = (offset: number, velocity: number) => {\r\n    return Math.abs(offset) * velocity;\r\n};\r\n\r\ntype Maybe<T> = T /* | null */;\r\n\r\ninterface Props {\r\n    propertyId: number,\r\n    /*  imagesArray: Maybe<string>[] */\r\n}\r\n\r\nexport const ImageSlider: React.FC<Props> = ({ propertyId }) => {\r\n\r\n\r\n\r\n    var imagesArray: Maybe<string>[] = []\r\n\r\n    /* const {\r\n        data: navigationStateData,\r\n        loading: navigationLoading,\r\n        error: navigationError\r\n      } = useQuery<Query>(GET_NAV_STATE); */\r\n\r\n\r\n\r\n    const {\r\n        data: propertyData,\r\n        loading: propertyLoading,\r\n        error: propertyError\r\n    } = useQuery<Query>(GET_SINGLE_PROPERTY, {\r\n        variables: { propertyId: propertyId },\r\n    });\r\n\r\n    if (propertyData?.singleProperty) {\r\n        imagesArray = propertyData?.singleProperty?.images!\r\n    }\r\n\r\n    console.log(imagesArray)\r\n\r\n\r\n\r\n    const [updateProperty, { data }] = useMutation<Mutation, MutationUpdatePropertyArgs>(UPDATE_IMAGES);\r\n\r\n    const saveUpdatedImages = () => {\r\n\r\n        updateProperty({\r\n            variables: {\r\n                propertyId: propertyId,\r\n                images: imagesArray\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n\r\n                const updatedProperty = data.updateProperty!;\r\n                console.log(updatedProperty)\r\n                if (getExistingProperty)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId },\r\n                        data: { singleProperty: updatedProperty }\r\n                    });\r\n            }\r\n        })\r\n        /* toggleIsDeleteCalloutVisible() */\r\n    }\r\n\r\n    const onChange = (ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined, item?: IContextualMenuItem | undefined) => {\r\n        /* setSelectedItem(item); */\r\n        if (item?.key === \"Primary\") {\r\n            var primary = imagesArray[imageIndex]\r\n            var rest = imagesArray.filter(image => {\r\n                return image !== primary\r\n            })\r\n            imagesArray = [primary, ...rest]\r\n        }\r\n        if (item?.key === \"Secondary\") {\r\n            var secondary = imagesArray[imageIndex]\r\n            var rest = imagesArray.filter(image => {\r\n                return image !== secondary\r\n            })\r\n            var first = rest.slice(0, 1)\r\n            var remaining = rest.slice(1)\r\n            imagesArray = [...first, secondary, ...remaining]\r\n        }\r\n        if (item?.key === \"Tertiary\") {\r\n            var tertiary = imagesArray[imageIndex]\r\n\r\n            var rest = imagesArray.filter(image => {\r\n                return image !== tertiary\r\n            })\r\n\r\n            var firstTwo = rest.slice(0, 2)\r\n            var remaining = rest.slice(2)\r\n            imagesArray = [...firstTwo, tertiary, ...remaining]\r\n        }\r\n        if (item?.key === \"Penultimate\") {\r\n            var penultimate = imagesArray[imageIndex]\r\n            \r\n            var rest = imagesArray.filter(image => {\r\n                return image !== penultimate \r\n            })\r\n            var final = rest[rest.length - 1]\r\nvar restLessFinal = rest.slice(0, rest.length - 1)\r\n\r\n            imagesArray = [...restLessFinal, penultimate  ,final]\r\n        }\r\n        if (item?.key === \"Final\") {\r\n            var final = imagesArray[imageIndex]\r\n\r\n            var rest = imagesArray.filter(image => {\r\n                return image !== final\r\n            })\r\n\r\n\r\n            imagesArray = [...rest, final]\r\n        }\r\n        saveUpdatedImages()\r\n    };\r\n\r\n    const deleteImage = () => {\r\n\r\n        updateProperty({\r\n            variables: {\r\n                propertyId: propertyId,\r\n                images: imagesArray.filter(image => {\r\n                    return image !== imagesArray[imageIndex]\r\n                })\r\n            },\r\n\r\n            update(cache, { data }) {\r\n\r\n                if (!data) {\r\n                    return null;\r\n                }\r\n\r\n                const getExistingProperty = cache.readQuery<Query>({ query: GET_SINGLE_PROPERTY, variables: { propertyId: propertyId } })\r\n\r\n                const updatedProperty = data.updateProperty!;\r\n                console.log(updatedProperty)\r\n                if (getExistingProperty)\r\n                    cache.writeQuery<Query>({\r\n                        query: GET_SINGLE_PROPERTY,\r\n                        variables: { propertyId: propertyId },\r\n                        data: { singleProperty: updatedProperty }\r\n                    });\r\n            }\r\n        })\r\n        toggleIsDeleteCalloutVisible()\r\n    }\r\n\r\n    const dropdownMenuStyles: IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles> = { container: { width: 125 } };\r\n\r\n    const menuProps: IContextualMenuProps = {\r\n        styles: dropdownMenuStyles,\r\n        // For example: disable dismiss if shift key is held down while dismissing\r\n        directionalHint: DirectionalHint.topRightEdge,\r\n        onDismiss: ev => {\r\n            if (ev && ev.shiftKey) {\r\n                ev.preventDefault();\r\n            }\r\n        },\r\n        items: [\r\n            {\r\n                key: 'Primary',\r\n                text: 'Primary',\r\n                onClick: onChange\r\n            },\r\n            {\r\n                key: 'Secondary',\r\n                text: 'Secondary',\r\n                onClick: onChange\r\n            },\r\n            {\r\n                key: 'Tertiary',\r\n                text: 'Tertiary',\r\n                onClick: onChange\r\n            },\r\n            {\r\n                key: 'Penultimate',\r\n                text: 'Penultimate',\r\n                onClick: onChange\r\n            },\r\n            {\r\n                key: 'Final',\r\n                text: 'Final',\r\n                onClick: onChange\r\n            },\r\n        ],\r\n        directionalHintFixed: true,\r\n    };\r\n\r\n    function _getMenu(props: IContextualMenuProps): JSX.Element {\r\n        // Customize contextual menu with menuAs\r\n        return <ContextualMenu {...props} />;\r\n    }\r\n\r\n    function _onMenuClick(ev?: React.SyntheticEvent<any>) {\r\n        console.log(ev);\r\n    }\r\n\r\n\r\n    const dropdownStyles: Partial<IContextualMenuStyles> = { root: { /* position: \"absolute\", bottom: 10, right: 10, zIndex: 5  */ marginRight: 5, marginLeft: 5 }, container: { width: 150 } };\r\n    const deleteButtonStyles: Partial<IContextualMenuStyles> = { root: { /* position: \"absolute\", bottom: 10, right: 10, zIndex: 5  */marginLeft: \"auto\", marginRight: 5 }, container: { width: 150 } };\r\n    const chevronUpIcon: IIconProps = { iconName: 'ChevronUp' };\r\n    const deleteIcon: IIconProps = { iconName: 'Delete' };\r\n\r\n\r\n    const [[page, direction], setPage] = useState([0, 0]);\r\n\r\n    // We only have 3 images, but we paginate them absolutely (ie 1, 2, 3, 4, 5...) and\r\n    // then wrap that within 0-2 to find our image ID in the array below. By passing an\r\n    // absolute page index as the `motion` component's `key` prop, `AnimatePresence` will\r\n    // detect it as an entirely new image. So you can infinitely paginate as few as 1 images.\r\n    const imageIndex = wrap(0, imagesArray.length, page);\r\n\r\n    const paginate = (newDirection: number) => {\r\n        setPage([page + newDirection, newDirection]);\r\n\r\n    };\r\n\r\n    const sliderContainerClass: any = {\r\n        \"position\": \"relative\",\r\n        height: 500,\r\n        width: 600,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        margin: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    }\r\n\r\n\r\n    const chevronIconDivRight = mergeStyles({\r\n        /* fontSize: 50, */\r\n        height: 40,\r\n        width: 40,\r\n        lineHeight: 40,\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: 10,\r\n        marginTop: \"0px !important\",\r\n        zIndex: 2,\r\n        /* padding: \"5px\", */\r\n        selectors: {\r\n            '&:hover': { backgroundColor: \"rgb(208 209 230 / 81%)\", borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n        },\r\n\r\n    });\r\n\r\n    const chevronIconDivLeft = mergeStyles({\r\n        /* fontSize: 50, */\r\n        height: 40,\r\n        width: 40,\r\n        lineHeight: 40,\r\n        textAlign: \"center\",\r\n        marginLeft: 10,\r\n        marginRight: \"auto\",\r\n        marginTop: \"0px !important\",\r\n        zIndex: 2,\r\n        /* padding: \"5px\", */\r\n        selectors: {\r\n            '&:hover': { backgroundColor: \"rgb(208 209 230 / 81%)\", borderRadius: 30, \"transition\": \"all .2s ease-in-out\", transform: \"scale(1.2)\" },\r\n        },\r\n\r\n    });\r\n\r\n    const chevronClassRight = mergeStyles({\r\n        alignSelf: 'center',\r\n        marginLeft: 2,\r\n\r\n        marginTop: \"0 !important\",\r\n\r\n        fontSize: 20,\r\n        flexShrink: 0,\r\n        cursor: \"pointer\",\r\n\r\n\r\n    });\r\n\r\n    const chevronClassLeft = mergeStyles({\r\n        alignSelf: 'center',\r\n        marginLeft: 2,\r\n\r\n        marginTop: \"0 !important\",\r\n\r\n        fontSize: 20,\r\n        flexShrink: 0,\r\n        cursor: \"pointer\",\r\n        transform: \"scale(-1)\",\r\n\r\n    });\r\n\r\n    const imgStyles: any = {\r\n        \"position\": \"absolute\",\r\n        maxWidth: 600,\r\n    }\r\n\r\n    const [isDeleteCalloutVisible, { toggle: toggleIsDeleteCalloutVisible }] = useBoolean(false);\r\n\r\n    const styles = mergeStyleSets({\r\n        /*  buttonArea: {\r\n           verticalAlign: 'top',\r\n           display: 'inline-block',\r\n           textAlign: 'center',\r\n           margin: '0 100px',\r\n           minWidth: 130,\r\n           height: 32,\r\n         }, */\r\n        callout: {\r\n            maxWidth: 400,\r\n        },\r\n        header: {\r\n            padding: '18px 24px 12px',\r\n        },\r\n        title: [\r\n            {\r\n                margin: 0,\r\n                fontWeight: FontWeights.bold,\r\n            },\r\n        ],\r\n        inner: {\r\n            height: '100%',\r\n            padding: '0 24px 20px',\r\n        },\r\n        actions: {\r\n            position: 'relative',\r\n            marginTop: 20,\r\n            width: '100%',\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        buttons: {\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            padding: '0 24px 24px',\r\n        },\r\n        subtext: [\r\n            {\r\n                margin: 0,\r\n                fontWeight: FontWeights.semilight,\r\n            },\r\n        ],\r\n    });\r\n\r\n    return (\r\n        <div style={sliderContainerClass}>\r\n            <AnimatePresence initial={false} custom={direction}>\r\n                <motion.div\r\n\r\n                    style={imgStyles}\r\n                    key={page}\r\n                    /*  src={images[imageIndex]} */\r\n                    custom={direction}\r\n                    variants={variants}\r\n                    initial=\"enter\"\r\n                    animate=\"center\"\r\n                    exit=\"exit\"\r\n                    transition={{\r\n                        x: { type: \"spring\", stiffness: 300, damping: 30 },\r\n                        opacity: { duration: 0.2 }\r\n                    }}\r\n                    drag=\"x\"\r\n                    dragConstraints={{ left: 0, right: 0 }}\r\n                    dragElastic={1}\r\n                    onDragEnd={(e, { offset, velocity }) => {\r\n                        const swipe = swipePower(offset.x, velocity.x);\r\n\r\n                        if (swipe < -swipeConfidenceThreshold) {\r\n                            paginate(1);\r\n                        } else if (swipe > swipeConfidenceThreshold) {\r\n                            paginate(-1);\r\n                        }\r\n                    }}\r\n                >\r\n\r\n                    <Image cloudName=\"drlfedqyz\" publicId={imagesArray[imageIndex]} width=\"600\" /* height=\"400\" */ crop=\"fit\" />\r\n\r\n                    <div style={{ display: \"flex\" }}>\r\n\r\n                        <DefaultButton\r\n                            id={`deleteImageButton_${propertyId}_Image_${imageIndex}`}\r\n                            styles={deleteButtonStyles}\r\n                            text=\"Delete Image\"\r\n                            iconProps={deleteIcon}\r\n                            onClick={toggleIsDeleteCalloutVisible}\r\n                        />\r\n                        {isDeleteCalloutVisible ? (\r\n                            <div>\r\n                                <FocusTrapCallout\r\n                                    role=\"alertdialog\"\r\n                                    className={styles.callout}\r\n                                    gapSpace={0}\r\n                                    target={`#deleteImageButton_${propertyId}_Image_${imageIndex}`}\r\n                                    onDismiss={toggleIsDeleteCalloutVisible}\r\n                                    setInitialFocus\r\n                                >\r\n                                    <div className={styles.header}>\r\n                                        <Text className={styles.title}>Delete Image</Text>\r\n                                    </div>\r\n                                    <div className={styles.inner}>\r\n                                        <div>\r\n                                            <Text className={styles.subtext}>\r\n                                                Are you sure you want to delete this image?\r\n                </Text>\r\n                                        </div>\r\n                                    </div>\r\n                                    <FocusZone>\r\n                                        <Stack className={styles.buttons} gap={8} horizontal>\r\n                                            <PrimaryButton onClick={deleteImage}>Confirm</PrimaryButton>\r\n                                            <DefaultButton onClick={toggleIsDeleteCalloutVisible}>Cancel</DefaultButton>\r\n                                        </Stack>\r\n                                    </FocusZone>\r\n                                </FocusTrapCallout>\r\n                            </div>\r\n                        ) : null}\r\n                        <DefaultButton\r\n                            styles={dropdownStyles}\r\n                            text=\"Set Image\"\r\n                            menuIconProps={chevronUpIcon}\r\n                            menuProps={menuProps}\r\n                            menuAs={_getMenu}\r\n                            onMenuClick={_onMenuClick}\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                </motion.div>\r\n            </AnimatePresence>\r\n\r\n\r\n\r\n            <div className={chevronIconDivLeft} onClick={() => paginate(1)}><Icon className={chevronClassLeft} iconName={'ChevronRight'} /></div>\r\n            <div className={chevronIconDivRight} onClick={() => paginate(1)}><Icon className={chevronClassRight} iconName={'ChevronRight'} /></div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ImageSlider",{"ruleId":"567","severity":1,"message":"568","line":6,"column":10,"nodeType":"569","messageId":"570","endLine":6,"endColumn":20},{"ruleId":"567","severity":1,"message":"571","line":8,"column":10,"nodeType":"569","messageId":"570","endLine":8,"endColumn":20},{"ruleId":"567","severity":1,"message":"572","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":19},{"ruleId":"567","severity":1,"message":"573","line":13,"column":3,"nodeType":"569","messageId":"570","endLine":13,"endColumn":16},{"ruleId":"567","severity":1,"message":"574","line":14,"column":3,"nodeType":"569","messageId":"570","endLine":14,"endColumn":6},{"ruleId":"567","severity":1,"message":"575","line":17,"column":3,"nodeType":"569","messageId":"570","endLine":17,"endColumn":13},{"ruleId":"567","severity":1,"message":"576","line":18,"column":13,"nodeType":"569","messageId":"570","endLine":18,"endColumn":21},{"ruleId":"577","replacedBy":"578"},{"ruleId":"579","replacedBy":"580"},{"ruleId":"567","severity":1,"message":"581","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":12},{"ruleId":"567","severity":1,"message":"582","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":14},{"ruleId":"567","severity":1,"message":"583","line":7,"column":16,"nodeType":"569","messageId":"570","endLine":7,"endColumn":20},{"ruleId":"567","severity":1,"message":"584","line":7,"column":22,"nodeType":"569","messageId":"570","endLine":7,"endColumn":33},{"ruleId":"567","severity":1,"message":"585","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":12},{"ruleId":"567","severity":1,"message":"574","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":13},{"ruleId":"567","severity":1,"message":"586","line":13,"column":25,"nodeType":"569","messageId":"570","endLine":13,"endColumn":40},{"ruleId":"567","severity":1,"message":"587","line":22,"column":10,"nodeType":"569","messageId":"570","endLine":22,"endColumn":19},{"ruleId":"567","severity":1,"message":"588","line":22,"column":21,"nodeType":"569","messageId":"570","endLine":22,"endColumn":36},{"ruleId":"567","severity":1,"message":"589","line":22,"column":38,"nodeType":"569","messageId":"570","endLine":22,"endColumn":46},{"ruleId":"567","severity":1,"message":"590","line":22,"column":48,"nodeType":"569","messageId":"570","endLine":22,"endColumn":52},{"ruleId":"567","severity":1,"message":"591","line":31,"column":10,"nodeType":"569","messageId":"570","endLine":31,"endColumn":16},{"ruleId":"567","severity":1,"message":"592","line":42,"column":14,"nodeType":"569","messageId":"570","endLine":42,"endColumn":27},{"ruleId":"567","severity":1,"message":"593","line":43,"column":12,"nodeType":"569","messageId":"570","endLine":43,"endColumn":23},{"ruleId":"567","severity":1,"message":"594","line":48,"column":14,"nodeType":"569","messageId":"570","endLine":48,"endColumn":27},{"ruleId":"567","severity":1,"message":"595","line":49,"column":12,"nodeType":"569","messageId":"570","endLine":49,"endColumn":23},{"ruleId":"567","severity":1,"message":"596","line":55,"column":12,"nodeType":"569","messageId":"570","endLine":55,"endColumn":27},{"ruleId":"567","severity":1,"message":"597","line":60,"column":14,"nodeType":"569","messageId":"570","endLine":60,"endColumn":24},{"ruleId":"567","severity":1,"message":"598","line":61,"column":12,"nodeType":"569","messageId":"570","endLine":61,"endColumn":20},{"ruleId":"567","severity":1,"message":"599","line":66,"column":14,"nodeType":"569","messageId":"570","endLine":66,"endColumn":33},{"ruleId":"567","severity":1,"message":"600","line":67,"column":12,"nodeType":"569","messageId":"570","endLine":67,"endColumn":29},{"ruleId":"567","severity":1,"message":"601","line":74,"column":5,"nodeType":"569","messageId":"570","endLine":74,"endColumn":47},{"ruleId":"567","severity":1,"message":"602","line":186,"column":14,"nodeType":"569","messageId":"570","endLine":186,"endColumn":29},{"ruleId":"567","severity":1,"message":"603","line":187,"column":12,"nodeType":"569","messageId":"570","endLine":187,"endColumn":25},{"ruleId":"567","severity":1,"message":"604","line":17,"column":11,"nodeType":"569","messageId":"570","endLine":17,"endColumn":22},{"ruleId":"567","severity":1,"message":"605","line":21,"column":11,"nodeType":"569","messageId":"570","endLine":21,"endColumn":23},{"ruleId":"567","severity":1,"message":"606","line":2,"column":10,"nodeType":"569","messageId":"570","endLine":2,"endColumn":19},{"ruleId":"567","severity":1,"message":"607","line":3,"column":10,"nodeType":"569","messageId":"570","endLine":3,"endColumn":15},{"ruleId":"567","severity":1,"message":"608","line":3,"column":17,"nodeType":"569","messageId":"570","endLine":3,"endColumn":25},{"ruleId":"567","severity":1,"message":"609","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":14},{"ruleId":"567","severity":1,"message":"610","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":18},{"ruleId":"567","severity":1,"message":"611","line":5,"column":20,"nodeType":"569","messageId":"570","endLine":5,"endColumn":34},{"ruleId":"567","severity":1,"message":"612","line":6,"column":16,"nodeType":"569","messageId":"570","endLine":6,"endColumn":24},{"ruleId":"567","severity":1,"message":"576","line":7,"column":9,"nodeType":"569","messageId":"570","endLine":7,"endColumn":17},{"ruleId":"567","severity":1,"message":"613","line":8,"column":9,"nodeType":"569","messageId":"570","endLine":8,"endColumn":29},{"ruleId":"567","severity":1,"message":"614","line":47,"column":7,"nodeType":"569","messageId":"570","endLine":47,"endColumn":19},{"ruleId":"567","severity":1,"message":"615","line":51,"column":10,"nodeType":"569","messageId":"570","endLine":51,"endColumn":20},{"ruleId":"567","severity":1,"message":"616","line":51,"column":22,"nodeType":"569","messageId":"570","endLine":51,"endColumn":35},{"ruleId":"567","severity":1,"message":"617","line":3,"column":10,"nodeType":"569","messageId":"570","endLine":3,"endColumn":15},{"ruleId":"567","severity":1,"message":"618","line":7,"column":28,"nodeType":"569","messageId":"570","endLine":7,"endColumn":48},{"ruleId":"567","severity":1,"message":"619","line":7,"column":123,"nodeType":"569","messageId":"570","endLine":7,"endColumn":136},{"ruleId":"567","severity":1,"message":"620","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":23},{"ruleId":"567","severity":1,"message":"621","line":13,"column":9,"nodeType":"569","messageId":"570","endLine":13,"endColumn":24},{"ruleId":"567","severity":1,"message":"622","line":19,"column":7,"nodeType":"569","messageId":"570","endLine":19,"endColumn":41},{"ruleId":"567","severity":1,"message":"623","line":42,"column":7,"nodeType":"569","messageId":"570","endLine":42,"endColumn":30},{"ruleId":"567","severity":1,"message":"624","line":44,"column":7,"nodeType":"569","messageId":"570","endLine":44,"endColumn":15},{"ruleId":"567","severity":1,"message":"625","line":63,"column":9,"nodeType":"569","messageId":"570","endLine":63,"endColumn":24},{"ruleId":"567","severity":1,"message":"626","line":94,"column":9,"nodeType":"569","messageId":"570","endLine":94,"endColumn":52},{"ruleId":"567","severity":1,"message":"606","line":2,"column":10,"nodeType":"569","messageId":"570","endLine":2,"endColumn":19},{"ruleId":"567","severity":1,"message":"627","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":11},{"ruleId":"567","severity":1,"message":"628","line":9,"column":3,"nodeType":"569","messageId":"570","endLine":9,"endColumn":17},{"ruleId":"567","severity":1,"message":"584","line":10,"column":3,"nodeType":"569","messageId":"570","endLine":10,"endColumn":14},{"ruleId":"567","severity":1,"message":"629","line":11,"column":3,"nodeType":"569","messageId":"570","endLine":11,"endColumn":17},{"ruleId":"567","severity":1,"message":"582","line":12,"column":3,"nodeType":"569","messageId":"570","endLine":12,"endColumn":7},{"ruleId":"567","severity":1,"message":"619","line":13,"column":3,"nodeType":"569","messageId":"570","endLine":13,"endColumn":16},{"ruleId":"567","severity":1,"message":"630","line":15,"column":3,"nodeType":"569","messageId":"570","endLine":15,"endColumn":16},{"ruleId":"567","severity":1,"message":"631","line":16,"column":3,"nodeType":"569","messageId":"570","endLine":16,"endColumn":13},{"ruleId":"567","severity":1,"message":"632","line":24,"column":7,"nodeType":"569","messageId":"570","endLine":24,"endColumn":49},{"ruleId":"567","severity":1,"message":"626","line":25,"column":7,"nodeType":"569","messageId":"570","endLine":25,"endColumn":50},{"ruleId":"567","severity":1,"message":"633","line":26,"column":7,"nodeType":"569","messageId":"570","endLine":26,"endColumn":29},{"ruleId":"567","severity":1,"message":"634","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":18},{"ruleId":"567","severity":1,"message":"635","line":5,"column":20,"nodeType":"569","messageId":"570","endLine":5,"endColumn":35},{"ruleId":"567","severity":1,"message":"583","line":6,"column":10,"nodeType":"569","messageId":"570","endLine":6,"endColumn":14},{"ruleId":"567","severity":1,"message":"636","line":8,"column":46,"nodeType":"569","messageId":"570","endLine":8,"endColumn":66},{"ruleId":"567","severity":1,"message":"637","line":8,"column":68,"nodeType":"569","messageId":"570","endLine":8,"endColumn":88},{"ruleId":"567","severity":1,"message":"609","line":12,"column":10,"nodeType":"569","messageId":"570","endLine":12,"endColumn":14},{"ruleId":"567","severity":1,"message":"628","line":27,"column":5,"nodeType":"569","messageId":"570","endLine":27,"endColumn":19},{"ruleId":"567","severity":1,"message":"629","line":29,"column":5,"nodeType":"569","messageId":"570","endLine":29,"endColumn":19},{"ruleId":"567","severity":1,"message":"638","line":30,"column":5,"nodeType":"569","messageId":"570","endLine":30,"endColumn":11},{"ruleId":"567","severity":1,"message":"639","line":31,"column":5,"nodeType":"569","messageId":"570","endLine":31,"endColumn":18},{"ruleId":"567","severity":1,"message":"619","line":32,"column":5,"nodeType":"569","messageId":"570","endLine":32,"endColumn":18},{"ruleId":"567","severity":1,"message":"640","line":33,"column":5,"nodeType":"569","messageId":"570","endLine":33,"endColumn":10},{"ruleId":"567","severity":1,"message":"641","line":34,"column":5,"nodeType":"569","messageId":"570","endLine":34,"endColumn":17},{"ruleId":"567","severity":1,"message":"642","line":37,"column":5,"nodeType":"569","messageId":"570","endLine":37,"endColumn":17},{"ruleId":"567","severity":1,"message":"643","line":38,"column":5,"nodeType":"569","messageId":"570","endLine":38,"endColumn":16},{"ruleId":"567","severity":1,"message":"644","line":39,"column":5,"nodeType":"569","messageId":"570","endLine":39,"endColumn":13},{"ruleId":"567","severity":1,"message":"645","line":40,"column":5,"nodeType":"569","messageId":"570","endLine":40,"endColumn":11},{"ruleId":"567","severity":1,"message":"585","line":42,"column":5,"nodeType":"569","messageId":"570","endLine":42,"endColumn":14},{"ruleId":"567","severity":1,"message":"646","line":43,"column":5,"nodeType":"569","messageId":"570","endLine":43,"endColumn":33},{"ruleId":"567","severity":1,"message":"647","line":44,"column":5,"nodeType":"569","messageId":"570","endLine":44,"endColumn":20},{"ruleId":"567","severity":1,"message":"648","line":47,"column":5,"nodeType":"569","messageId":"570","endLine":47,"endColumn":17},{"ruleId":"567","severity":1,"message":"596","line":63,"column":16,"nodeType":"569","messageId":"570","endLine":63,"endColumn":31},{"ruleId":"567","severity":1,"message":"649","line":90,"column":16,"nodeType":"569","messageId":"570","endLine":90,"endColumn":29},{"ruleId":"650","severity":1,"message":"651","line":104,"column":8,"nodeType":"652","endLine":104,"endColumn":25,"suggestions":"653"},{"ruleId":"654","severity":1,"message":"655","line":238,"column":66,"nodeType":"656","messageId":"657","endLine":238,"endColumn":68},{"ruleId":"650","severity":1,"message":"658","line":266,"column":9,"nodeType":"652","endLine":266,"endColumn":11,"suggestions":"659"},{"ruleId":"567","severity":1,"message":"660","line":277,"column":11,"nodeType":"569","messageId":"570","endLine":277,"endColumn":22},{"ruleId":"567","severity":1,"message":"661","line":283,"column":11,"nodeType":"569","messageId":"570","endLine":283,"endColumn":23},{"ruleId":"567","severity":1,"message":"662","line":309,"column":30,"nodeType":"569","messageId":"570","endLine":309,"endColumn":34},{"ruleId":"567","severity":1,"message":"663","line":1,"column":17,"nodeType":"569","messageId":"570","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"664","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":27},{"ruleId":"567","severity":1,"message":"665","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":40},{"ruleId":"567","severity":1,"message":"666","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":16},{"ruleId":"567","severity":1,"message":"638","line":12,"column":5,"nodeType":"569","messageId":"570","endLine":12,"endColumn":11},{"ruleId":"567","severity":1,"message":"639","line":13,"column":5,"nodeType":"569","messageId":"570","endLine":13,"endColumn":18},{"ruleId":"567","severity":1,"message":"619","line":14,"column":5,"nodeType":"569","messageId":"570","endLine":14,"endColumn":18},{"ruleId":"567","severity":1,"message":"643","line":20,"column":5,"nodeType":"569","messageId":"570","endLine":20,"endColumn":16},{"ruleId":"567","severity":1,"message":"645","line":22,"column":5,"nodeType":"569","messageId":"570","endLine":22,"endColumn":11},{"ruleId":"567","severity":1,"message":"646","line":25,"column":5,"nodeType":"569","messageId":"570","endLine":25,"endColumn":33},{"ruleId":"567","severity":1,"message":"574","line":29,"column":10,"nodeType":"569","messageId":"570","endLine":29,"endColumn":13},{"ruleId":"567","severity":1,"message":"576","line":29,"column":28,"nodeType":"569","messageId":"570","endLine":29,"endColumn":36},{"ruleId":"567","severity":1,"message":"667","line":30,"column":40,"nodeType":"569","messageId":"570","endLine":30,"endColumn":53},{"ruleId":"567","severity":1,"message":"668","line":30,"column":55,"nodeType":"569","messageId":"570","endLine":30,"endColumn":68},{"ruleId":"567","severity":1,"message":"669","line":38,"column":7,"nodeType":"569","messageId":"570","endLine":38,"endColumn":32},{"ruleId":"567","severity":1,"message":"662","line":122,"column":28,"nodeType":"569","messageId":"570","endLine":122,"endColumn":32},{"ruleId":"567","severity":1,"message":"632","line":195,"column":11,"nodeType":"569","messageId":"570","endLine":195,"endColumn":53},{"ruleId":"567","severity":1,"message":"670","line":202,"column":11,"nodeType":"569","messageId":"570","endLine":202,"endColumn":57},{"ruleId":"650","severity":1,"message":"671","line":319,"column":9,"nodeType":"652","endLine":319,"endColumn":27,"suggestions":"672"},{"ruleId":"650","severity":1,"message":"671","line":344,"column":9,"nodeType":"652","endLine":344,"endColumn":27,"suggestions":"673"},{"ruleId":"567","severity":1,"message":"674","line":2,"column":10,"nodeType":"569","messageId":"570","endLine":2,"endColumn":26},{"ruleId":"567","severity":1,"message":"634","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":18},{"ruleId":"567","severity":1,"message":"635","line":5,"column":20,"nodeType":"569","messageId":"570","endLine":5,"endColumn":35},{"ruleId":"567","severity":1,"message":"583","line":6,"column":10,"nodeType":"569","messageId":"570","endLine":6,"endColumn":14},{"ruleId":"567","severity":1,"message":"664","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":20},{"ruleId":"567","severity":1,"message":"675","line":8,"column":10,"nodeType":"569","messageId":"570","endLine":8,"endColumn":33},{"ruleId":"567","severity":1,"message":"667","line":8,"column":35,"nodeType":"569","messageId":"570","endLine":8,"endColumn":48},{"ruleId":"567","severity":1,"message":"636","line":8,"column":50,"nodeType":"569","messageId":"570","endLine":8,"endColumn":70},{"ruleId":"567","severity":1,"message":"637","line":8,"column":72,"nodeType":"569","messageId":"570","endLine":8,"endColumn":92},{"ruleId":"567","severity":1,"message":"676","line":8,"column":94,"nodeType":"569","messageId":"570","endLine":8,"endColumn":107},{"ruleId":"567","severity":1,"message":"677","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":21},{"ruleId":"567","severity":1,"message":"678","line":10,"column":10,"nodeType":"569","messageId":"570","endLine":10,"endColumn":18},{"ruleId":"567","severity":1,"message":"679","line":10,"column":20,"nodeType":"569","messageId":"570","endLine":10,"endColumn":46},{"ruleId":"567","severity":1,"message":"621","line":10,"column":55,"nodeType":"569","messageId":"570","endLine":10,"endColumn":70},{"ruleId":"567","severity":1,"message":"680","line":10,"column":72,"nodeType":"569","messageId":"570","endLine":10,"endColumn":80},{"ruleId":"567","severity":1,"message":"612","line":10,"column":104,"nodeType":"569","messageId":"570","endLine":10,"endColumn":112},{"ruleId":"567","severity":1,"message":"681","line":11,"column":73,"nodeType":"569","messageId":"570","endLine":11,"endColumn":96},{"ruleId":"567","severity":1,"message":"609","line":12,"column":10,"nodeType":"569","messageId":"570","endLine":12,"endColumn":14},{"ruleId":"567","severity":1,"message":"682","line":15,"column":8,"nodeType":"569","messageId":"570","endLine":15,"endColumn":31},{"ruleId":"567","severity":1,"message":"588","line":17,"column":21,"nodeType":"569","messageId":"570","endLine":17,"endColumn":36},{"ruleId":"567","severity":1,"message":"589","line":17,"column":38,"nodeType":"569","messageId":"570","endLine":17,"endColumn":46},{"ruleId":"567","severity":1,"message":"590","line":17,"column":48,"nodeType":"569","messageId":"570","endLine":17,"endColumn":52},{"ruleId":"567","severity":1,"message":"628","line":24,"column":5,"nodeType":"569","messageId":"570","endLine":24,"endColumn":19},{"ruleId":"567","severity":1,"message":"629","line":26,"column":5,"nodeType":"569","messageId":"570","endLine":26,"endColumn":19},{"ruleId":"567","severity":1,"message":"638","line":27,"column":5,"nodeType":"569","messageId":"570","endLine":27,"endColumn":11},{"ruleId":"567","severity":1,"message":"639","line":28,"column":5,"nodeType":"569","messageId":"570","endLine":28,"endColumn":18},{"ruleId":"567","severity":1,"message":"619","line":29,"column":5,"nodeType":"569","messageId":"570","endLine":29,"endColumn":18},{"ruleId":"567","severity":1,"message":"640","line":30,"column":5,"nodeType":"569","messageId":"570","endLine":30,"endColumn":10},{"ruleId":"567","severity":1,"message":"641","line":31,"column":5,"nodeType":"569","messageId":"570","endLine":31,"endColumn":17},{"ruleId":"567","severity":1,"message":"642","line":34,"column":5,"nodeType":"569","messageId":"570","endLine":34,"endColumn":17},{"ruleId":"567","severity":1,"message":"643","line":35,"column":5,"nodeType":"569","messageId":"570","endLine":35,"endColumn":16},{"ruleId":"567","severity":1,"message":"644","line":36,"column":5,"nodeType":"569","messageId":"570","endLine":36,"endColumn":13},{"ruleId":"567","severity":1,"message":"645","line":37,"column":5,"nodeType":"569","messageId":"570","endLine":37,"endColumn":11},{"ruleId":"567","severity":1,"message":"683","line":38,"column":5,"nodeType":"569","messageId":"570","endLine":38,"endColumn":20},{"ruleId":"567","severity":1,"message":"585","line":39,"column":5,"nodeType":"569","messageId":"570","endLine":39,"endColumn":14},{"ruleId":"567","severity":1,"message":"646","line":40,"column":5,"nodeType":"569","messageId":"570","endLine":40,"endColumn":33},{"ruleId":"567","severity":1,"message":"647","line":41,"column":5,"nodeType":"569","messageId":"570","endLine":41,"endColumn":20},{"ruleId":"567","severity":1,"message":"582","line":43,"column":5,"nodeType":"569","messageId":"570","endLine":43,"endColumn":9},{"ruleId":"567","severity":1,"message":"648","line":44,"column":5,"nodeType":"569","messageId":"570","endLine":44,"endColumn":17},{"ruleId":"567","severity":1,"message":"684","line":69,"column":16,"nodeType":"569","messageId":"570","endLine":69,"endColumn":37},{"ruleId":"567","severity":1,"message":"685","line":109,"column":11,"nodeType":"569","messageId":"570","endLine":109,"endColumn":30},{"ruleId":"567","severity":1,"message":"686","line":110,"column":11,"nodeType":"569","messageId":"570","endLine":110,"endColumn":31},{"ruleId":"567","severity":1,"message":"687","line":111,"column":11,"nodeType":"569","messageId":"570","endLine":111,"endColumn":33},{"ruleId":"567","severity":1,"message":"688","line":113,"column":11,"nodeType":"569","messageId":"570","endLine":113,"endColumn":51},{"ruleId":"567","severity":1,"message":"689","line":136,"column":11,"nodeType":"569","messageId":"570","endLine":136,"endColumn":20},{"ruleId":"567","severity":1,"message":"690","line":137,"column":11,"nodeType":"569","messageId":"570","endLine":137,"endColumn":32},{"ruleId":"567","severity":1,"message":"691","line":139,"column":11,"nodeType":"569","messageId":"570","endLine":139,"endColumn":21},{"ruleId":"567","severity":1,"message":"692","line":140,"column":11,"nodeType":"569","messageId":"570","endLine":140,"endColumn":39},{"ruleId":"567","severity":1,"message":"693","line":141,"column":11,"nodeType":"569","messageId":"570","endLine":141,"endColumn":30},{"ruleId":"650","severity":1,"message":"694","line":169,"column":9,"nodeType":"652","endLine":169,"endColumn":11,"suggestions":"695"},{"ruleId":"567","severity":1,"message":"674","line":2,"column":10,"nodeType":"569","messageId":"570","endLine":2,"endColumn":26},{"ruleId":"567","severity":1,"message":"583","line":6,"column":10,"nodeType":"569","messageId":"570","endLine":6,"endColumn":14},{"ruleId":"567","severity":1,"message":"664","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":20},{"ruleId":"567","severity":1,"message":"675","line":8,"column":10,"nodeType":"569","messageId":"570","endLine":8,"endColumn":33},{"ruleId":"567","severity":1,"message":"667","line":8,"column":35,"nodeType":"569","messageId":"570","endLine":8,"endColumn":48},{"ruleId":"567","severity":1,"message":"636","line":8,"column":50,"nodeType":"569","messageId":"570","endLine":8,"endColumn":70},{"ruleId":"567","severity":1,"message":"637","line":8,"column":72,"nodeType":"569","messageId":"570","endLine":8,"endColumn":92},{"ruleId":"567","severity":1,"message":"676","line":8,"column":94,"nodeType":"569","messageId":"570","endLine":8,"endColumn":107},{"ruleId":"567","severity":1,"message":"677","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":21},{"ruleId":"567","severity":1,"message":"678","line":10,"column":10,"nodeType":"569","messageId":"570","endLine":10,"endColumn":18},{"ruleId":"567","severity":1,"message":"696","line":10,"column":20,"nodeType":"569","messageId":"570","endLine":10,"endColumn":42},{"ruleId":"567","severity":1,"message":"621","line":10,"column":51,"nodeType":"569","messageId":"570","endLine":10,"endColumn":66},{"ruleId":"567","severity":1,"message":"680","line":10,"column":68,"nodeType":"569","messageId":"570","endLine":10,"endColumn":76},{"ruleId":"567","severity":1,"message":"612","line":10,"column":100,"nodeType":"569","messageId":"570","endLine":10,"endColumn":108},{"ruleId":"567","severity":1,"message":"697","line":10,"column":110,"nodeType":"569","messageId":"570","endLine":10,"endColumn":115},{"ruleId":"567","severity":1,"message":"588","line":12,"column":10,"nodeType":"569","messageId":"570","endLine":12,"endColumn":25},{"ruleId":"567","severity":1,"message":"698","line":12,"column":27,"nodeType":"569","messageId":"570","endLine":12,"endColumn":39},{"ruleId":"567","severity":1,"message":"609","line":13,"column":10,"nodeType":"569","messageId":"570","endLine":13,"endColumn":14},{"ruleId":"567","severity":1,"message":"699","line":14,"column":8,"nodeType":"569","messageId":"570","endLine":14,"endColumn":23},{"ruleId":"567","severity":1,"message":"628","line":21,"column":5,"nodeType":"569","messageId":"570","endLine":21,"endColumn":19},{"ruleId":"567","severity":1,"message":"629","line":23,"column":5,"nodeType":"569","messageId":"570","endLine":23,"endColumn":19},{"ruleId":"567","severity":1,"message":"638","line":24,"column":5,"nodeType":"569","messageId":"570","endLine":24,"endColumn":11},{"ruleId":"567","severity":1,"message":"639","line":25,"column":5,"nodeType":"569","messageId":"570","endLine":25,"endColumn":18},{"ruleId":"567","severity":1,"message":"619","line":26,"column":5,"nodeType":"569","messageId":"570","endLine":26,"endColumn":18},{"ruleId":"567","severity":1,"message":"640","line":28,"column":5,"nodeType":"569","messageId":"570","endLine":28,"endColumn":10},{"ruleId":"567","severity":1,"message":"641","line":29,"column":5,"nodeType":"569","messageId":"570","endLine":29,"endColumn":17},{"ruleId":"567","severity":1,"message":"642","line":32,"column":5,"nodeType":"569","messageId":"570","endLine":32,"endColumn":17},{"ruleId":"567","severity":1,"message":"643","line":33,"column":5,"nodeType":"569","messageId":"570","endLine":33,"endColumn":16},{"ruleId":"567","severity":1,"message":"644","line":34,"column":5,"nodeType":"569","messageId":"570","endLine":34,"endColumn":13},{"ruleId":"567","severity":1,"message":"645","line":35,"column":5,"nodeType":"569","messageId":"570","endLine":35,"endColumn":11},{"ruleId":"567","severity":1,"message":"683","line":36,"column":5,"nodeType":"569","messageId":"570","endLine":36,"endColumn":20},{"ruleId":"567","severity":1,"message":"585","line":37,"column":5,"nodeType":"569","messageId":"570","endLine":37,"endColumn":14},{"ruleId":"567","severity":1,"message":"646","line":38,"column":5,"nodeType":"569","messageId":"570","endLine":38,"endColumn":33},{"ruleId":"567","severity":1,"message":"647","line":39,"column":5,"nodeType":"569","messageId":"570","endLine":39,"endColumn":20},{"ruleId":"567","severity":1,"message":"582","line":41,"column":5,"nodeType":"569","messageId":"570","endLine":41,"endColumn":9},{"ruleId":"567","severity":1,"message":"648","line":42,"column":5,"nodeType":"569","messageId":"570","endLine":42,"endColumn":17},{"ruleId":"567","severity":1,"message":"682","line":48,"column":8,"nodeType":"569","messageId":"570","endLine":48,"endColumn":31},{"ruleId":"567","severity":1,"message":"700","line":73,"column":15,"nodeType":"569","messageId":"570","endLine":73,"endColumn":27},{"ruleId":"567","severity":1,"message":"597","line":74,"column":18,"nodeType":"569","messageId":"570","endLine":74,"endColumn":28},{"ruleId":"567","severity":1,"message":"598","line":75,"column":16,"nodeType":"569","messageId":"570","endLine":75,"endColumn":24},{"ruleId":"567","severity":1,"message":"701","line":80,"column":18,"nodeType":"569","messageId":"570","endLine":80,"endColumn":41},{"ruleId":"567","severity":1,"message":"684","line":81,"column":16,"nodeType":"569","messageId":"570","endLine":81,"endColumn":37},{"ruleId":"567","severity":1,"message":"702","line":142,"column":11,"nodeType":"569","messageId":"570","endLine":142,"endColumn":29},{"ruleId":"567","severity":1,"message":"685","line":189,"column":11,"nodeType":"569","messageId":"570","endLine":189,"endColumn":30},{"ruleId":"567","severity":1,"message":"686","line":190,"column":11,"nodeType":"569","messageId":"570","endLine":190,"endColumn":31},{"ruleId":"567","severity":1,"message":"688","line":193,"column":11,"nodeType":"569","messageId":"570","endLine":193,"endColumn":51},{"ruleId":"567","severity":1,"message":"689","line":216,"column":11,"nodeType":"569","messageId":"570","endLine":216,"endColumn":20},{"ruleId":"567","severity":1,"message":"690","line":217,"column":11,"nodeType":"569","messageId":"570","endLine":217,"endColumn":32},{"ruleId":"567","severity":1,"message":"691","line":219,"column":11,"nodeType":"569","messageId":"570","endLine":219,"endColumn":21},{"ruleId":"567","severity":1,"message":"692","line":220,"column":11,"nodeType":"569","messageId":"570","endLine":220,"endColumn":39},{"ruleId":"567","severity":1,"message":"693","line":221,"column":11,"nodeType":"569","messageId":"570","endLine":221,"endColumn":30},{"ruleId":"650","severity":1,"message":"694","line":249,"column":9,"nodeType":"652","endLine":249,"endColumn":11,"suggestions":"703"},{"ruleId":"650","severity":1,"message":"704","line":292,"column":9,"nodeType":"652","endLine":292,"endColumn":22,"suggestions":"705"},{"ruleId":"567","severity":1,"message":"663","line":1,"column":17,"nodeType":"569","messageId":"570","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"664","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":27},{"ruleId":"567","severity":1,"message":"665","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":40},{"ruleId":"567","severity":1,"message":"666","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":16},{"ruleId":"567","severity":1,"message":"706","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":25},{"ruleId":"567","severity":1,"message":"619","line":15,"column":5,"nodeType":"569","messageId":"570","endLine":15,"endColumn":18},{"ruleId":"567","severity":1,"message":"643","line":21,"column":5,"nodeType":"569","messageId":"570","endLine":21,"endColumn":16},{"ruleId":"567","severity":1,"message":"644","line":22,"column":5,"nodeType":"569","messageId":"570","endLine":22,"endColumn":13},{"ruleId":"567","severity":1,"message":"645","line":23,"column":5,"nodeType":"569","messageId":"570","endLine":23,"endColumn":11},{"ruleId":"567","severity":1,"message":"683","line":24,"column":5,"nodeType":"569","messageId":"570","endLine":24,"endColumn":20},{"ruleId":"567","severity":1,"message":"585","line":25,"column":5,"nodeType":"569","messageId":"570","endLine":25,"endColumn":14},{"ruleId":"567","severity":1,"message":"646","line":26,"column":5,"nodeType":"569","messageId":"570","endLine":26,"endColumn":33},{"ruleId":"567","severity":1,"message":"707","line":33,"column":5,"nodeType":"569","messageId":"570","endLine":33,"endColumn":19},{"ruleId":"567","severity":1,"message":"708","line":36,"column":10,"nodeType":"569","messageId":"570","endLine":36,"endColumn":33},{"ruleId":"567","severity":1,"message":"574","line":36,"column":35,"nodeType":"569","messageId":"570","endLine":36,"endColumn":38},{"ruleId":"567","severity":1,"message":"667","line":37,"column":45,"nodeType":"569","messageId":"570","endLine":37,"endColumn":58},{"ruleId":"567","severity":1,"message":"669","line":45,"column":7,"nodeType":"569","messageId":"570","endLine":45,"endColumn":32},{"ruleId":"567","severity":1,"message":"709","line":65,"column":18,"nodeType":"569","messageId":"570","endLine":65,"endColumn":33},{"ruleId":"567","severity":1,"message":"649","line":66,"column":16,"nodeType":"569","messageId":"570","endLine":66,"endColumn":29},{"ruleId":"567","severity":1,"message":"710","line":134,"column":15,"nodeType":"569","messageId":"570","endLine":134,"endColumn":20},{"ruleId":"567","severity":1,"message":"662","line":180,"column":28,"nodeType":"569","messageId":"570","endLine":180,"endColumn":32},{"ruleId":"567","severity":1,"message":"632","line":256,"column":11,"nodeType":"569","messageId":"570","endLine":256,"endColumn":53},{"ruleId":"567","severity":1,"message":"711","line":260,"column":11,"nodeType":"569","messageId":"570","endLine":260,"endColumn":64},{"ruleId":"567","severity":1,"message":"712","line":261,"column":11,"nodeType":"569","messageId":"570","endLine":261,"endColumn":56},{"ruleId":"567","severity":1,"message":"670","line":264,"column":11,"nodeType":"569","messageId":"570","endLine":264,"endColumn":57},{"ruleId":"567","severity":1,"message":"713","line":265,"column":11,"nodeType":"569","messageId":"570","endLine":265,"endColumn":59},{"ruleId":"567","severity":1,"message":"714","line":266,"column":11,"nodeType":"569","messageId":"570","endLine":266,"endColumn":51},{"ruleId":"567","severity":1,"message":"663","line":1,"column":17,"nodeType":"569","messageId":"570","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"664","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":27},{"ruleId":"567","severity":1,"message":"665","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":40},{"ruleId":"567","severity":1,"message":"666","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":16},{"ruleId":"567","severity":1,"message":"706","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":25},{"ruleId":"567","severity":1,"message":"619","line":15,"column":5,"nodeType":"569","messageId":"570","endLine":15,"endColumn":18},{"ruleId":"567","severity":1,"message":"643","line":21,"column":5,"nodeType":"569","messageId":"570","endLine":21,"endColumn":16},{"ruleId":"567","severity":1,"message":"644","line":22,"column":5,"nodeType":"569","messageId":"570","endLine":22,"endColumn":13},{"ruleId":"567","severity":1,"message":"645","line":23,"column":5,"nodeType":"569","messageId":"570","endLine":23,"endColumn":11},{"ruleId":"567","severity":1,"message":"683","line":24,"column":5,"nodeType":"569","messageId":"570","endLine":24,"endColumn":20},{"ruleId":"567","severity":1,"message":"585","line":25,"column":5,"nodeType":"569","messageId":"570","endLine":25,"endColumn":14},{"ruleId":"567","severity":1,"message":"646","line":26,"column":5,"nodeType":"569","messageId":"570","endLine":26,"endColumn":33},{"ruleId":"567","severity":1,"message":"707","line":33,"column":5,"nodeType":"569","messageId":"570","endLine":33,"endColumn":19},{"ruleId":"567","severity":1,"message":"708","line":36,"column":10,"nodeType":"569","messageId":"570","endLine":36,"endColumn":33},{"ruleId":"567","severity":1,"message":"574","line":36,"column":35,"nodeType":"569","messageId":"570","endLine":36,"endColumn":38},{"ruleId":"567","severity":1,"message":"667","line":37,"column":48,"nodeType":"569","messageId":"570","endLine":37,"endColumn":61},{"ruleId":"567","severity":1,"message":"669","line":45,"column":7,"nodeType":"569","messageId":"570","endLine":45,"endColumn":32},{"ruleId":"567","severity":1,"message":"709","line":65,"column":18,"nodeType":"569","messageId":"570","endLine":65,"endColumn":33},{"ruleId":"567","severity":1,"message":"649","line":66,"column":16,"nodeType":"569","messageId":"570","endLine":66,"endColumn":29},{"ruleId":"567","severity":1,"message":"710","line":134,"column":15,"nodeType":"569","messageId":"570","endLine":134,"endColumn":20},{"ruleId":"567","severity":1,"message":"662","line":180,"column":30,"nodeType":"569","messageId":"570","endLine":180,"endColumn":34},{"ruleId":"567","severity":1,"message":"632","line":262,"column":11,"nodeType":"569","messageId":"570","endLine":262,"endColumn":53},{"ruleId":"567","severity":1,"message":"711","line":266,"column":11,"nodeType":"569","messageId":"570","endLine":266,"endColumn":64},{"ruleId":"567","severity":1,"message":"712","line":267,"column":11,"nodeType":"569","messageId":"570","endLine":267,"endColumn":56},{"ruleId":"567","severity":1,"message":"670","line":270,"column":11,"nodeType":"569","messageId":"570","endLine":270,"endColumn":57},{"ruleId":"567","severity":1,"message":"713","line":271,"column":11,"nodeType":"569","messageId":"570","endLine":271,"endColumn":59},{"ruleId":"567","severity":1,"message":"714","line":272,"column":11,"nodeType":"569","messageId":"570","endLine":272,"endColumn":51},{"ruleId":"567","severity":1,"message":"663","line":1,"column":17,"nodeType":"569","messageId":"570","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"664","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":27},{"ruleId":"567","severity":1,"message":"665","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":40},{"ruleId":"567","severity":1,"message":"666","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":16},{"ruleId":"567","severity":1,"message":"638","line":12,"column":5,"nodeType":"569","messageId":"570","endLine":12,"endColumn":11},{"ruleId":"567","severity":1,"message":"639","line":13,"column":5,"nodeType":"569","messageId":"570","endLine":13,"endColumn":18},{"ruleId":"567","severity":1,"message":"619","line":14,"column":5,"nodeType":"569","messageId":"570","endLine":14,"endColumn":18},{"ruleId":"567","severity":1,"message":"643","line":20,"column":5,"nodeType":"569","messageId":"570","endLine":20,"endColumn":16},{"ruleId":"567","severity":1,"message":"645","line":22,"column":5,"nodeType":"569","messageId":"570","endLine":22,"endColumn":11},{"ruleId":"567","severity":1,"message":"646","line":25,"column":5,"nodeType":"569","messageId":"570","endLine":25,"endColumn":33},{"ruleId":"567","severity":1,"message":"574","line":28,"column":10,"nodeType":"569","messageId":"570","endLine":28,"endColumn":13},{"ruleId":"567","severity":1,"message":"576","line":28,"column":28,"nodeType":"569","messageId":"570","endLine":28,"endColumn":36},{"ruleId":"567","severity":1,"message":"715","line":29,"column":10,"nodeType":"569","messageId":"570","endLine":29,"endColumn":24},{"ruleId":"567","severity":1,"message":"716","line":29,"column":26,"nodeType":"569","messageId":"570","endLine":29,"endColumn":38},{"ruleId":"567","severity":1,"message":"667","line":29,"column":40,"nodeType":"569","messageId":"570","endLine":29,"endColumn":53},{"ruleId":"567","severity":1,"message":"669","line":37,"column":7,"nodeType":"569","messageId":"570","endLine":37,"endColumn":32},{"ruleId":"567","severity":1,"message":"662","line":67,"column":30,"nodeType":"569","messageId":"570","endLine":67,"endColumn":34},{"ruleId":"567","severity":1,"message":"632","line":141,"column":11,"nodeType":"569","messageId":"570","endLine":141,"endColumn":53},{"ruleId":"567","severity":1,"message":"670","line":148,"column":11,"nodeType":"569","messageId":"570","endLine":148,"endColumn":57},{"ruleId":"567","severity":1,"message":"675","line":8,"column":10,"nodeType":"569","messageId":"570","endLine":8,"endColumn":33},{"ruleId":"567","severity":1,"message":"667","line":8,"column":35,"nodeType":"569","messageId":"570","endLine":8,"endColumn":48},{"ruleId":"567","severity":1,"message":"636","line":8,"column":50,"nodeType":"569","messageId":"570","endLine":8,"endColumn":70},{"ruleId":"567","severity":1,"message":"637","line":8,"column":72,"nodeType":"569","messageId":"570","endLine":8,"endColumn":92},{"ruleId":"567","severity":1,"message":"676","line":8,"column":94,"nodeType":"569","messageId":"570","endLine":8,"endColumn":107},{"ruleId":"567","severity":1,"message":"677","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":21},{"ruleId":"567","severity":1,"message":"576","line":9,"column":23,"nodeType":"569","messageId":"570","endLine":9,"endColumn":31},{"ruleId":"567","severity":1,"message":"678","line":10,"column":10,"nodeType":"569","messageId":"570","endLine":10,"endColumn":18},{"ruleId":"567","severity":1,"message":"679","line":10,"column":20,"nodeType":"569","messageId":"570","endLine":10,"endColumn":46},{"ruleId":"567","severity":1,"message":"717","line":10,"column":48,"nodeType":"569","messageId":"570","endLine":10,"endColumn":53},{"ruleId":"567","severity":1,"message":"621","line":10,"column":55,"nodeType":"569","messageId":"570","endLine":10,"endColumn":70},{"ruleId":"567","severity":1,"message":"612","line":10,"column":104,"nodeType":"569","messageId":"570","endLine":10,"endColumn":112},{"ruleId":"567","severity":1,"message":"718","line":11,"column":29,"nodeType":"569","messageId":"570","endLine":11,"endColumn":47},{"ruleId":"567","severity":1,"message":"681","line":11,"column":73,"nodeType":"569","messageId":"570","endLine":11,"endColumn":96},{"ruleId":"567","severity":1,"message":"663","line":1,"column":17,"nodeType":"569","messageId":"570","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"664","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":27},{"ruleId":"567","severity":1,"message":"665","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":40},{"ruleId":"567","severity":1,"message":"666","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":16},{"ruleId":"567","severity":1,"message":"706","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":25},{"ruleId":"567","severity":1,"message":"619","line":15,"column":5,"nodeType":"569","messageId":"570","endLine":15,"endColumn":18},{"ruleId":"567","severity":1,"message":"643","line":21,"column":5,"nodeType":"569","messageId":"570","endLine":21,"endColumn":16},{"ruleId":"567","severity":1,"message":"644","line":22,"column":5,"nodeType":"569","messageId":"570","endLine":22,"endColumn":13},{"ruleId":"567","severity":1,"message":"645","line":23,"column":5,"nodeType":"569","messageId":"570","endLine":23,"endColumn":11},{"ruleId":"567","severity":1,"message":"683","line":24,"column":5,"nodeType":"569","messageId":"570","endLine":24,"endColumn":20},{"ruleId":"567","severity":1,"message":"585","line":25,"column":5,"nodeType":"569","messageId":"570","endLine":25,"endColumn":14},{"ruleId":"567","severity":1,"message":"646","line":26,"column":5,"nodeType":"569","messageId":"570","endLine":26,"endColumn":33},{"ruleId":"567","severity":1,"message":"707","line":33,"column":5,"nodeType":"569","messageId":"570","endLine":33,"endColumn":19},{"ruleId":"567","severity":1,"message":"708","line":36,"column":10,"nodeType":"569","messageId":"570","endLine":36,"endColumn":33},{"ruleId":"567","severity":1,"message":"574","line":36,"column":35,"nodeType":"569","messageId":"570","endLine":36,"endColumn":38},{"ruleId":"567","severity":1,"message":"576","line":36,"column":53,"nodeType":"569","messageId":"570","endLine":36,"endColumn":61},{"ruleId":"567","severity":1,"message":"667","line":37,"column":45,"nodeType":"569","messageId":"570","endLine":37,"endColumn":58},{"ruleId":"567","severity":1,"message":"669","line":45,"column":7,"nodeType":"569","messageId":"570","endLine":45,"endColumn":32},{"ruleId":"567","severity":1,"message":"710","line":100,"column":15,"nodeType":"569","messageId":"570","endLine":100,"endColumn":20},{"ruleId":"567","severity":1,"message":"662","line":145,"column":28,"nodeType":"569","messageId":"570","endLine":145,"endColumn":32},{"ruleId":"567","severity":1,"message":"632","line":220,"column":11,"nodeType":"569","messageId":"570","endLine":220,"endColumn":53},{"ruleId":"567","severity":1,"message":"711","line":224,"column":11,"nodeType":"569","messageId":"570","endLine":224,"endColumn":64},{"ruleId":"567","severity":1,"message":"712","line":225,"column":11,"nodeType":"569","messageId":"570","endLine":225,"endColumn":56},{"ruleId":"567","severity":1,"message":"670","line":228,"column":11,"nodeType":"569","messageId":"570","endLine":228,"endColumn":57},{"ruleId":"567","severity":1,"message":"713","line":229,"column":11,"nodeType":"569","messageId":"570","endLine":229,"endColumn":59},{"ruleId":"567","severity":1,"message":"714","line":230,"column":11,"nodeType":"569","messageId":"570","endLine":230,"endColumn":51},{"ruleId":"567","severity":1,"message":"664","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":27},{"ruleId":"567","severity":1,"message":"629","line":7,"column":5,"nodeType":"569","messageId":"570","endLine":7,"endColumn":19},{"ruleId":"567","severity":1,"message":"638","line":8,"column":5,"nodeType":"569","messageId":"570","endLine":8,"endColumn":11},{"ruleId":"567","severity":1,"message":"619","line":9,"column":5,"nodeType":"569","messageId":"570","endLine":9,"endColumn":18},{"ruleId":"567","severity":1,"message":"641","line":11,"column":5,"nodeType":"569","messageId":"570","endLine":11,"endColumn":17},{"ruleId":"567","severity":1,"message":"719","line":14,"column":5,"nodeType":"569","messageId":"570","endLine":14,"endColumn":16},{"ruleId":"567","severity":1,"message":"648","line":18,"column":5,"nodeType":"569","messageId":"570","endLine":18,"endColumn":17},{"ruleId":"567","severity":1,"message":"621","line":22,"column":17,"nodeType":"569","messageId":"570","endLine":22,"endColumn":32},{"ruleId":"567","severity":1,"message":"720","line":30,"column":6,"nodeType":"569","messageId":"570","endLine":30,"endColumn":11},{"ruleId":"567","severity":1,"message":"709","line":46,"column":18,"nodeType":"569","messageId":"570","endLine":46,"endColumn":33},{"ruleId":"567","severity":1,"message":"649","line":47,"column":16,"nodeType":"569","messageId":"570","endLine":47,"endColumn":29},{"ruleId":"567","severity":1,"message":"721","line":80,"column":11,"nodeType":"569","messageId":"570","endLine":80,"endColumn":34},{"ruleId":"567","severity":1,"message":"722","line":185,"column":7,"nodeType":"569","messageId":"570","endLine":185,"endColumn":19},{"ruleId":"567","severity":1,"message":"607","line":2,"column":10,"nodeType":"569","messageId":"570","endLine":2,"endColumn":15},{"ruleId":"567","severity":1,"message":"608","line":2,"column":17,"nodeType":"569","messageId":"570","endLine":2,"endColumn":25},{"ruleId":"567","severity":1,"message":"609","line":3,"column":10,"nodeType":"569","messageId":"570","endLine":3,"endColumn":14},{"ruleId":"567","severity":1,"message":"610","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":18},{"ruleId":"567","severity":1,"message":"611","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":34},{"ruleId":"567","severity":1,"message":"717","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":15},{"ruleId":"567","severity":1,"message":"576","line":6,"column":10,"nodeType":"569","messageId":"570","endLine":6,"endColumn":18},{"ruleId":"567","severity":1,"message":"613","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":30},{"ruleId":"567","severity":1,"message":"723","line":65,"column":11,"nodeType":"569","messageId":"570","endLine":65,"endColumn":44},{"ruleId":"567","severity":1,"message":"629","line":7,"column":3,"nodeType":"569","messageId":"570","endLine":7,"endColumn":17},{"ruleId":"567","severity":1,"message":"638","line":8,"column":3,"nodeType":"569","messageId":"570","endLine":8,"endColumn":9},{"ruleId":"567","severity":1,"message":"619","line":9,"column":3,"nodeType":"569","messageId":"570","endLine":9,"endColumn":16},{"ruleId":"567","severity":1,"message":"641","line":11,"column":3,"nodeType":"569","messageId":"570","endLine":11,"endColumn":15},{"ruleId":"567","severity":1,"message":"719","line":14,"column":3,"nodeType":"569","messageId":"570","endLine":14,"endColumn":14},{"ruleId":"567","severity":1,"message":"667","line":18,"column":10,"nodeType":"569","messageId":"570","endLine":18,"endColumn":23},{"ruleId":"567","severity":1,"message":"717","line":19,"column":10,"nodeType":"569","messageId":"570","endLine":19,"endColumn":15},{"ruleId":"567","severity":1,"message":"621","line":19,"column":17,"nodeType":"569","messageId":"570","endLine":19,"endColumn":32},{"ruleId":"567","severity":1,"message":"574","line":20,"column":10,"nodeType":"569","messageId":"570","endLine":20,"endColumn":13},{"ruleId":"567","severity":1,"message":"576","line":20,"column":15,"nodeType":"569","messageId":"570","endLine":20,"endColumn":23},{"ruleId":"567","severity":1,"message":"720","line":24,"column":6,"nodeType":"569","messageId":"570","endLine":24,"endColumn":11},{"ruleId":"567","severity":1,"message":"724","line":34,"column":10,"nodeType":"569","messageId":"570","endLine":34,"endColumn":21},{"ruleId":"567","severity":1,"message":"725","line":34,"column":34,"nodeType":"569","messageId":"570","endLine":34,"endColumn":43},{"ruleId":"567","severity":1,"message":"721","line":59,"column":7,"nodeType":"569","messageId":"570","endLine":59,"endColumn":30},{"ruleId":"567","severity":1,"message":"722","line":133,"column":7,"nodeType":"569","messageId":"570","endLine":133,"endColumn":19},{"ruleId":"567","severity":1,"message":"726","line":1,"column":27,"nodeType":"569","messageId":"570","endLine":1,"endColumn":36},{"ruleId":"567","severity":1,"message":"665","line":4,"column":20,"nodeType":"569","messageId":"570","endLine":4,"endColumn":40},{"ruleId":"567","severity":1,"message":"584","line":6,"column":5,"nodeType":"569","messageId":"570","endLine":6,"endColumn":16},{"ruleId":"567","severity":1,"message":"576","line":13,"column":23,"nodeType":"569","messageId":"570","endLine":13,"endColumn":31},{"ruleId":"567","severity":1,"message":"662","line":26,"column":30,"nodeType":"569","messageId":"570","endLine":26,"endColumn":34},{"ruleId":"567","severity":1,"message":"606","line":3,"column":10,"nodeType":"569","messageId":"570","endLine":3,"endColumn":19},{"ruleId":"567","severity":1,"message":"607","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":15},{"ruleId":"567","severity":1,"message":"608","line":4,"column":17,"nodeType":"569","messageId":"570","endLine":4,"endColumn":25},{"ruleId":"567","severity":1,"message":"611","line":6,"column":20,"nodeType":"569","messageId":"570","endLine":6,"endColumn":34},{"ruleId":"567","severity":1,"message":"574","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":13},{"ruleId":"567","severity":1,"message":"674","line":12,"column":10,"nodeType":"569","messageId":"570","endLine":12,"endColumn":26},{"ruleId":"567","severity":1,"message":"618","line":12,"column":28,"nodeType":"569","messageId":"570","endLine":12,"endColumn":48},{"ruleId":"567","severity":1,"message":"648","line":12,"column":100,"nodeType":"569","messageId":"570","endLine":12,"endColumn":112},{"ruleId":"567","severity":1,"message":"727","line":12,"column":114,"nodeType":"569","messageId":"570","endLine":12,"endColumn":129},{"ruleId":"567","severity":1,"message":"728","line":42,"column":5,"nodeType":"569","messageId":"570","endLine":42,"endColumn":12},{"ruleId":"567","severity":1,"message":"729","line":43,"column":5,"nodeType":"569","messageId":"570","endLine":43,"endColumn":10},{"ruleId":"650","severity":1,"message":"730","line":71,"column":6,"nodeType":"652","endLine":71,"endColumn":26,"suggestions":"731"},{"ruleId":"567","severity":1,"message":"732","line":83,"column":34,"nodeType":"569","messageId":"570","endLine":83,"endColumn":52},{"ruleId":"654","severity":1,"message":"733","line":100,"column":60,"nodeType":"656","messageId":"734","endLine":100,"endColumn":62},{"ruleId":"567","severity":1,"message":"735","line":196,"column":9,"nodeType":"569","messageId":"570","endLine":196,"endColumn":19},{"ruleId":"577","replacedBy":"578"},{"ruleId":"579","replacedBy":"580"},{"ruleId":"567","severity":1,"message":"606","line":3,"column":10,"nodeType":"569","messageId":"570","endLine":3,"endColumn":19},{"ruleId":"567","severity":1,"message":"607","line":4,"column":10,"nodeType":"569","messageId":"570","endLine":4,"endColumn":15},{"ruleId":"567","severity":1,"message":"608","line":4,"column":17,"nodeType":"569","messageId":"570","endLine":4,"endColumn":25},{"ruleId":"567","severity":1,"message":"609","line":5,"column":10,"nodeType":"569","messageId":"570","endLine":5,"endColumn":14},{"ruleId":"567","severity":1,"message":"610","line":6,"column":10,"nodeType":"569","messageId":"570","endLine":6,"endColumn":18},{"ruleId":"567","severity":1,"message":"611","line":6,"column":20,"nodeType":"569","messageId":"570","endLine":6,"endColumn":34},{"ruleId":"567","severity":1,"message":"675","line":8,"column":10,"nodeType":"569","messageId":"570","endLine":8,"endColumn":33},{"ruleId":"567","severity":1,"message":"736","line":8,"column":35,"nodeType":"569","messageId":"570","endLine":8,"endColumn":47},{"ruleId":"567","severity":1,"message":"574","line":9,"column":10,"nodeType":"569","messageId":"570","endLine":9,"endColumn":13},{"ruleId":"567","severity":1,"message":"576","line":9,"column":28,"nodeType":"569","messageId":"570","endLine":9,"endColumn":36},{"ruleId":"567","severity":1,"message":"613","line":10,"column":10,"nodeType":"569","messageId":"570","endLine":10,"endColumn":30},{"ruleId":"567","severity":1,"message":"737","line":11,"column":23,"nodeType":"569","messageId":"570","endLine":11,"endColumn":36},{"ruleId":"567","severity":1,"message":"674","line":12,"column":10,"nodeType":"569","messageId":"570","endLine":12,"endColumn":26},{"ruleId":"567","severity":1,"message":"648","line":12,"column":100,"nodeType":"569","messageId":"570","endLine":12,"endColumn":112},{"ruleId":"567","severity":1,"message":"727","line":12,"column":114,"nodeType":"569","messageId":"570","endLine":12,"endColumn":129},{"ruleId":"567","severity":1,"message":"738","line":14,"column":10,"nodeType":"569","messageId":"570","endLine":14,"endColumn":24},{"ruleId":"567","severity":1,"message":"739","line":14,"column":26,"nodeType":"569","messageId":"570","endLine":14,"endColumn":36},{"ruleId":"567","severity":1,"message":"740","line":14,"column":38,"nodeType":"569","messageId":"570","endLine":14,"endColumn":48},{"ruleId":"567","severity":1,"message":"741","line":14,"column":50,"nodeType":"569","messageId":"570","endLine":14,"endColumn":62},{"ruleId":"567","severity":1,"message":"742","line":15,"column":10,"nodeType":"569","messageId":"570","endLine":15,"endColumn":18},{"ruleId":"567","severity":1,"message":"743","line":68,"column":36,"nodeType":"569","messageId":"570","endLine":68,"endColumn":54},{"ruleId":"654","severity":1,"message":"733","line":86,"column":64,"nodeType":"656","messageId":"734","endLine":86,"endColumn":66},{"ruleId":"567","severity":1,"message":"735","line":185,"column":11,"nodeType":"569","messageId":"570","endLine":185,"endColumn":21},{"ruleId":"567","severity":1,"message":"744","line":191,"column":11,"nodeType":"569","messageId":"570","endLine":191,"endColumn":23},{"ruleId":"567","severity":1,"message":"745","line":206,"column":11,"nodeType":"569","messageId":"570","endLine":206,"endColumn":20},{"ruleId":"567","severity":1,"message":"746","line":221,"column":11,"nodeType":"569","messageId":"570","endLine":221,"endColumn":25},{"ruleId":"567","severity":1,"message":"689","line":237,"column":11,"nodeType":"569","messageId":"570","endLine":237,"endColumn":20},{"ruleId":"567","severity":1,"message":"747","line":238,"column":11,"nodeType":"569","messageId":"570","endLine":238,"endColumn":32},{"ruleId":"567","severity":1,"message":"748","line":7,"column":17,"nodeType":"569","messageId":"570","endLine":7,"endColumn":22},{"ruleId":"567","severity":1,"message":"749","line":7,"column":24,"nodeType":"569","messageId":"570","endLine":7,"endColumn":38},{"ruleId":"567","severity":1,"message":"750","line":7,"column":40,"nodeType":"569","messageId":"570","endLine":7,"endColumn":57},{"ruleId":"567","severity":1,"message":"667","line":9,"column":46,"nodeType":"569","messageId":"570","endLine":9,"endColumn":59},{"ruleId":"567","severity":1,"message":"709","line":68,"column":18,"nodeType":"569","messageId":"570","endLine":68,"endColumn":33},{"ruleId":"567","severity":1,"message":"649","line":69,"column":16,"nodeType":"569","messageId":"570","endLine":69,"endColumn":29},{"ruleId":"567","severity":1,"message":"662","line":82,"column":30,"nodeType":"569","messageId":"570","endLine":82,"endColumn":34},{"ruleId":"751","severity":1,"message":"752","line":124,"column":17,"nodeType":"569","messageId":"753","endLine":124,"endColumn":21},{"ruleId":"751","severity":1,"message":"752","line":134,"column":17,"nodeType":"569","messageId":"753","endLine":134,"endColumn":21},{"ruleId":"751","severity":1,"message":"754","line":139,"column":17,"nodeType":"569","messageId":"753","endLine":139,"endColumn":26},{"ruleId":"751","severity":1,"message":"752","line":145,"column":17,"nodeType":"569","messageId":"753","endLine":145,"endColumn":21},{"ruleId":"751","severity":1,"message":"755","line":154,"column":17,"nodeType":"569","messageId":"753","endLine":154,"endColumn":22},{"ruleId":"751","severity":1,"message":"752","line":156,"column":17,"nodeType":"569","messageId":"753","endLine":156,"endColumn":21},"@typescript-eslint/no-unused-vars","'Customizer' is defined but never used.","Identifier","unusedVar","'AUTH_TOKEN' is defined but never used.","'resolvers' is defined but never used.","'InMemoryCache' is defined but never used.","'gql' is defined but never used.","'ApolloLink' is defined but never used.","'useQuery' is defined but never used.","no-native-reassign",["756"],"no-negated-in-lhs",["757"],"'logo' is defined but never used.","'Text' is defined but never used.","'Link' is defined but never used.","'FontWeights' is defined but never used.","'IComboBox' is defined but never used.","'useApolloClient' is defined but never used.","'PDFViewer' is defined but never used.","'PDFDownloadLink' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'search' is assigned a value but never used.","'suburbLoading' is assigned a value but never used.","'suburbError' is assigned a value but never used.","'regionLoading' is assigned a value but never used.","'regionError' is assigned a value but never used.","'navigationError' is assigned a value but never used.","'pdfLoading' is assigned a value but never used.","'pdfError' is assigned a value but never used.","'propertyListLoading' is assigned a value but never used.","'propertyListError' is assigned a value but never used.","'selectedPropertyList' is assigned a value but never used.","'landlordLoading' is assigned a value but never used.","'landlordError' is assigned a value but never used.","'ResolverMap' is defined but never used.","'AppResolvers' is defined but never used.","'TextField' is defined but never used.","'Image' is defined but never used.","'ImageFit' is defined but never used.","'Icon' is defined but never used.","'Checkbox' is defined but never used.","'ICheckboxProps' is defined but never used.","'Property' is defined but never used.","'selectedPropertyList' is defined but never used.","'selectedMap2' is assigned a value but never used.","'properties' is assigned a value but never used.","'setProperties' is assigned a value but never used.","'Pivot' is defined but never used.","'IContextualMenuProps' is defined but never used.","'DefaultButton' is defined but never used.","'isLoggedInVar' is defined but never used.","'NavigationState' is defined but never used.","'pivotStyles' is assigned a value but never used.","'signoutIcon' is assigned a value but never used.","'getTabId' is assigned a value but never used.","'handleLinkClick' is assigned a value but never used.","'primaryButtonStyles' is assigned a value but never used.","'getTheme' is defined but never used.","'mergeStyleSets' is defined but never used.","'ContextualMenu' is defined but never used.","'PrimaryButton' is defined but never used.","'IconButton' is defined but never used.","'textFieldStyles' is assigned a value but never used.","'signInIcon' is assigned a value but never used.","'Dropdown' is defined but never used.","'IDropdownOption' is defined but never used.","'GET_DISTINCT_SUBURBS' is defined but never used.","'GET_DISTINCT_REGIONS' is defined but never used.","'Toggle' is defined but never used.","'IToggleStyles' is defined but never used.","'Modal' is defined but never used.","'IDragOptions' is defined but never used.","'IModalStyles' is defined but never used.","'mergeStyles' is defined but never used.","'ComboBox' is defined but never used.","'Fabric' is defined but never used.","'SelectableOptionMenuItemType' is defined but never used.","'IComboBoxStyles' is defined but never used.","'IStackStyles' is defined but never used.","'propertyError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dismissPanel' and 'openPanel'. Either include them or remove the dependency array.","ArrayExpression",["758"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useCallback has missing dependencies: 'cancelIcon', 'deleteIconStyles', 'editIcon', 'editIconStyles', and 'handlePanelDismiss'. Either include them or remove the dependency array.",["759"],"'getLatitude' is assigned a value but never used.","'getLongitude' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'useBoolean' is defined but never used.","'DropdownMenuItemType' is defined but never used.","'Slider' is defined but never used.","'GET_NAV_STATE' is defined but never used.","'GET_LANDLORDS' is defined but never used.","'dragOptions' is assigned a value but never used.","'dropdownSectorStyles' is assigned a value but never used.","React Hook React.useCallback has an unnecessary dependency: 'selectedLandlord'. Either exclude it or remove the dependency array.",["760"],["761"],"'CommandBarButton' is defined but never used.","'GET_SELECTED_PROPERTIES' is defined but never used.","'UPDATE_IMAGES' is defined but never used.","'useMutation' is defined but never used.","'Mutation' is defined but never used.","'MutationUpdatePropertyArgs' is defined but never used.","'Premises' is defined but never used.","'selectedPropertyListVar' is defined but never used.","'SelectedPropertyListPDF' is defined but never used.","'IComboBoxOption' is defined but never used.","'propertyListDataError' is assigned a value but never used.","'addIcon' is assigned a value but never used.","'editIcon' is assigned a value but never used.","'deleteIcon' is assigned a value but never used.","'commandBarStyles' is assigned a value but never used.","'boldStyle' is assigned a value but never used.","'propertyDetailsStyles' is assigned a value but never used.","'boldStyle2' is assigned a value but never used.","'propertyDetailsHeadingStyles' is assigned a value but never used.","'propertyNotesStyles' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'cancelIcon' and 'cancelIconStyles'. Either include them or remove the dependency array.",["762"],"'QueryMultiPropertyArgs' is defined but never used.","'Agent' is defined but never used.","'BlobProvider' is defined but never used.","'PreviewPDFPanel' is defined but never used.","'pdfVariables' is assigned a value but never used.","'propertyListDataLoading' is assigned a value but never used.","'handlePDFDDownload' is assigned a value but never used.",["763"],"React Hook React.useCallback has missing dependencies: 'agentOptions', 'buttonStyles', 'dropdownStyles', 'handlePreviewPDF', 'onChangeEnquiryName', 'selectedAgent', and 'textFieldStyles'. Either include them or remove the dependency array.",["764"],"'IRenderFunction' is defined but never used.","'ICalendarProps' is defined but never used.","'defaultDataIdFromObject' is defined but never used.","'propertyLoading' is assigned a value but never used.","'today' is assigned a value but never used.","'textFieldCoordinatesStyles' is assigned a value but never used.","'textFieldErfStyles' is assigned a value but never used.","'dropdownProvinceStyles' is assigned a value but never used.","'comboBoxStyles' is assigned a value but never used.","'GET_PROPERTIES' is defined but never used.","'NEW_PROPERTY' is defined but never used.","'Query' is defined but never used.","'navigationStateVar' is defined but never used.","'ILayerProps' is defined but never used.","'Maybe' is defined but never used.","'modalProps' is assigned a value but never used.","'toggleStyles' is assigned a value but never used.","'tableCellBelowStyles' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'showModal' is assigned a value but never used.","'useEffect' is defined but never used.","'initializeIcons' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'property'. Either include it or remove the dependency array.",["765"],"'deletePropertyData' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'imageClass' is assigned a value but never used.","'GET_PREMISES' is defined but never used.","'registerIcons' is defined but never used.","'IndustrialIcon' is defined but never used.","'RetailIcon' is defined but never used.","'OfficeIcon' is defined but never used.","'MixedUseIcon' is defined but never used.","'FontIcon' is defined but never used.","'deletePremisesData' is assigned a value but never used.","'chevronClass' is assigned a value but never used.","'iconClass' is assigned a value but never used.","'chevronIconDiv' is assigned a value but never used.","'propertyHeadingStyles' is assigned a value but never used.","'Video' is defined but never used.","'Transformation' is defined but never used.","'CloudinaryContext' is defined but never used.","@typescript-eslint/no-redeclare","'rest' is already defined.","redeclared","'remaining' is already defined.","'final' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"770","fix":"772"},{"desc":"773","fix":"774"},{"desc":"773","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},"Update the dependencies array to be: [dismissPanel, navigationState, openPanel]",{"range":"780","text":"781"},"Update the dependencies array to be: [cancelIcon, deleteIconStyles, editIcon, editIconStyles, handlePanelDismiss]",{"range":"782","text":"783"},"Update the dependencies array to be: []",{"range":"784","text":"785"},{"range":"786","text":"785"},"Update the dependencies array to be: [cancelIcon, cancelIconStyles]",{"range":"787","text":"788"},{"range":"789","text":"788"},"Update the dependencies array to be: [agentOptions, buttonStyles, dropdownStyles, enquiryName, handlePreviewPDF, onChangeEnquiryName, selectedAgent, textFieldStyles]",{"range":"790","text":"791"},"Update the dependencies array to be: [property, selectedProperties]",{"range":"792","text":"793"},[3406,3423],"[dismissPanel, navigationState, openPanel]",[8543,8545],"[cancelIcon, deleteIconStyles, editIcon, editIconStyles, handlePanelDismiss]",[11219,11237],"[]",[12058,12076],[5213,5215],"[cancelIcon, cancelIconStyles]",[8656,8658],[10340,10353],"[agentOptions, buttonStyles, dropdownStyles, enquiryName, handlePreviewPDF, onChangeEnquiryName, selectedAgent, textFieldStyles]",[2480,2500],"[property, selectedProperties]"]